
BPM_Digitizer_Analyser.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000062f8  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004062f8  004062f8  000162f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009b8  20000000  00406300  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00008444  200009b8  00406cb8  000209b8  2**2
                  ALLOC
  4 .stack        00003004  20008dfc  0040f0fc  000209b8  2**0
                  ALLOC
  5 .ARM.attributes 0000002e  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
  7 .debug_info   000150ae  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000316d  00000000  00000000  00035aed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004566  00000000  00000000  00038c5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000918  00000000  00000000  0003d1c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000908  00000000  00000000  0003dad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019026  00000000  00000000  0003e3e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000c045  00000000  00000000  00057406  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0006559d  00000000  00000000  0006344b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002498  00000000  00000000  000c89e8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	00 be 00 20 b1 09 40 00 ad 09 40 00 ad 09 40 00     ... ..@...@...@.
  400010:	ad 09 40 00 ad 09 40 00 ad 09 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	ad 09 40 00 ad 09 40 00 00 00 00 00 ad 09 40 00     ..@...@.......@.
  40003c:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  40004c:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  40005c:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  40006c:	ad 09 40 00 ad 09 40 00 ad 09 40 00 49 0c 40 00     ..@...@...@.I.@.
  40007c:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  40008c:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  40009c:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  4000ac:	ad 09 40 00 ad 09 40 00 ad 09 40 00 c5 06 40 00     ..@...@...@...@.
  4000bc:	d9 06 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  4000cc:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  4000dc:	ad 09 40 00 ad 09 40 00 ad 09 40 00 ad 09 40 00     ..@...@...@...@.
  4000ec:	ad 09 40 00 ad 09 40 00 ad 09 40 00                 ..@...@...@.

004000f8 <__do_global_dtors_aux>:
  4000f8:	b510      	push	{r4, lr}
  4000fa:	4c05      	ldr	r4, [pc, #20]	; (400110 <__do_global_dtors_aux+0x18>)
  4000fc:	7823      	ldrb	r3, [r4, #0]
  4000fe:	b933      	cbnz	r3, 40010e <__do_global_dtors_aux+0x16>
  400100:	4b04      	ldr	r3, [pc, #16]	; (400114 <__do_global_dtors_aux+0x1c>)
  400102:	b113      	cbz	r3, 40010a <__do_global_dtors_aux+0x12>
  400104:	4804      	ldr	r0, [pc, #16]	; (400118 <__do_global_dtors_aux+0x20>)
  400106:	f3af 8000 	nop.w
  40010a:	2301      	movs	r3, #1
  40010c:	7023      	strb	r3, [r4, #0]
  40010e:	bd10      	pop	{r4, pc}
  400110:	200009b8 	.word	0x200009b8
  400114:	00000000 	.word	0x00000000
  400118:	00406300 	.word	0x00406300

0040011c <frame_dummy>:
  40011c:	4b0c      	ldr	r3, [pc, #48]	; (400150 <frame_dummy+0x34>)
  40011e:	b143      	cbz	r3, 400132 <frame_dummy+0x16>
  400120:	480c      	ldr	r0, [pc, #48]	; (400154 <frame_dummy+0x38>)
  400122:	490d      	ldr	r1, [pc, #52]	; (400158 <frame_dummy+0x3c>)
  400124:	b510      	push	{r4, lr}
  400126:	f3af 8000 	nop.w
  40012a:	480c      	ldr	r0, [pc, #48]	; (40015c <frame_dummy+0x40>)
  40012c:	6803      	ldr	r3, [r0, #0]
  40012e:	b923      	cbnz	r3, 40013a <frame_dummy+0x1e>
  400130:	bd10      	pop	{r4, pc}
  400132:	480a      	ldr	r0, [pc, #40]	; (40015c <frame_dummy+0x40>)
  400134:	6803      	ldr	r3, [r0, #0]
  400136:	b933      	cbnz	r3, 400146 <frame_dummy+0x2a>
  400138:	4770      	bx	lr
  40013a:	4b09      	ldr	r3, [pc, #36]	; (400160 <frame_dummy+0x44>)
  40013c:	2b00      	cmp	r3, #0
  40013e:	d0f7      	beq.n	400130 <frame_dummy+0x14>
  400140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400144:	4718      	bx	r3
  400146:	4b06      	ldr	r3, [pc, #24]	; (400160 <frame_dummy+0x44>)
  400148:	2b00      	cmp	r3, #0
  40014a:	d0f5      	beq.n	400138 <frame_dummy+0x1c>
  40014c:	4718      	bx	r3
  40014e:	bf00      	nop
  400150:	00000000 	.word	0x00000000
  400154:	00406300 	.word	0x00406300
  400158:	200009bc 	.word	0x200009bc
  40015c:	00406300 	.word	0x00406300
  400160:	00000000 	.word	0x00000000

00400164 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400164:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400166:	480e      	ldr	r0, [pc, #56]	; (4001a0 <sysclk_init+0x3c>)
  400168:	4b0e      	ldr	r3, [pc, #56]	; (4001a4 <sysclk_init+0x40>)
  40016a:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  40016c:	213e      	movs	r1, #62	; 0x3e
  40016e:	2000      	movs	r0, #0
  400170:	4b0d      	ldr	r3, [pc, #52]	; (4001a8 <sysclk_init+0x44>)
  400172:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400174:	4c0d      	ldr	r4, [pc, #52]	; (4001ac <sysclk_init+0x48>)
  400176:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400178:	2800      	cmp	r0, #0
  40017a:	d0fc      	beq.n	400176 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  40017c:	4b0c      	ldr	r3, [pc, #48]	; (4001b0 <sysclk_init+0x4c>)
  40017e:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400180:	4a0c      	ldr	r2, [pc, #48]	; (4001b4 <sysclk_init+0x50>)
  400182:	4b0d      	ldr	r3, [pc, #52]	; (4001b8 <sysclk_init+0x54>)
  400184:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	UNUSED(ul_pll_id);
	return pmc_is_locked_pllack();
  400186:	4c0d      	ldr	r4, [pc, #52]	; (4001bc <sysclk_init+0x58>)
  400188:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40018a:	2800      	cmp	r0, #0
  40018c:	d0fc      	beq.n	400188 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40018e:	2010      	movs	r0, #16
  400190:	4b0b      	ldr	r3, [pc, #44]	; (4001c0 <sysclk_init+0x5c>)
  400192:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400194:	4b0b      	ldr	r3, [pc, #44]	; (4001c4 <sysclk_init+0x60>)
  400196:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400198:	480b      	ldr	r0, [pc, #44]	; (4001c8 <sysclk_init+0x64>)
  40019a:	4b02      	ldr	r3, [pc, #8]	; (4001a4 <sysclk_init+0x40>)
  40019c:	4798      	blx	r3
  40019e:	bd10      	pop	{r4, pc}
  4001a0:	07270e00 	.word	0x07270e00
  4001a4:	00400b85 	.word	0x00400b85
  4001a8:	004007b5 	.word	0x004007b5
  4001ac:	00400809 	.word	0x00400809
  4001b0:	00400819 	.word	0x00400819
  4001b4:	200f3f01 	.word	0x200f3f01
  4001b8:	400e0400 	.word	0x400e0400
  4001bc:	00400829 	.word	0x00400829
  4001c0:	00400751 	.word	0x00400751
  4001c4:	00400a79 	.word	0x00400a79
  4001c8:	05b8d800 	.word	0x05b8d800

004001cc <usart_serial_write_packet>:
 *
 */
status_code_t usart_serial_write_packet(usart_if usart, const uint8_t *data,
		size_t len)
{
	while (len) {
  4001cc:	2a00      	cmp	r2, #0
  4001ce:	d037      	beq.n	400240 <usart_serial_write_packet+0x74>
{
  4001d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4001d4:	4693      	mov	fp, r2
  4001d6:	4605      	mov	r5, r0
  4001d8:	460f      	mov	r7, r1
  4001da:	448b      	add	fp, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4001dc:	f8df 8070 	ldr.w	r8, [pc, #112]	; 400250 <usart_serial_write_packet+0x84>
		while (uart_write((Uart*)p_usart, c)!=0);
  4001e0:	4e18      	ldr	r6, [pc, #96]	; (400244 <usart_serial_write_packet+0x78>)
		return 1;
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4001e2:	f8df 9070 	ldr.w	r9, [pc, #112]	; 400254 <usart_serial_write_packet+0x88>
  4001e6:	e006      	b.n	4001f6 <usart_serial_write_packet+0x2a>
		while (uart_write((Uart*)p_usart, c)!=0);
  4001e8:	4621      	mov	r1, r4
  4001ea:	4640      	mov	r0, r8
  4001ec:	47b0      	blx	r6
  4001ee:	2800      	cmp	r0, #0
  4001f0:	d1fa      	bne.n	4001e8 <usart_serial_write_packet+0x1c>
	while (len) {
  4001f2:	45bb      	cmp	fp, r7
  4001f4:	d021      	beq.n	40023a <usart_serial_write_packet+0x6e>
		usart_serial_putchar(usart, *data);
  4001f6:	f817 4b01 	ldrb.w	r4, [r7], #1
	if (UART0 == (Uart*)p_usart) {
  4001fa:	4545      	cmp	r5, r8
  4001fc:	d0f4      	beq.n	4001e8 <usart_serial_write_packet+0x1c>
	if (UART1 == (Uart*)p_usart) {
  4001fe:	454d      	cmp	r5, r9
  400200:	d00d      	beq.n	40021e <usart_serial_write_packet+0x52>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400202:	4b11      	ldr	r3, [pc, #68]	; (400248 <usart_serial_write_packet+0x7c>)
  400204:	429d      	cmp	r5, r3
  400206:	d010      	beq.n	40022a <usart_serial_write_packet+0x5e>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400208:	4b10      	ldr	r3, [pc, #64]	; (40024c <usart_serial_write_packet+0x80>)
  40020a:	429d      	cmp	r5, r3
  40020c:	d1f1      	bne.n	4001f2 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  40020e:	f8df a048 	ldr.w	sl, [pc, #72]	; 400258 <usart_serial_write_packet+0x8c>
  400212:	4621      	mov	r1, r4
  400214:	480d      	ldr	r0, [pc, #52]	; (40024c <usart_serial_write_packet+0x80>)
  400216:	47d0      	blx	sl
  400218:	2800      	cmp	r0, #0
  40021a:	d1fa      	bne.n	400212 <usart_serial_write_packet+0x46>
  40021c:	e7e9      	b.n	4001f2 <usart_serial_write_packet+0x26>
		while (uart_write((Uart*)p_usart, c)!=0);
  40021e:	4621      	mov	r1, r4
  400220:	4648      	mov	r0, r9
  400222:	47b0      	blx	r6
  400224:	2800      	cmp	r0, #0
  400226:	d1fa      	bne.n	40021e <usart_serial_write_packet+0x52>
  400228:	e7e3      	b.n	4001f2 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  40022a:	f8df a02c 	ldr.w	sl, [pc, #44]	; 400258 <usart_serial_write_packet+0x8c>
  40022e:	4621      	mov	r1, r4
  400230:	4805      	ldr	r0, [pc, #20]	; (400248 <usart_serial_write_packet+0x7c>)
  400232:	47d0      	blx	sl
  400234:	2800      	cmp	r0, #0
  400236:	d1fa      	bne.n	40022e <usart_serial_write_packet+0x62>
  400238:	e7db      	b.n	4001f2 <usart_serial_write_packet+0x26>
		len--;
		data++;
	}
	return STATUS_OK;
}
  40023a:	2000      	movs	r0, #0
  40023c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400240:	2000      	movs	r0, #0
  400242:	4770      	bx	lr
  400244:	0040095f 	.word	0x0040095f
  400248:	400a0000 	.word	0x400a0000
  40024c:	400a4000 	.word	0x400a4000
  400250:	400e0600 	.word	0x400e0600
  400254:	40060600 	.word	0x40060600
  400258:	00400981 	.word	0x00400981

0040025c <usart_serial_read_packet>:
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
	while (len) {
  40025c:	2a00      	cmp	r2, #0
  40025e:	d03f      	beq.n	4002e0 <usart_serial_read_packet+0x84>
{
  400260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400264:	b083      	sub	sp, #12
  400266:	4606      	mov	r6, r0
  400268:	460c      	mov	r4, r1
  40026a:	4693      	mov	fp, r2
  40026c:	448b      	add	fp, r1
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  40026e:	4f1d      	ldr	r7, [pc, #116]	; (4002e4 <usart_serial_read_packet+0x88>)
		while (uart_read((Uart*)p_usart, data));
  400270:	4d1d      	ldr	r5, [pc, #116]	; (4002e8 <usart_serial_read_packet+0x8c>)
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400272:	f8df a080 	ldr.w	sl, [pc, #128]	; 4002f4 <usart_serial_read_packet+0x98>
  400276:	e00d      	b.n	400294 <usart_serial_read_packet+0x38>
		while (uart_read((Uart*)p_usart, data));
  400278:	4621      	mov	r1, r4
  40027a:	4638      	mov	r0, r7
  40027c:	47a8      	blx	r5
  40027e:	2800      	cmp	r0, #0
  400280:	d1fa      	bne.n	400278 <usart_serial_read_packet+0x1c>
  400282:	e010      	b.n	4002a6 <usart_serial_read_packet+0x4a>
		while (uart_read((Uart*)p_usart, data));
  400284:	4621      	mov	r1, r4
  400286:	4650      	mov	r0, sl
  400288:	47a8      	blx	r5
  40028a:	2800      	cmp	r0, #0
  40028c:	d1fa      	bne.n	400284 <usart_serial_read_packet+0x28>
		usart_serial_getchar(usart, data);
		len--;
		data++;
  40028e:	3401      	adds	r4, #1
	while (len) {
  400290:	455c      	cmp	r4, fp
  400292:	d021      	beq.n	4002d8 <usart_serial_read_packet+0x7c>
	uint32_t val = 0;
  400294:	2300      	movs	r3, #0
  400296:	9301      	str	r3, [sp, #4]
	if (UART0 == (Uart*)p_usart) {
  400298:	42be      	cmp	r6, r7
  40029a:	d0ed      	beq.n	400278 <usart_serial_read_packet+0x1c>
	if (UART1 == (Uart*)p_usart) {
  40029c:	4556      	cmp	r6, sl
  40029e:	d0f1      	beq.n	400284 <usart_serial_read_packet+0x28>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  4002a0:	4b12      	ldr	r3, [pc, #72]	; (4002ec <usart_serial_read_packet+0x90>)
  4002a2:	429e      	cmp	r6, r3
  4002a4:	d00d      	beq.n	4002c2 <usart_serial_read_packet+0x66>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4002a6:	4b12      	ldr	r3, [pc, #72]	; (4002f0 <usart_serial_read_packet+0x94>)
  4002a8:	429e      	cmp	r6, r3
  4002aa:	d1f0      	bne.n	40028e <usart_serial_read_packet+0x32>
		while (usart_read(p_usart, &val));
  4002ac:	4699      	mov	r9, r3
  4002ae:	f8df 8048 	ldr.w	r8, [pc, #72]	; 4002f8 <usart_serial_read_packet+0x9c>
  4002b2:	a901      	add	r1, sp, #4
  4002b4:	4648      	mov	r0, r9
  4002b6:	47c0      	blx	r8
  4002b8:	2800      	cmp	r0, #0
  4002ba:	d1fa      	bne.n	4002b2 <usart_serial_read_packet+0x56>
		*data = (uint8_t)(val & 0xFF);
  4002bc:	9b01      	ldr	r3, [sp, #4]
  4002be:	7023      	strb	r3, [r4, #0]
  4002c0:	e7e5      	b.n	40028e <usart_serial_read_packet+0x32>
		while (usart_read(p_usart, &val));
  4002c2:	4699      	mov	r9, r3
  4002c4:	f8df 8030 	ldr.w	r8, [pc, #48]	; 4002f8 <usart_serial_read_packet+0x9c>
  4002c8:	a901      	add	r1, sp, #4
  4002ca:	4648      	mov	r0, r9
  4002cc:	47c0      	blx	r8
  4002ce:	2800      	cmp	r0, #0
  4002d0:	d1fa      	bne.n	4002c8 <usart_serial_read_packet+0x6c>
		*data = (uint8_t)(val & 0xFF);
  4002d2:	9b01      	ldr	r3, [sp, #4]
  4002d4:	7023      	strb	r3, [r4, #0]
  4002d6:	e7da      	b.n	40028e <usart_serial_read_packet+0x32>
	}
	return STATUS_OK;
}
  4002d8:	2000      	movs	r0, #0
  4002da:	b003      	add	sp, #12
  4002dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4002e0:	2000      	movs	r0, #0
  4002e2:	4770      	bx	lr
  4002e4:	400e0600 	.word	0x400e0600
  4002e8:	0040096f 	.word	0x0040096f
  4002ec:	400a0000 	.word	0x400a0000
  4002f0:	400a4000 	.word	0x400a4000
  4002f4:	40060600 	.word	0x40060600
  4002f8:	00400995 	.word	0x00400995

004002fc <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4002fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400300:	b980      	cbnz	r0, 400324 <_read+0x28>
  400302:	460c      	mov	r4, r1
  400304:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400306:	2a00      	cmp	r2, #0
  400308:	dd0f      	ble.n	40032a <_read+0x2e>
  40030a:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  40030c:	4e08      	ldr	r6, [pc, #32]	; (400330 <_read+0x34>)
  40030e:	4d09      	ldr	r5, [pc, #36]	; (400334 <_read+0x38>)
  400310:	6830      	ldr	r0, [r6, #0]
  400312:	4621      	mov	r1, r4
  400314:	682b      	ldr	r3, [r5, #0]
  400316:	4798      	blx	r3
		ptr++;
  400318:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  40031a:	42bc      	cmp	r4, r7
  40031c:	d1f8      	bne.n	400310 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  40031e:	4640      	mov	r0, r8
  400320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400324:	f04f 38ff 	mov.w	r8, #4294967295
  400328:	e7f9      	b.n	40031e <_read+0x22>
	for (; len > 0; --len) {
  40032a:	4680      	mov	r8, r0
  40032c:	e7f7      	b.n	40031e <_read+0x22>
  40032e:	bf00      	nop
  400330:	20000ad8 	.word	0x20000ad8
  400334:	20000ad0 	.word	0x20000ad0

00400338 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400338:	3801      	subs	r0, #1
  40033a:	2802      	cmp	r0, #2
  40033c:	d815      	bhi.n	40036a <_write+0x32>
{
  40033e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400342:	460e      	mov	r6, r1
  400344:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  400346:	b19a      	cbz	r2, 400370 <_write+0x38>
  400348:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  40034a:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400384 <_write+0x4c>
  40034e:	4f0c      	ldr	r7, [pc, #48]	; (400380 <_write+0x48>)
  400350:	f8d8 0000 	ldr.w	r0, [r8]
  400354:	f815 1b01 	ldrb.w	r1, [r5], #1
  400358:	683b      	ldr	r3, [r7, #0]
  40035a:	4798      	blx	r3
  40035c:	2800      	cmp	r0, #0
  40035e:	db0a      	blt.n	400376 <_write+0x3e>
  400360:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  400362:	3c01      	subs	r4, #1
  400364:	d1f4      	bne.n	400350 <_write+0x18>
  400366:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40036a:	f04f 30ff 	mov.w	r0, #4294967295
  40036e:	4770      	bx	lr
	for (; len != 0; --len) {
  400370:	4610      	mov	r0, r2
  400372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400376:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40037a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40037e:	bf00      	nop
  400380:	20000ad4 	.word	0x20000ad4
  400384:	20000ad8 	.word	0x20000ad8

00400388 <board_init>:
		ioport_set_pin_mode(pin, mode);\
		ioport_set_pin_sense_mode(pin, sense);\
	} while (0)

void board_init(void)
{
  400388:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40038a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40038e:	4b21      	ldr	r3, [pc, #132]	; (400414 <board_init+0x8c>)
  400390:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400392:	2009      	movs	r0, #9
  400394:	4c20      	ldr	r4, [pc, #128]	; (400418 <board_init+0x90>)
  400396:	47a0      	blx	r4
  400398:	200a      	movs	r0, #10
  40039a:	47a0      	blx	r4
  40039c:	200b      	movs	r0, #11
  40039e:	47a0      	blx	r4
  4003a0:	200c      	movs	r0, #12
  4003a2:	47a0      	blx	r4
  4003a4:	200d      	movs	r0, #13
  4003a6:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4003a8:	4b1c      	ldr	r3, [pc, #112]	; (40041c <board_init+0x94>)
  4003aa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4003ae:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003b0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4003b4:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4003b6:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4003ba:	2204      	movs	r2, #4
  4003bc:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4003be:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4003c2:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4003c4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003c8:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  4003ca:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  4003cc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  4003d0:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4003d2:	f021 0104 	bic.w	r1, r1, #4
  4003d6:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4003d8:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4003da:	f021 0104 	bic.w	r1, r1, #4
  4003de:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  4003e0:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  4003e4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  4003e8:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  4003ec:	f44f 62c0 	mov.w	r2, #1536	; 0x600
  4003f0:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4003f2:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4003f6:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4003f8:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4003fa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4003fe:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400400:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  400404:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400406:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400408:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  40040c:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40040e:	605a      	str	r2, [r3, #4]
  400410:	bd10      	pop	{r4, pc}
  400412:	bf00      	nop
  400414:	400e1850 	.word	0x400e1850
  400418:	00400839 	.word	0x00400839
  40041c:	400e1400 	.word	0x400e1400

00400420 <afec_process_callback>:
 * \brief Call the callback function if the corresponding interrupt is asserted
 *
 * \param afec  Base address of the AFEC.
 */
static void afec_process_callback(Afec *const afec)
{
  400420:	b570      	push	{r4, r5, r6, lr}
  400422:	b082      	sub	sp, #8
 *
 * \return The interrupt status value.
 */
static inline uint32_t afec_get_interrupt_status(Afec *const afec)
{
	return afec->AFEC_ISR;
  400424:	6b02      	ldr	r2, [r0, #48]	; 0x30
 *
 * \return The interrupt mask value.
 */
static inline uint32_t afec_get_interrupt_mask(Afec *const afec)
{
	return afec->AFEC_IMR;
  400426:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
	volatile uint32_t status;
	uint32_t cnt, inst_num;

	status = afec_get_interrupt_status(afec) & afec_get_interrupt_mask(afec);
  400428:	4013      	ands	r3, r2
  40042a:	9301      	str	r3, [sp, #4]
	inst_num = afec_find_inst_num(afec);

	for (cnt = 0; cnt < _AFEC_NUM_OF_INTERRUPT_SOURCE; cnt++) {
  40042c:	2400      	movs	r4, #0
	if (afec_callback_pointer[inst_num][source]) {
  40042e:	4d21      	ldr	r5, [pc, #132]	; (4004b4 <afec_process_callback+0x94>)
  400430:	42a8      	cmp	r0, r5
  400432:	bf14      	ite	ne
  400434:	2500      	movne	r5, #0
  400436:	2501      	moveq	r5, #1
  400438:	006e      	lsls	r6, r5, #1
  40043a:	442e      	add	r6, r5
  40043c:	e00b      	b.n	400456 <afec_process_callback+0x36>
		#elif defined __SAM4E8E__  || defined __SAM4E16E__ || SAMV71 || SAMV70 || SAMS70 || SAME70
			if (status & (1 << cnt)) {
				afec_interrupt(inst_num, (enum afec_interrupt_source)cnt);
			}
		#endif
		} else if (cnt < AFEC_INTERRUPT_TEMP_CHANGE) {
  40043e:	2c14      	cmp	r4, #20
  400440:	d824      	bhi.n	40048c <afec_process_callback+0x6c>
			if (status & (1 << (cnt + AFEC_INTERRUPT_GAP1))) {
  400442:	9a01      	ldr	r2, [sp, #4]
  400444:	f104 0108 	add.w	r1, r4, #8
  400448:	2301      	movs	r3, #1
  40044a:	408b      	lsls	r3, r1
  40044c:	4213      	tst	r3, r2
  40044e:	d113      	bne.n	400478 <afec_process_callback+0x58>
	for (cnt = 0; cnt < _AFEC_NUM_OF_INTERRUPT_SOURCE; cnt++) {
  400450:	3401      	adds	r4, #1
  400452:	2c17      	cmp	r4, #23
  400454:	d02b      	beq.n	4004ae <afec_process_callback+0x8e>
		if (cnt < AFEC_INTERRUPT_DATA_READY) {
  400456:	2c0f      	cmp	r4, #15
  400458:	d8f1      	bhi.n	40043e <afec_process_callback+0x1e>
			if (status & (1 << cnt)) {
  40045a:	9a01      	ldr	r2, [sp, #4]
  40045c:	2301      	movs	r3, #1
  40045e:	40a3      	lsls	r3, r4
  400460:	4213      	tst	r3, r2
  400462:	d0f5      	beq.n	400450 <afec_process_callback+0x30>
	if (afec_callback_pointer[inst_num][source]) {
  400464:	ebc5 03c6 	rsb	r3, r5, r6, lsl #3
  400468:	4423      	add	r3, r4
  40046a:	4a13      	ldr	r2, [pc, #76]	; (4004b8 <afec_process_callback+0x98>)
  40046c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  400470:	2b00      	cmp	r3, #0
  400472:	d0ed      	beq.n	400450 <afec_process_callback+0x30>
		afec_callback_pointer[inst_num][source]();
  400474:	4798      	blx	r3
  400476:	e7eb      	b.n	400450 <afec_process_callback+0x30>
	if (afec_callback_pointer[inst_num][source]) {
  400478:	ebc5 03c6 	rsb	r3, r5, r6, lsl #3
  40047c:	4423      	add	r3, r4
  40047e:	4a0e      	ldr	r2, [pc, #56]	; (4004b8 <afec_process_callback+0x98>)
  400480:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  400484:	2b00      	cmp	r3, #0
  400486:	d0e3      	beq.n	400450 <afec_process_callback+0x30>
		afec_callback_pointer[inst_num][source]();
  400488:	4798      	blx	r3
  40048a:	e7e1      	b.n	400450 <afec_process_callback+0x30>
				afec_interrupt(inst_num, (enum afec_interrupt_source)cnt);
			}
		} else {
			if (status & (1 << (cnt + AFEC_INTERRUPT_GAP1 + AFEC_INTERRUPT_GAP2))) {
  40048c:	9a01      	ldr	r2, [sp, #4]
  40048e:	f104 0109 	add.w	r1, r4, #9
  400492:	2301      	movs	r3, #1
  400494:	408b      	lsls	r3, r1
  400496:	4213      	tst	r3, r2
  400498:	d0da      	beq.n	400450 <afec_process_callback+0x30>
	if (afec_callback_pointer[inst_num][source]) {
  40049a:	ebc5 03c6 	rsb	r3, r5, r6, lsl #3
  40049e:	4423      	add	r3, r4
  4004a0:	4a05      	ldr	r2, [pc, #20]	; (4004b8 <afec_process_callback+0x98>)
  4004a2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4004a6:	2b00      	cmp	r3, #0
  4004a8:	d0d2      	beq.n	400450 <afec_process_callback+0x30>
		afec_callback_pointer[inst_num][source]();
  4004aa:	4798      	blx	r3
  4004ac:	e7d0      	b.n	400450 <afec_process_callback+0x30>
				afec_interrupt(inst_num, (enum afec_interrupt_source)cnt);
			}
		}
	}
}
  4004ae:	b002      	add	sp, #8
  4004b0:	bd70      	pop	{r4, r5, r6, pc}
  4004b2:	bf00      	nop
  4004b4:	400b4000 	.word	0x400b4000
  4004b8:	20000adc 	.word	0x20000adc

004004bc <afec_ch_set_config>:
{
  4004bc:	b430      	push	{r4, r5}
	reg = afec->AFEC_DIFFR;
  4004be:	6e04      	ldr	r4, [r0, #96]	; 0x60
	reg &= ~(0x1u << channel);
  4004c0:	2301      	movs	r3, #1
  4004c2:	408b      	lsls	r3, r1
  4004c4:	ea24 0403 	bic.w	r4, r4, r3
	reg |= (config->diff) ? (0x1u << channel) : 0;
  4004c8:	7815      	ldrb	r5, [r2, #0]
  4004ca:	2d00      	cmp	r5, #0
  4004cc:	bf08      	it	eq
  4004ce:	2300      	moveq	r3, #0
  4004d0:	4323      	orrs	r3, r4
	afec->AFEC_DIFFR = reg;
  4004d2:	6603      	str	r3, [r0, #96]	; 0x60
	reg = afec->AFEC_CGR;
  4004d4:	6d44      	ldr	r4, [r0, #84]	; 0x54
	reg &= ~(0x03u << (2 * channel));
  4004d6:	004b      	lsls	r3, r1, #1
  4004d8:	2103      	movs	r1, #3
  4004da:	4099      	lsls	r1, r3
  4004dc:	ea24 0401 	bic.w	r4, r4, r1
	reg |= (config->gain) << (2 * channel);
  4004e0:	7851      	ldrb	r1, [r2, #1]
  4004e2:	4099      	lsls	r1, r3
  4004e4:	4321      	orrs	r1, r4
	afec->AFEC_CGR = reg;
  4004e6:	6541      	str	r1, [r0, #84]	; 0x54
}
  4004e8:	bc30      	pop	{r4, r5}
  4004ea:	4770      	bx	lr

004004ec <afec_get_config_defaults>:
	cfg->resolution = AFEC_12_BITS;
  4004ec:	2200      	movs	r2, #0
  4004ee:	6002      	str	r2, [r0, #0]
	cfg->mck = sysclk_get_cpu_hz();
  4004f0:	4b08      	ldr	r3, [pc, #32]	; (400514 <afec_get_config_defaults+0x28>)
  4004f2:	6043      	str	r3, [r0, #4]
		cfg->afec_clock = 6000000UL;
  4004f4:	4b08      	ldr	r3, [pc, #32]	; (400518 <afec_get_config_defaults+0x2c>)
  4004f6:	6083      	str	r3, [r0, #8]
		cfg->startup_time = AFEC_STARTUP_TIME_4;
  4004f8:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  4004fc:	60c3      	str	r3, [r0, #12]
		cfg->settling_time = AFEC_SETTLING_TIME_0;
  4004fe:	6102      	str	r2, [r0, #16]
		cfg->tracktim = 2;
  400500:	2302      	movs	r3, #2
  400502:	7503      	strb	r3, [r0, #20]
		cfg->transfer = 1;
  400504:	2301      	movs	r3, #1
  400506:	7543      	strb	r3, [r0, #21]
		cfg->anach = true;
  400508:	7583      	strb	r3, [r0, #22]
		cfg->useq = false;
  40050a:	75c2      	strb	r2, [r0, #23]
		cfg->tag = true;
  40050c:	7603      	strb	r3, [r0, #24]
		cfg->stm = true;
  40050e:	7643      	strb	r3, [r0, #25]
		cfg->ibctl = 1;
  400510:	7683      	strb	r3, [r0, #26]
  400512:	4770      	bx	lr
  400514:	05b8d800 	.word	0x05b8d800
  400518:	005b8d80 	.word	0x005b8d80

0040051c <afec_ch_get_config_defaults>:
	cfg->diff = false;
  40051c:	2300      	movs	r3, #0
  40051e:	7003      	strb	r3, [r0, #0]
   	cfg->gain = AFEC_GAINVALUE_1;
  400520:	2301      	movs	r3, #1
  400522:	7043      	strb	r3, [r0, #1]
  400524:	4770      	bx	lr
	...

00400528 <afec_init>:
	return afec->AFEC_ISR;
  400528:	6b03      	ldr	r3, [r0, #48]	; 0x30
	if ((afec_get_interrupt_status(afec) & AFEC_ISR_DRDY) == AFEC_ISR_DRDY) {
  40052a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40052e:	d001      	beq.n	400534 <afec_init+0xc>
		return STATUS_ERR_BUSY;
  400530:	2019      	movs	r0, #25
  400532:	4770      	bx	lr
{
  400534:	b470      	push	{r4, r5, r6}
	afec->AFEC_CR = AFEC_CR_SWRST;
  400536:	2301      	movs	r3, #1
  400538:	6003      	str	r3, [r0, #0]
	reg = (config->useq ? AFEC_MR_USEQ_REG_ORDER : 0) |
  40053a:	7dcb      	ldrb	r3, [r1, #23]
  40053c:	2b00      	cmp	r3, #0
  40053e:	bf14      	ite	ne
  400540:	f04f 4500 	movne.w	r5, #2147483648	; 0x80000000
  400544:	2500      	moveq	r5, #0
			(config->anach ? AFEC_MR_ANACH_ALLOWED : 0) |
  400546:	7d8b      	ldrb	r3, [r1, #22]
  400548:	2b00      	cmp	r3, #0
  40054a:	bf14      	ite	ne
  40054c:	f44f 0400 	movne.w	r4, #8388608	; 0x800000
  400550:	2400      	moveq	r4, #0
			AFEC_MR_TRACKTIM(config->tracktim) |
  400552:	7d0b      	ldrb	r3, [r1, #20]
  400554:	061b      	lsls	r3, r3, #24
  400556:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
	reg = (config->useq ? AFEC_MR_USEQ_REG_ORDER : 0) |
  40055a:	690a      	ldr	r2, [r1, #16]
  40055c:	68ce      	ldr	r6, [r1, #12]
  40055e:	4332      	orrs	r2, r6
  400560:	4313      	orrs	r3, r2
			AFEC_MR_TRANSFER(config->transfer) |
  400562:	7d4a      	ldrb	r2, [r1, #21]
  400564:	0712      	lsls	r2, r2, #28
  400566:	f002 5240 	and.w	r2, r2, #805306368	; 0x30000000
	reg = (config->useq ? AFEC_MR_USEQ_REG_ORDER : 0) |
  40056a:	4313      	orrs	r3, r2
			AFEC_MR_PRESCAL(config->mck / (2 * config->afec_clock) - 1) |
  40056c:	688a      	ldr	r2, [r1, #8]
  40056e:	0056      	lsls	r6, r2, #1
  400570:	684a      	ldr	r2, [r1, #4]
  400572:	fbb2 f2f6 	udiv	r2, r2, r6
  400576:	3a01      	subs	r2, #1
  400578:	0212      	lsls	r2, r2, #8
  40057a:	b292      	uxth	r2, r2
	reg = (config->useq ? AFEC_MR_USEQ_REG_ORDER : 0) |
  40057c:	4313      	orrs	r3, r2
  40057e:	432b      	orrs	r3, r5
  400580:	4323      	orrs	r3, r4
	afec->AFEC_MR = reg;
  400582:	6043      	str	r3, [r0, #4]
	afec->AFEC_EMR = (config->tag ? AFEC_EMR_TAG : 0) |
  400584:	7e0b      	ldrb	r3, [r1, #24]
  400586:	2b00      	cmp	r3, #0
  400588:	bf14      	ite	ne
  40058a:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
  40058e:	2300      	moveq	r3, #0
  400590:	680a      	ldr	r2, [r1, #0]
  400592:	4313      	orrs	r3, r2
			(config->stm ? AFEC_EMR_STM : 0);
  400594:	7e4a      	ldrb	r2, [r1, #25]
  400596:	2a00      	cmp	r2, #0
  400598:	bf14      	ite	ne
  40059a:	f04f 7200 	movne.w	r2, #33554432	; 0x2000000
  40059e:	2200      	moveq	r2, #0
			(config->resolution) |
  4005a0:	4313      	orrs	r3, r2
	afec->AFEC_EMR = (config->tag ? AFEC_EMR_TAG : 0) |
  4005a2:	6083      	str	r3, [r0, #8]
    afec->AFEC_ACR = AFEC_ACR_IBCTL(config->ibctl);
  4005a4:	7e8b      	ldrb	r3, [r1, #26]
  4005a6:	021b      	lsls	r3, r3, #8
  4005a8:	f403 7340 	and.w	r3, r3, #768	; 0x300
  4005ac:	f8c0 3094 	str.w	r3, [r0, #148]	; 0x94
	if(afec == AFEC0) {
  4005b0:	4b0e      	ldr	r3, [pc, #56]	; (4005ec <afec_init+0xc4>)
  4005b2:	4298      	cmp	r0, r3
  4005b4:	d005      	beq.n	4005c2 <afec_init+0x9a>
	if(afec == AFEC1) {
  4005b6:	4b0e      	ldr	r3, [pc, #56]	; (4005f0 <afec_init+0xc8>)
  4005b8:	4298      	cmp	r0, r3
  4005ba:	d00c      	beq.n	4005d6 <afec_init+0xae>
	return STATUS_OK;
  4005bc:	2000      	movs	r0, #0
}
  4005be:	bc70      	pop	{r4, r5, r6}
  4005c0:	4770      	bx	lr
  4005c2:	4b0c      	ldr	r3, [pc, #48]	; (4005f4 <afec_init+0xcc>)
  4005c4:	f103 015c 	add.w	r1, r3, #92	; 0x5c
			afec_callback_pointer[0][i] = 0;
  4005c8:	2200      	movs	r2, #0
  4005ca:	f843 2f04 	str.w	r2, [r3, #4]!
		for (i = 0; i < _AFEC_NUM_OF_INTERRUPT_SOURCE; i++){
  4005ce:	428b      	cmp	r3, r1
  4005d0:	d1fb      	bne.n	4005ca <afec_init+0xa2>
	return STATUS_OK;
  4005d2:	2000      	movs	r0, #0
  4005d4:	e7f3      	b.n	4005be <afec_init+0x96>
  4005d6:	4b08      	ldr	r3, [pc, #32]	; (4005f8 <afec_init+0xd0>)
  4005d8:	f103 015c 	add.w	r1, r3, #92	; 0x5c
			afec_callback_pointer[1][i] = 0;
  4005dc:	2200      	movs	r2, #0
  4005de:	f843 2f04 	str.w	r2, [r3, #4]!
		for (i = 0; i < _AFEC_NUM_OF_INTERRUPT_SOURCE; i++){
  4005e2:	428b      	cmp	r3, r1
  4005e4:	d1fb      	bne.n	4005de <afec_init+0xb6>
	return STATUS_OK;
  4005e6:	2000      	movs	r0, #0
  4005e8:	e7e9      	b.n	4005be <afec_init+0x96>
  4005ea:	bf00      	nop
  4005ec:	400b0000 	.word	0x400b0000
  4005f0:	400b4000 	.word	0x400b4000
  4005f4:	20000ad8 	.word	0x20000ad8
  4005f8:	20000b34 	.word	0x20000b34

004005fc <afec_enable_interrupt>:
	if (interrupt_source == AFEC_INTERRUPT_ALL) {
  4005fc:	4b0c      	ldr	r3, [pc, #48]	; (400630 <afec_enable_interrupt+0x34>)
  4005fe:	4299      	cmp	r1, r3
  400600:	d007      	beq.n	400612 <afec_enable_interrupt+0x16>
	if (interrupt_source < AFEC_INTERRUPT_DATA_READY) {
  400602:	290f      	cmp	r1, #15
  400604:	d80b      	bhi.n	40061e <afec_enable_interrupt+0x22>
		if (interrupt_source == AFEC_INTERRUPT_EOC_15) {
  400606:	d006      	beq.n	400616 <afec_enable_interrupt+0x1a>
			afec->AFEC_IER = 1 << interrupt_source;
  400608:	2301      	movs	r3, #1
  40060a:	fa03 f101 	lsl.w	r1, r3, r1
  40060e:	6241      	str	r1, [r0, #36]	; 0x24
  400610:	4770      	bx	lr
		afec->AFEC_IER = AFEC_INTERRUPT_ALL;
  400612:	6243      	str	r3, [r0, #36]	; 0x24
		return;
  400614:	4770      	bx	lr
			afec->AFEC_IER = 1 << AFEC_TEMP_INT_SOURCE_NUM;	  
  400616:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40061a:	6243      	str	r3, [r0, #36]	; 0x24
  40061c:	4770      	bx	lr
	} else if (interrupt_source < AFEC_INTERRUPT_TEMP_CHANGE) {
  40061e:	2914      	cmp	r1, #20
		afec->AFEC_IER = 1 << (interrupt_source + AFEC_INTERRUPT_GAP1);
  400620:	bf94      	ite	ls
  400622:	3108      	addls	r1, #8
				+ AFEC_INTERRUPT_GAP2);
  400624:	3109      	addhi	r1, #9
		afec->AFEC_IER = 1 << (interrupt_source + AFEC_INTERRUPT_GAP1
  400626:	2301      	movs	r3, #1
  400628:	fa03 f101 	lsl.w	r1, r3, r1
  40062c:	6241      	str	r1, [r0, #36]	; 0x24
  40062e:	4770      	bx	lr
  400630:	df00ffff 	.word	0xdf00ffff

00400634 <afec_set_callback>:
{
  400634:	b538      	push	{r3, r4, r5, lr}
	if (afec == AFEC1) {
  400636:	4c11      	ldr	r4, [pc, #68]	; (40067c <afec_set_callback+0x48>)
  400638:	42a0      	cmp	r0, r4
	afec_callback_pointer[i][source] = callback;
  40063a:	bf0c      	ite	eq
  40063c:	2417      	moveq	r4, #23
  40063e:	2400      	movne	r4, #0
  400640:	440c      	add	r4, r1
  400642:	4d0f      	ldr	r5, [pc, #60]	; (400680 <afec_set_callback+0x4c>)
  400644:	f845 2024 	str.w	r2, [r5, r4, lsl #2]
	if (!i) {
  400648:	d10a      	bne.n	400660 <afec_set_callback+0x2c>
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40064a:	4a0e      	ldr	r2, [pc, #56]	; (400684 <afec_set_callback+0x50>)
  40064c:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
  400650:	f8c2 4180 	str.w	r4, [r2, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400654:	011b      	lsls	r3, r3, #4
  400656:	b2db      	uxtb	r3, r3
  400658:	f882 331f 	strb.w	r3, [r2, #799]	; 0x31f
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40065c:	6014      	str	r4, [r2, #0]
  40065e:	e009      	b.n	400674 <afec_set_callback+0x40>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400660:	4a08      	ldr	r2, [pc, #32]	; (400684 <afec_set_callback+0x50>)
  400662:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
  400666:	f8c2 4180 	str.w	r4, [r2, #384]	; 0x180
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40066a:	011b      	lsls	r3, r3, #4
  40066c:	b2db      	uxtb	r3, r3
  40066e:	f882 331e 	strb.w	r3, [r2, #798]	; 0x31e
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400672:	6014      	str	r4, [r2, #0]
	afec_enable_interrupt(afec, source);
  400674:	4b04      	ldr	r3, [pc, #16]	; (400688 <afec_set_callback+0x54>)
  400676:	4798      	blx	r3
  400678:	bd38      	pop	{r3, r4, r5, pc}
  40067a:	bf00      	nop
  40067c:	400b4000 	.word	0x400b4000
  400680:	20000adc 	.word	0x20000adc
  400684:	e000e100 	.word	0xe000e100
  400688:	004005fd 	.word	0x004005fd

0040068c <afec_disable_interrupt>:
	if (interrupt_source == AFEC_INTERRUPT_ALL) {
  40068c:	4b0c      	ldr	r3, [pc, #48]	; (4006c0 <afec_disable_interrupt+0x34>)
  40068e:	4299      	cmp	r1, r3
  400690:	d007      	beq.n	4006a2 <afec_disable_interrupt+0x16>
	if (interrupt_source < AFEC_INTERRUPT_DATA_READY) {
  400692:	290f      	cmp	r1, #15
  400694:	d80b      	bhi.n	4006ae <afec_disable_interrupt+0x22>
		if (interrupt_source == AFEC_INTERRUPT_EOC_15) {
  400696:	d006      	beq.n	4006a6 <afec_disable_interrupt+0x1a>
			afec->AFEC_IDR = 1 << interrupt_source;
  400698:	2301      	movs	r3, #1
  40069a:	fa03 f101 	lsl.w	r1, r3, r1
  40069e:	6281      	str	r1, [r0, #40]	; 0x28
  4006a0:	4770      	bx	lr
		afec->AFEC_IDR = AFEC_INTERRUPT_ALL;
  4006a2:	6283      	str	r3, [r0, #40]	; 0x28
		return;
  4006a4:	4770      	bx	lr
			afec->AFEC_IDR = 1 << AFEC_TEMP_INT_SOURCE_NUM;	  
  4006a6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  4006aa:	6283      	str	r3, [r0, #40]	; 0x28
  4006ac:	4770      	bx	lr
	} else if (interrupt_source < AFEC_INTERRUPT_TEMP_CHANGE) {
  4006ae:	2914      	cmp	r1, #20
		afec->AFEC_IDR = 1 << (interrupt_source + AFEC_INTERRUPT_GAP1);
  4006b0:	bf94      	ite	ls
  4006b2:	3108      	addls	r1, #8
				+ AFEC_INTERRUPT_GAP2);
  4006b4:	3109      	addhi	r1, #9
		afec->AFEC_IDR = 1 << (interrupt_source + AFEC_INTERRUPT_GAP1
  4006b6:	2301      	movs	r3, #1
  4006b8:	fa03 f101 	lsl.w	r1, r3, r1
  4006bc:	6281      	str	r1, [r0, #40]	; 0x28
  4006be:	4770      	bx	lr
  4006c0:	df00ffff 	.word	0xdf00ffff

004006c4 <AFEC0_Handler>:

/**
 * \brief Interrupt handler for AFEC0.
 */
void AFEC0_Handler(void)
{
  4006c4:	b508      	push	{r3, lr}
	afec_process_callback(AFEC0);
  4006c6:	4802      	ldr	r0, [pc, #8]	; (4006d0 <AFEC0_Handler+0xc>)
  4006c8:	4b02      	ldr	r3, [pc, #8]	; (4006d4 <AFEC0_Handler+0x10>)
  4006ca:	4798      	blx	r3
  4006cc:	bd08      	pop	{r3, pc}
  4006ce:	bf00      	nop
  4006d0:	400b0000 	.word	0x400b0000
  4006d4:	00400421 	.word	0x00400421

004006d8 <AFEC1_Handler>:

/**
 * \brief Interrupt handler for AFEC1.
 */
void AFEC1_Handler(void)
{
  4006d8:	b508      	push	{r3, lr}
	afec_process_callback(AFEC1);
  4006da:	4802      	ldr	r0, [pc, #8]	; (4006e4 <AFEC1_Handler+0xc>)
  4006dc:	4b02      	ldr	r3, [pc, #8]	; (4006e8 <AFEC1_Handler+0x10>)
  4006de:	4798      	blx	r3
  4006e0:	bd08      	pop	{r3, pc}
  4006e2:	bf00      	nop
  4006e4:	400b4000 	.word	0x400b4000
  4006e8:	00400421 	.word	0x00400421

004006ec <afec_enable>:
 * \brief Enable AFEC Module.
 *
 * \param afec  Base address of the AFEC
 */
void afec_enable(Afec *const afec)
{
  4006ec:	b500      	push	{lr}
  4006ee:	b083      	sub	sp, #12
	Assert(afec);
	uint32_t pid;

	pid = afec_find_pid(afec);
	/* Enable peripheral clock. */
	pmc_enable_periph_clk(pid);
  4006f0:	4b13      	ldr	r3, [pc, #76]	; (400740 <afec_enable+0x54>)
  4006f2:	4298      	cmp	r0, r3
  4006f4:	bf0c      	ite	eq
  4006f6:	201f      	moveq	r0, #31
  4006f8:	201e      	movne	r0, #30
  4006fa:	4b12      	ldr	r3, [pc, #72]	; (400744 <afec_enable+0x58>)
  4006fc:	4798      	blx	r3
static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] >= 0xff) {
  4006fe:	4b12      	ldr	r3, [pc, #72]	; (400748 <afec_enable+0x5c>)
  400700:	789b      	ldrb	r3, [r3, #2]
  400702:	2bff      	cmp	r3, #255	; 0xff
  400704:	d01a      	beq.n	40073c <afec_enable+0x50>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400706:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40070a:	fab3 f383 	clz	r3, r3
  40070e:	095b      	lsrs	r3, r3, #5
  400710:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400712:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  400714:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400718:	2200      	movs	r2, #0
  40071a:	4b0c      	ldr	r3, [pc, #48]	; (40074c <afec_enable+0x60>)
  40071c:	701a      	strb	r2, [r3, #0]
	return flags;
  40071e:	9901      	ldr	r1, [sp, #4]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
  400720:	4a09      	ldr	r2, [pc, #36]	; (400748 <afec_enable+0x5c>)
  400722:	7893      	ldrb	r3, [r2, #2]
  400724:	3301      	adds	r3, #1
  400726:	7093      	strb	r3, [r2, #2]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400728:	b129      	cbz	r1, 400736 <afec_enable+0x4a>
		cpu_irq_enable();
  40072a:	2201      	movs	r2, #1
  40072c:	4b07      	ldr	r3, [pc, #28]	; (40074c <afec_enable+0x60>)
  40072e:	701a      	strb	r2, [r3, #0]
  400730:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400734:	b662      	cpsie	i
	sleepmgr_lock_mode(SLEEPMGR_SLEEP_WFI);
}
  400736:	b003      	add	sp, #12
  400738:	f85d fb04 	ldr.w	pc, [sp], #4
  40073c:	e7fe      	b.n	40073c <afec_enable+0x50>
  40073e:	bf00      	nop
  400740:	400b4000 	.word	0x400b4000
  400744:	00400839 	.word	0x00400839
  400748:	20000ac8 	.word	0x20000ac8
  40074c:	20000000 	.word	0x20000000

00400750 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400750:	4a17      	ldr	r2, [pc, #92]	; (4007b0 <pmc_switch_mck_to_pllack+0x60>)
  400752:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400754:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400758:	4318      	orrs	r0, r3
  40075a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40075c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40075e:	f013 0f08 	tst.w	r3, #8
  400762:	d10a      	bne.n	40077a <pmc_switch_mck_to_pllack+0x2a>
  400764:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400768:	4911      	ldr	r1, [pc, #68]	; (4007b0 <pmc_switch_mck_to_pllack+0x60>)
  40076a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40076c:	f012 0f08 	tst.w	r2, #8
  400770:	d103      	bne.n	40077a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400772:	3b01      	subs	r3, #1
  400774:	d1f9      	bne.n	40076a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400776:	2001      	movs	r0, #1
  400778:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40077a:	4a0d      	ldr	r2, [pc, #52]	; (4007b0 <pmc_switch_mck_to_pllack+0x60>)
  40077c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40077e:	f023 0303 	bic.w	r3, r3, #3
  400782:	f043 0302 	orr.w	r3, r3, #2
  400786:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400788:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40078a:	f013 0f08 	tst.w	r3, #8
  40078e:	d10a      	bne.n	4007a6 <pmc_switch_mck_to_pllack+0x56>
  400790:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400794:	4906      	ldr	r1, [pc, #24]	; (4007b0 <pmc_switch_mck_to_pllack+0x60>)
  400796:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400798:	f012 0f08 	tst.w	r2, #8
  40079c:	d105      	bne.n	4007aa <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40079e:	3b01      	subs	r3, #1
  4007a0:	d1f9      	bne.n	400796 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4007a2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4007a4:	4770      	bx	lr
	return 0;
  4007a6:	2000      	movs	r0, #0
  4007a8:	4770      	bx	lr
  4007aa:	2000      	movs	r0, #0
  4007ac:	4770      	bx	lr
  4007ae:	bf00      	nop
  4007b0:	400e0400 	.word	0x400e0400

004007b4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4007b4:	b9c8      	cbnz	r0, 4007ea <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4007b6:	4a11      	ldr	r2, [pc, #68]	; (4007fc <pmc_switch_mainck_to_xtal+0x48>)
  4007b8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4007ba:	0209      	lsls	r1, r1, #8
  4007bc:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4007be:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4007c2:	f023 0303 	bic.w	r3, r3, #3
  4007c6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4007ca:	f043 0301 	orr.w	r3, r3, #1
  4007ce:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4007d0:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4007d2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4007d4:	f013 0f01 	tst.w	r3, #1
  4007d8:	d0fb      	beq.n	4007d2 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4007da:	4a08      	ldr	r2, [pc, #32]	; (4007fc <pmc_switch_mainck_to_xtal+0x48>)
  4007dc:	6a13      	ldr	r3, [r2, #32]
  4007de:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4007e2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4007e6:	6213      	str	r3, [r2, #32]
  4007e8:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4007ea:	4904      	ldr	r1, [pc, #16]	; (4007fc <pmc_switch_mainck_to_xtal+0x48>)
  4007ec:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4007ee:	4a04      	ldr	r2, [pc, #16]	; (400800 <pmc_switch_mainck_to_xtal+0x4c>)
  4007f0:	401a      	ands	r2, r3
  4007f2:	4b04      	ldr	r3, [pc, #16]	; (400804 <pmc_switch_mainck_to_xtal+0x50>)
  4007f4:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4007f6:	620b      	str	r3, [r1, #32]
  4007f8:	4770      	bx	lr
  4007fa:	bf00      	nop
  4007fc:	400e0400 	.word	0x400e0400
  400800:	fec8fffc 	.word	0xfec8fffc
  400804:	01370002 	.word	0x01370002

00400808 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400808:	4b02      	ldr	r3, [pc, #8]	; (400814 <pmc_osc_is_ready_mainck+0xc>)
  40080a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40080c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400810:	4770      	bx	lr
  400812:	bf00      	nop
  400814:	400e0400 	.word	0x400e0400

00400818 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400818:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40081c:	4b01      	ldr	r3, [pc, #4]	; (400824 <pmc_disable_pllack+0xc>)
  40081e:	629a      	str	r2, [r3, #40]	; 0x28
  400820:	4770      	bx	lr
  400822:	bf00      	nop
  400824:	400e0400 	.word	0x400e0400

00400828 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400828:	4b02      	ldr	r3, [pc, #8]	; (400834 <pmc_is_locked_pllack+0xc>)
  40082a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40082c:	f000 0002 	and.w	r0, r0, #2
  400830:	4770      	bx	lr
  400832:	bf00      	nop
  400834:	400e0400 	.word	0x400e0400

00400838 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400838:	282f      	cmp	r0, #47	; 0x2f
  40083a:	d81e      	bhi.n	40087a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40083c:	281f      	cmp	r0, #31
  40083e:	d80c      	bhi.n	40085a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400840:	4b11      	ldr	r3, [pc, #68]	; (400888 <pmc_enable_periph_clk+0x50>)
  400842:	699a      	ldr	r2, [r3, #24]
  400844:	2301      	movs	r3, #1
  400846:	4083      	lsls	r3, r0
  400848:	4393      	bics	r3, r2
  40084a:	d018      	beq.n	40087e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40084c:	2301      	movs	r3, #1
  40084e:	fa03 f000 	lsl.w	r0, r3, r0
  400852:	4b0d      	ldr	r3, [pc, #52]	; (400888 <pmc_enable_periph_clk+0x50>)
  400854:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400856:	2000      	movs	r0, #0
  400858:	4770      	bx	lr
		ul_id -= 32;
  40085a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40085c:	4b0a      	ldr	r3, [pc, #40]	; (400888 <pmc_enable_periph_clk+0x50>)
  40085e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400862:	2301      	movs	r3, #1
  400864:	4083      	lsls	r3, r0
  400866:	4393      	bics	r3, r2
  400868:	d00b      	beq.n	400882 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40086a:	2301      	movs	r3, #1
  40086c:	fa03 f000 	lsl.w	r0, r3, r0
  400870:	4b05      	ldr	r3, [pc, #20]	; (400888 <pmc_enable_periph_clk+0x50>)
  400872:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400876:	2000      	movs	r0, #0
  400878:	4770      	bx	lr
		return 1;
  40087a:	2001      	movs	r0, #1
  40087c:	4770      	bx	lr
	return 0;
  40087e:	2000      	movs	r0, #0
  400880:	4770      	bx	lr
  400882:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400884:	4770      	bx	lr
  400886:	bf00      	nop
  400888:	400e0400 	.word	0x400e0400

0040088c <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  40088c:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40088e:	0189      	lsls	r1, r1, #6
  400890:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400892:	2402      	movs	r4, #2
  400894:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400896:	f04f 31ff 	mov.w	r1, #4294967295
  40089a:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  40089c:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  40089e:	605a      	str	r2, [r3, #4]
}
  4008a0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4008a4:	4770      	bx	lr

004008a6 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4008a6:	0189      	lsls	r1, r1, #6
  4008a8:	2305      	movs	r3, #5
  4008aa:	5043      	str	r3, [r0, r1]
  4008ac:	4770      	bx	lr

004008ae <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
  4008ae:	0189      	lsls	r1, r1, #6
  4008b0:	2302      	movs	r3, #2
  4008b2:	5043      	str	r3, [r0, r1]
  4008b4:	4770      	bx	lr

004008b6 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4008b6:	b4f0      	push	{r4, r5, r6, r7}
  4008b8:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4008ba:	2402      	movs	r4, #2
  4008bc:	9401      	str	r4, [sp, #4]
  4008be:	2408      	movs	r4, #8
  4008c0:	9402      	str	r4, [sp, #8]
  4008c2:	2420      	movs	r4, #32
  4008c4:	9403      	str	r4, [sp, #12]
  4008c6:	2480      	movs	r4, #128	; 0x80
  4008c8:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  4008ca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4008cc:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4008ce:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4008d0:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4008d4:	d814      	bhi.n	400900 <tc_find_mck_divisor+0x4a>
  4008d6:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4008d8:	42a0      	cmp	r0, r4
  4008da:	d217      	bcs.n	40090c <tc_find_mck_divisor+0x56>
  4008dc:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4008de:	af01      	add	r7, sp, #4
  4008e0:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  4008e4:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  4008e8:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  4008ea:	4284      	cmp	r4, r0
  4008ec:	d30a      	bcc.n	400904 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  4008ee:	4286      	cmp	r6, r0
  4008f0:	d90d      	bls.n	40090e <tc_find_mck_divisor+0x58>
			ul_index++) {
  4008f2:	3501      	adds	r5, #1
	for (ul_index = 0;
  4008f4:	2d05      	cmp	r5, #5
  4008f6:	d1f3      	bne.n	4008e0 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  4008f8:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  4008fa:	b006      	add	sp, #24
  4008fc:	bcf0      	pop	{r4, r5, r6, r7}
  4008fe:	4770      	bx	lr
			return 0;
  400900:	2000      	movs	r0, #0
  400902:	e7fa      	b.n	4008fa <tc_find_mck_divisor+0x44>
  400904:	2000      	movs	r0, #0
  400906:	e7f8      	b.n	4008fa <tc_find_mck_divisor+0x44>
	return 1;
  400908:	2001      	movs	r0, #1
  40090a:	e7f6      	b.n	4008fa <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  40090c:	2500      	movs	r5, #0
	if (p_uldiv) {
  40090e:	b12a      	cbz	r2, 40091c <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400910:	a906      	add	r1, sp, #24
  400912:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400916:	f851 1c14 	ldr.w	r1, [r1, #-20]
  40091a:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  40091c:	2b00      	cmp	r3, #0
  40091e:	d0f3      	beq.n	400908 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400920:	601d      	str	r5, [r3, #0]
	return 1;
  400922:	2001      	movs	r0, #1
  400924:	e7e9      	b.n	4008fa <tc_find_mck_divisor+0x44>

00400926 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  400926:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  400928:	23ac      	movs	r3, #172	; 0xac
  40092a:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  40092c:	680b      	ldr	r3, [r1, #0]
  40092e:	684a      	ldr	r2, [r1, #4]
  400930:	fbb3 f3f2 	udiv	r3, r3, r2
  400934:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  400936:	1e5c      	subs	r4, r3, #1
  400938:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  40093c:	4294      	cmp	r4, r2
  40093e:	d80c      	bhi.n	40095a <uart_init+0x34>
		return 1;

	p_uart->UART_BRGR = cd;
  400940:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  400942:	688b      	ldr	r3, [r1, #8]
  400944:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  400946:	f240 2302 	movw	r3, #514	; 0x202
  40094a:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  40094e:	2350      	movs	r3, #80	; 0x50
  400950:	6003      	str	r3, [r0, #0]

	return 0;
  400952:	2000      	movs	r0, #0
}
  400954:	f85d 4b04 	ldr.w	r4, [sp], #4
  400958:	4770      	bx	lr
		return 1;
  40095a:	2001      	movs	r0, #1
  40095c:	e7fa      	b.n	400954 <uart_init+0x2e>

0040095e <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  40095e:	6943      	ldr	r3, [r0, #20]
  400960:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400964:	bf1a      	itte	ne
  400966:	61c1      	strne	r1, [r0, #28]
	return 0;
  400968:	2000      	movne	r0, #0
		return 1;
  40096a:	2001      	moveq	r0, #1
}
  40096c:	4770      	bx	lr

0040096e <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  40096e:	6943      	ldr	r3, [r0, #20]
  400970:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400974:	bf1d      	ittte	ne
  400976:	6983      	ldrne	r3, [r0, #24]
  400978:	700b      	strbne	r3, [r1, #0]
	return 0;
  40097a:	2000      	movne	r0, #0
		return 1;
  40097c:	2001      	moveq	r0, #1
}
  40097e:	4770      	bx	lr

00400980 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400980:	6943      	ldr	r3, [r0, #20]
  400982:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400986:	bf1d      	ittte	ne
  400988:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  40098c:	61c1      	strne	r1, [r0, #28]
	return 0;
  40098e:	2000      	movne	r0, #0
		return 1;
  400990:	2001      	moveq	r0, #1
}
  400992:	4770      	bx	lr

00400994 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400994:	6943      	ldr	r3, [r0, #20]
  400996:	f013 0f01 	tst.w	r3, #1
  40099a:	d005      	beq.n	4009a8 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  40099c:	6983      	ldr	r3, [r0, #24]
  40099e:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4009a2:	600b      	str	r3, [r1, #0]

	return 0;
  4009a4:	2000      	movs	r0, #0
  4009a6:	4770      	bx	lr
		return 1;
  4009a8:	2001      	movs	r0, #1
}
  4009aa:	4770      	bx	lr

004009ac <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4009ac:	e7fe      	b.n	4009ac <Dummy_Handler>
	...

004009b0 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  4009b0:	b500      	push	{lr}
  4009b2:	b083      	sub	sp, #12

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  4009b4:	4b25      	ldr	r3, [pc, #148]	; (400a4c <Reset_Handler+0x9c>)
  4009b6:	4a26      	ldr	r2, [pc, #152]	; (400a50 <Reset_Handler+0xa0>)
  4009b8:	429a      	cmp	r2, r3
  4009ba:	d010      	beq.n	4009de <Reset_Handler+0x2e>
		for (; pDest < &_erelocate;) {
  4009bc:	4b25      	ldr	r3, [pc, #148]	; (400a54 <Reset_Handler+0xa4>)
  4009be:	4a23      	ldr	r2, [pc, #140]	; (400a4c <Reset_Handler+0x9c>)
  4009c0:	429a      	cmp	r2, r3
  4009c2:	d20c      	bcs.n	4009de <Reset_Handler+0x2e>
  4009c4:	3b01      	subs	r3, #1
  4009c6:	1a9b      	subs	r3, r3, r2
  4009c8:	f023 0303 	bic.w	r3, r3, #3
  4009cc:	3304      	adds	r3, #4
  4009ce:	4413      	add	r3, r2
  4009d0:	491f      	ldr	r1, [pc, #124]	; (400a50 <Reset_Handler+0xa0>)
			*pDest++ = *pSrc++;
  4009d2:	f851 0b04 	ldr.w	r0, [r1], #4
  4009d6:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  4009da:	429a      	cmp	r2, r3
  4009dc:	d1f9      	bne.n	4009d2 <Reset_Handler+0x22>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4009de:	4b1e      	ldr	r3, [pc, #120]	; (400a58 <Reset_Handler+0xa8>)
  4009e0:	4a1e      	ldr	r2, [pc, #120]	; (400a5c <Reset_Handler+0xac>)
  4009e2:	429a      	cmp	r2, r3
  4009e4:	d20a      	bcs.n	4009fc <Reset_Handler+0x4c>
  4009e6:	3b01      	subs	r3, #1
  4009e8:	1a9b      	subs	r3, r3, r2
  4009ea:	f023 0303 	bic.w	r3, r3, #3
  4009ee:	3304      	adds	r3, #4
  4009f0:	4413      	add	r3, r2
		*pDest++ = 0;
  4009f2:	2100      	movs	r1, #0
  4009f4:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  4009f8:	4293      	cmp	r3, r2
  4009fa:	d1fb      	bne.n	4009f4 <Reset_Handler+0x44>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4009fc:	4a18      	ldr	r2, [pc, #96]	; (400a60 <Reset_Handler+0xb0>)
  4009fe:	4b19      	ldr	r3, [pc, #100]	; (400a64 <Reset_Handler+0xb4>)
  400a00:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400a04:	6093      	str	r3, [r2, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400a06:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400a0a:	fab3 f383 	clz	r3, r3
  400a0e:	095b      	lsrs	r3, r3, #5
  400a10:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400a12:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400a14:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400a18:	2200      	movs	r2, #0
  400a1a:	4b13      	ldr	r3, [pc, #76]	; (400a68 <Reset_Handler+0xb8>)
  400a1c:	701a      	strb	r2, [r3, #0]
	return flags;
  400a1e:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400a20:	4a12      	ldr	r2, [pc, #72]	; (400a6c <Reset_Handler+0xbc>)
  400a22:	6813      	ldr	r3, [r2, #0]
  400a24:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400a28:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb 0xF":::"memory");
  400a2a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400a2e:	f3bf 8f6f 	isb	sy
	if (cpu_irq_is_enabled_flags(flags))
  400a32:	b129      	cbz	r1, 400a40 <Reset_Handler+0x90>
		cpu_irq_enable();
  400a34:	2201      	movs	r2, #1
  400a36:	4b0c      	ldr	r3, [pc, #48]	; (400a68 <Reset_Handler+0xb8>)
  400a38:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  400a3a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400a3e:	b662      	cpsie	i
#if __FPU_USED
	fpu_enable();
#endif

	/* Initialize the C library */
	__libc_init_array();
  400a40:	4b0b      	ldr	r3, [pc, #44]	; (400a70 <Reset_Handler+0xc0>)
  400a42:	4798      	blx	r3

	/* Branch to main function */
	main();
  400a44:	4b0b      	ldr	r3, [pc, #44]	; (400a74 <Reset_Handler+0xc4>)
  400a46:	4798      	blx	r3
  400a48:	e7fe      	b.n	400a48 <Reset_Handler+0x98>
  400a4a:	bf00      	nop
  400a4c:	20000000 	.word	0x20000000
  400a50:	00406300 	.word	0x00406300
  400a54:	200009b8 	.word	0x200009b8
  400a58:	20008dfc 	.word	0x20008dfc
  400a5c:	200009b8 	.word	0x200009b8
  400a60:	e000ed00 	.word	0xe000ed00
  400a64:	00400000 	.word	0x00400000
  400a68:	20000000 	.word	0x20000000
  400a6c:	e000ed88 	.word	0xe000ed88
  400a70:	00403011 	.word	0x00403011
  400a74:	004012d9 	.word	0x004012d9

00400a78 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) {
  400a78:	4b3b      	ldr	r3, [pc, #236]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400a7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400a7c:	f003 0303 	and.w	r3, r3, #3
  400a80:	2b01      	cmp	r3, #1
  400a82:	d01d      	beq.n	400ac0 <SystemCoreClockUpdate+0x48>
  400a84:	b183      	cbz	r3, 400aa8 <SystemCoreClockUpdate+0x30>
  400a86:	2b02      	cmp	r3, #2
  400a88:	d036      	beq.n	400af8 <SystemCoreClockUpdate+0x80>

	default:
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  400a8a:	4b37      	ldr	r3, [pc, #220]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400a8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400a8e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400a92:	2b70      	cmp	r3, #112	; 0x70
  400a94:	d05f      	beq.n	400b56 <SystemCoreClockUpdate+0xde>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >>
  400a96:	4b34      	ldr	r3, [pc, #208]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400a98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400a9a:	4934      	ldr	r1, [pc, #208]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400a9c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400aa0:	680b      	ldr	r3, [r1, #0]
  400aa2:	40d3      	lsrs	r3, r2
  400aa4:	600b      	str	r3, [r1, #0]
  400aa6:	4770      	bx	lr
		if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400aa8:	4b31      	ldr	r3, [pc, #196]	; (400b70 <SystemCoreClockUpdate+0xf8>)
  400aaa:	695b      	ldr	r3, [r3, #20]
  400aac:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400ab0:	bf14      	ite	ne
  400ab2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400ab6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400aba:	4b2c      	ldr	r3, [pc, #176]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400abc:	601a      	str	r2, [r3, #0]
  400abe:	e7e4      	b.n	400a8a <SystemCoreClockUpdate+0x12>
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400ac0:	4b29      	ldr	r3, [pc, #164]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400ac2:	6a1b      	ldr	r3, [r3, #32]
  400ac4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400ac8:	d003      	beq.n	400ad2 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400aca:	4a2a      	ldr	r2, [pc, #168]	; (400b74 <SystemCoreClockUpdate+0xfc>)
  400acc:	4b27      	ldr	r3, [pc, #156]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400ace:	601a      	str	r2, [r3, #0]
  400ad0:	e7db      	b.n	400a8a <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400ad2:	4a29      	ldr	r2, [pc, #164]	; (400b78 <SystemCoreClockUpdate+0x100>)
  400ad4:	4b25      	ldr	r3, [pc, #148]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400ad6:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400ad8:	4b23      	ldr	r3, [pc, #140]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400ada:	6a1b      	ldr	r3, [r3, #32]
  400adc:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400ae0:	2b10      	cmp	r3, #16
  400ae2:	d005      	beq.n	400af0 <SystemCoreClockUpdate+0x78>
  400ae4:	2b20      	cmp	r3, #32
  400ae6:	d1d0      	bne.n	400a8a <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 3U;
  400ae8:	4a22      	ldr	r2, [pc, #136]	; (400b74 <SystemCoreClockUpdate+0xfc>)
  400aea:	4b20      	ldr	r3, [pc, #128]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400aec:	601a      	str	r2, [r3, #0]
				break;
  400aee:	e7cc      	b.n	400a8a <SystemCoreClockUpdate+0x12>
				SystemCoreClock *= 2U;
  400af0:	4a22      	ldr	r2, [pc, #136]	; (400b7c <SystemCoreClockUpdate+0x104>)
  400af2:	4b1e      	ldr	r3, [pc, #120]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400af4:	601a      	str	r2, [r3, #0]
				break;
  400af6:	e7c8      	b.n	400a8a <SystemCoreClockUpdate+0x12>
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400af8:	4b1b      	ldr	r3, [pc, #108]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400afa:	6a1b      	ldr	r3, [r3, #32]
  400afc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400b00:	d016      	beq.n	400b30 <SystemCoreClockUpdate+0xb8>
			SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  400b02:	4a1c      	ldr	r2, [pc, #112]	; (400b74 <SystemCoreClockUpdate+0xfc>)
  400b04:	4b19      	ldr	r3, [pc, #100]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400b06:	601a      	str	r2, [r3, #0]
		if ((uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK)
  400b08:	4b17      	ldr	r3, [pc, #92]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400b0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400b0c:	f003 0303 	and.w	r3, r3, #3
  400b10:	2b02      	cmp	r3, #2
  400b12:	d1ba      	bne.n	400a8a <SystemCoreClockUpdate+0x12>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400b14:	4a14      	ldr	r2, [pc, #80]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400b16:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400b18:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400b1a:	4814      	ldr	r0, [pc, #80]	; (400b6c <SystemCoreClockUpdate+0xf4>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400b1c:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400b20:	6803      	ldr	r3, [r0, #0]
  400b22:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400b26:	b2d2      	uxtb	r2, r2
  400b28:	fbb3 f3f2 	udiv	r3, r3, r2
  400b2c:	6003      	str	r3, [r0, #0]
  400b2e:	e7ac      	b.n	400a8a <SystemCoreClockUpdate+0x12>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400b30:	4a11      	ldr	r2, [pc, #68]	; (400b78 <SystemCoreClockUpdate+0x100>)
  400b32:	4b0e      	ldr	r3, [pc, #56]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400b34:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400b36:	4b0c      	ldr	r3, [pc, #48]	; (400b68 <SystemCoreClockUpdate+0xf0>)
  400b38:	6a1b      	ldr	r3, [r3, #32]
  400b3a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400b3e:	2b10      	cmp	r3, #16
  400b40:	d005      	beq.n	400b4e <SystemCoreClockUpdate+0xd6>
  400b42:	2b20      	cmp	r3, #32
  400b44:	d1e0      	bne.n	400b08 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
  400b46:	4a0b      	ldr	r2, [pc, #44]	; (400b74 <SystemCoreClockUpdate+0xfc>)
  400b48:	4b08      	ldr	r3, [pc, #32]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400b4a:	601a      	str	r2, [r3, #0]
				break;
  400b4c:	e7dc      	b.n	400b08 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
  400b4e:	4a0b      	ldr	r2, [pc, #44]	; (400b7c <SystemCoreClockUpdate+0x104>)
  400b50:	4b06      	ldr	r3, [pc, #24]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400b52:	601a      	str	r2, [r3, #0]
				break;
  400b54:	e7d8      	b.n	400b08 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  400b56:	4a05      	ldr	r2, [pc, #20]	; (400b6c <SystemCoreClockUpdate+0xf4>)
  400b58:	6813      	ldr	r3, [r2, #0]
  400b5a:	4909      	ldr	r1, [pc, #36]	; (400b80 <SystemCoreClockUpdate+0x108>)
  400b5c:	fba1 1303 	umull	r1, r3, r1, r3
  400b60:	085b      	lsrs	r3, r3, #1
  400b62:	6013      	str	r3, [r2, #0]
  400b64:	4770      	bx	lr
  400b66:	bf00      	nop
  400b68:	400e0400 	.word	0x400e0400
  400b6c:	20000004 	.word	0x20000004
  400b70:	400e1810 	.word	0x400e1810
  400b74:	00b71b00 	.word	0x00b71b00
  400b78:	003d0900 	.word	0x003d0900
  400b7c:	007a1200 	.word	0x007a1200
  400b80:	aaaaaaab 	.word	0xaaaaaaab

00400b84 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400b84:	4b12      	ldr	r3, [pc, #72]	; (400bd0 <system_init_flash+0x4c>)
  400b86:	4298      	cmp	r0, r3
  400b88:	d911      	bls.n	400bae <system_init_flash+0x2a>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if (ul_clk < CHIP_FREQ_FWS_1) {
  400b8a:	4b12      	ldr	r3, [pc, #72]	; (400bd4 <system_init_flash+0x50>)
  400b8c:	4298      	cmp	r0, r3
  400b8e:	d913      	bls.n	400bb8 <system_init_flash+0x34>
			EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if (ul_clk < CHIP_FREQ_FWS_2) {
  400b90:	4b11      	ldr	r3, [pc, #68]	; (400bd8 <system_init_flash+0x54>)
  400b92:	4298      	cmp	r0, r3
  400b94:	d914      	bls.n	400bc0 <system_init_flash+0x3c>
				EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400b96:	4b11      	ldr	r3, [pc, #68]	; (400bdc <system_init_flash+0x58>)
  400b98:	4298      	cmp	r0, r3
  400b9a:	d915      	bls.n	400bc8 <system_init_flash+0x44>
					EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400b9c:	4b10      	ldr	r3, [pc, #64]	; (400be0 <system_init_flash+0x5c>)
  400b9e:	4298      	cmp	r0, r3
						EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400ba0:	bf94      	ite	ls
  400ba2:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
						EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400ba6:	4a0f      	ldrhi	r2, [pc, #60]	; (400be4 <system_init_flash+0x60>)
  400ba8:	4b0f      	ldr	r3, [pc, #60]	; (400be8 <system_init_flash+0x64>)
  400baa:	601a      	str	r2, [r3, #0]
  400bac:	4770      	bx	lr
		EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400bae:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400bb2:	4b0d      	ldr	r3, [pc, #52]	; (400be8 <system_init_flash+0x64>)
  400bb4:	601a      	str	r2, [r3, #0]
  400bb6:	4770      	bx	lr
			EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400bb8:	4a0c      	ldr	r2, [pc, #48]	; (400bec <system_init_flash+0x68>)
  400bba:	4b0b      	ldr	r3, [pc, #44]	; (400be8 <system_init_flash+0x64>)
  400bbc:	601a      	str	r2, [r3, #0]
  400bbe:	4770      	bx	lr
				EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400bc0:	4a0b      	ldr	r2, [pc, #44]	; (400bf0 <system_init_flash+0x6c>)
  400bc2:	4b09      	ldr	r3, [pc, #36]	; (400be8 <system_init_flash+0x64>)
  400bc4:	601a      	str	r2, [r3, #0]
  400bc6:	4770      	bx	lr
					EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400bc8:	4a0a      	ldr	r2, [pc, #40]	; (400bf4 <system_init_flash+0x70>)
  400bca:	4b07      	ldr	r3, [pc, #28]	; (400be8 <system_init_flash+0x64>)
  400bcc:	601a      	str	r2, [r3, #0]
  400bce:	4770      	bx	lr
  400bd0:	01312cff 	.word	0x01312cff
  400bd4:	026259ff 	.word	0x026259ff
  400bd8:	039386ff 	.word	0x039386ff
  400bdc:	04c4b3ff 	.word	0x04c4b3ff
  400be0:	05f5e0ff 	.word	0x05f5e0ff
  400be4:	04000500 	.word	0x04000500
  400be8:	400e0a00 	.word	0x400e0a00
  400bec:	04000100 	.word	0x04000100
  400bf0:	04000200 	.word	0x04000200
  400bf4:	04000300 	.word	0x04000300

00400bf8 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400bf8:	4b0a      	ldr	r3, [pc, #40]	; (400c24 <_sbrk+0x2c>)
  400bfa:	681b      	ldr	r3, [r3, #0]
  400bfc:	b153      	cbz	r3, 400c14 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400bfe:	4b09      	ldr	r3, [pc, #36]	; (400c24 <_sbrk+0x2c>)
  400c00:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400c02:	181a      	adds	r2, r3, r0
  400c04:	4908      	ldr	r1, [pc, #32]	; (400c28 <_sbrk+0x30>)
  400c06:	4291      	cmp	r1, r2
  400c08:	db08      	blt.n	400c1c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400c0a:	4610      	mov	r0, r2
  400c0c:	4a05      	ldr	r2, [pc, #20]	; (400c24 <_sbrk+0x2c>)
  400c0e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400c10:	4618      	mov	r0, r3
  400c12:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400c14:	4a05      	ldr	r2, [pc, #20]	; (400c2c <_sbrk+0x34>)
  400c16:	4b03      	ldr	r3, [pc, #12]	; (400c24 <_sbrk+0x2c>)
  400c18:	601a      	str	r2, [r3, #0]
  400c1a:	e7f0      	b.n	400bfe <_sbrk+0x6>
		return (caddr_t) -1;	
  400c1c:	f04f 30ff 	mov.w	r0, #4294967295
}
  400c20:	4770      	bx	lr
  400c22:	bf00      	nop
  400c24:	200009d4 	.word	0x200009d4
  400c28:	2001fffc 	.word	0x2001fffc
  400c2c:	2000be00 	.word	0x2000be00

00400c30 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400c30:	f04f 30ff 	mov.w	r0, #4294967295
  400c34:	4770      	bx	lr

00400c36 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400c36:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400c3a:	604b      	str	r3, [r1, #4]

	return 0;
}
  400c3c:	2000      	movs	r0, #0
  400c3e:	4770      	bx	lr

00400c40 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400c40:	2001      	movs	r0, #1
  400c42:	4770      	bx	lr

00400c44 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400c44:	2000      	movs	r0, #0
  400c46:	4770      	bx	lr

00400c48 <USART0_Handler>:
#if SAMD || SAMR21 || SAML21 || SAMR30 || SAMR34 || SAMR35
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
  400c48:	b500      	push	{lr}
  400c4a:	b083      	sub	sp, #12
	uint8_t temp;
#if SAMD || SAMR21 || SAML21 || SAMR30 || SAMR34 || SAMR35
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#elif SAM4E || SAM4S
	usart_serial_read_packet((Usart *)USART_HOST, &temp, 1);
  400c4c:	2201      	movs	r2, #1
  400c4e:	f10d 0107 	add.w	r1, sp, #7
  400c52:	4810      	ldr	r0, [pc, #64]	; (400c94 <USART0_Handler+0x4c>)
  400c54:	4b10      	ldr	r3, [pc, #64]	; (400c98 <USART0_Handler+0x50>)
  400c56:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  400c58:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400c5a:	f3bf 8f5f 	dmb	sy
#else
    usart_serial_read_packet(USART_HOST, &temp, 1);
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
  400c5e:	2200      	movs	r2, #0
  400c60:	4b0e      	ldr	r3, [pc, #56]	; (400c9c <USART0_Handler+0x54>)
  400c62:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */

	serial_rx_buf[serial_rx_buf_tail] = temp;
  400c64:	4b0e      	ldr	r3, [pc, #56]	; (400ca0 <USART0_Handler+0x58>)
  400c66:	781b      	ldrb	r3, [r3, #0]
  400c68:	f89d 1007 	ldrb.w	r1, [sp, #7]
  400c6c:	4a0d      	ldr	r2, [pc, #52]	; (400ca4 <USART0_Handler+0x5c>)
  400c6e:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
  400c70:	2b9b      	cmp	r3, #155	; 0x9b
  400c72:	d00b      	beq.n	400c8c <USART0_Handler+0x44>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
	} else {
		serial_rx_buf_tail++;
  400c74:	3301      	adds	r3, #1
  400c76:	4a0a      	ldr	r2, [pc, #40]	; (400ca0 <USART0_Handler+0x58>)
  400c78:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
  400c7a:	2201      	movs	r2, #1
  400c7c:	4b07      	ldr	r3, [pc, #28]	; (400c9c <USART0_Handler+0x54>)
  400c7e:	701a      	strb	r2, [r3, #0]
  400c80:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400c84:	b662      	cpsie	i
}
  400c86:	b003      	add	sp, #12
  400c88:	f85d fb04 	ldr.w	pc, [sp], #4
		serial_rx_buf_tail = 0x00;
  400c8c:	2200      	movs	r2, #0
  400c8e:	4b04      	ldr	r3, [pc, #16]	; (400ca0 <USART0_Handler+0x58>)
  400c90:	701a      	strb	r2, [r3, #0]
  400c92:	e7f2      	b.n	400c7a <USART0_Handler+0x32>
  400c94:	400a0000 	.word	0x400a0000
  400c98:	0040025d 	.word	0x0040025d
  400c9c:	20000000 	.word	0x20000000
  400ca0:	20000a74 	.word	0x20000a74
  400ca4:	200009d8 	.word	0x200009d8

00400ca8 <afec0_data_ready>:
	return afec->AFEC_LCDR & AFEC_LCDR_LDATA_Msk;
  400ca8:	4b0a      	ldr	r3, [pc, #40]	; (400cd4 <afec0_data_ready+0x2c>)
  400caa:	6a1b      	ldr	r3, [r3, #32]
  400cac:	b29b      	uxth	r3, r3

/* brief AFEC0 DRDY interrupt callback function. */

static void afec0_data_ready(void)
{
	g_afec0_sample_data = afec_get_latest_value(AFEC0);					// Obtain latest sample from COLLECTOR signal (EXT3 - pin4 (ch6))
  400cae:	ee07 3a90 	vmov	s15, r3
  400cb2:	eef8 7a67 	vcvt.f32.u32	s15, s15
  400cb6:	4b08      	ldr	r3, [pc, #32]	; (400cd8 <afec0_data_ready+0x30>)
  400cb8:	edc3 7a00 	vstr	s15, [r3]
	buffer[bufferIndex]= g_afec0_sample_data;							// Transfer the sample to the buffer @ sample_index within the scanning wire cycle
  400cbc:	4907      	ldr	r1, [pc, #28]	; (400cdc <afec0_data_ready+0x34>)
  400cbe:	880a      	ldrh	r2, [r1, #0]
  400cc0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  400cc4:	ee17 3a90 	vmov	r3, s15
  400cc8:	4805      	ldr	r0, [pc, #20]	; (400ce0 <afec0_data_ready+0x38>)
  400cca:	f820 3012 	strh.w	r3, [r0, r2, lsl #1]
	bufferIndex++;														// adjust buffer index
  400cce:	3201      	adds	r2, #1
  400cd0:	800a      	strh	r2, [r1, #0]
  400cd2:	4770      	bx	lr
  400cd4:	400b0000 	.word	0x400b0000
  400cd8:	20008dd0 	.word	0x20008dd0
  400cdc:	20000a7c 	.word	0x20000a7c
  400ce0:	20000b98 	.word	0x20000b98

00400ce4 <afec1_data_ready>:
  400ce4:	4b05      	ldr	r3, [pc, #20]	; (400cfc <afec1_data_ready+0x18>)
  400ce6:	6a1b      	ldr	r3, [r3, #32]
  400ce8:	b29b      	uxth	r3, r3

/* brief AFEC1 DRDY interrupt callback function. */

static void afec1_data_ready(void)
{
	g_afec1_sample_data = afec_get_latest_value(AFEC1);					// Obtain latest sample from FIDUCIAL signal (EXT3 - pin3 (ch0))
  400cea:	ee07 3a90 	vmov	s15, r3
  400cee:	eef8 7a67 	vcvt.f32.u32	s15, s15
  400cf2:	4b03      	ldr	r3, [pc, #12]	; (400d00 <afec1_data_ready+0x1c>)
  400cf4:	edc3 7a00 	vstr	s15, [r3]
  400cf8:	4770      	bx	lr
  400cfa:	bf00      	nop
  400cfc:	400b4000 	.word	0x400b4000
  400d00:	20000b94 	.word	0x20000b94

00400d04 <print_float>:
	
	
/* Allows to convert integer sample value to float */

static void print_float(float voltage)
{
  400d04:	b508      	push	{r3, lr}
	uint8_t i;
	int32_t j;
	float f;

	f = 100.00 * voltage;
  400d06:	eddf 7a17 	vldr	s15, [pc, #92]	; 400d64 <print_float+0x60>
  400d0a:	ee60 7a27 	vmul.f32	s15, s0, s15

	j = (int32_t)f;
  400d0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  400d12:	ee17 3a90 	vmov	r3, s15

	if (voltage > 0) {
  400d16:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
  400d1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400d1e:	dd14      	ble.n	400d4a <print_float+0x46>
		i = j - (int32_t)voltage * 100;
  400d20:	eefd 7ac0 	vcvt.s32.f32	s15, s0
  400d24:	ee17 2a90 	vmov	r2, s15
  400d28:	eb02 0182 	add.w	r1, r2, r2, lsl #2
  400d2c:	ebc2 02c1 	rsb	r2, r2, r1, lsl #3
  400d30:	eb03 0282 	add.w	r2, r3, r2, lsl #2
  400d34:	b2d2      	uxtb	r2, r2
		} else {
		i = (int32_t)voltage * 100 - j;
	}

	j = j / 100;
  400d36:	490c      	ldr	r1, [pc, #48]	; (400d68 <print_float+0x64>)
  400d38:	fb81 0103 	smull	r0, r1, r1, r3
  400d3c:	17db      	asrs	r3, r3, #31

	printf("%d.%d\n\r", (int32_t)j, (int32_t)i);
  400d3e:	ebc3 1161 	rsb	r1, r3, r1, asr #5
  400d42:	480a      	ldr	r0, [pc, #40]	; (400d6c <print_float+0x68>)
  400d44:	4b0a      	ldr	r3, [pc, #40]	; (400d70 <print_float+0x6c>)
  400d46:	4798      	blx	r3
  400d48:	bd08      	pop	{r3, pc}
		i = (int32_t)voltage * 100 - j;
  400d4a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
  400d4e:	ee17 2a90 	vmov	r2, s15
  400d52:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400d56:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400d5a:	ebc3 0282 	rsb	r2, r3, r2, lsl #2
  400d5e:	b2d2      	uxtb	r2, r2
  400d60:	e7e9      	b.n	400d36 <print_float+0x32>
  400d62:	bf00      	nop
  400d64:	42c80000 	.word	0x42c80000
  400d68:	51eb851f 	.word	0x51eb851f
  400d6c:	00405f8c 	.word	0x00405f8c
  400d70:	00403061 	.word	0x00403061

00400d74 <usart_serial_getchar>:
{
  400d74:	b5f0      	push	{r4, r5, r6, r7, lr}
  400d76:	b083      	sub	sp, #12
  400d78:	4605      	mov	r5, r0
  400d7a:	460c      	mov	r4, r1
	uint32_t val = 0;
  400d7c:	2300      	movs	r3, #0
  400d7e:	9301      	str	r3, [sp, #4]
	if (UART0 == (Uart*)p_usart) {
  400d80:	4b18      	ldr	r3, [pc, #96]	; (400de4 <usart_serial_getchar+0x70>)
  400d82:	4298      	cmp	r0, r3
  400d84:	d00a      	beq.n	400d9c <usart_serial_getchar+0x28>
	if (UART1 == (Uart*)p_usart) {
  400d86:	4b18      	ldr	r3, [pc, #96]	; (400de8 <usart_serial_getchar+0x74>)
  400d88:	4298      	cmp	r0, r3
  400d8a:	d00f      	beq.n	400dac <usart_serial_getchar+0x38>
	if (USART0 == p_usart) {
  400d8c:	4b17      	ldr	r3, [pc, #92]	; (400dec <usart_serial_getchar+0x78>)
  400d8e:	4298      	cmp	r0, r3
  400d90:	d014      	beq.n	400dbc <usart_serial_getchar+0x48>
	if (USART1 == p_usart) {
  400d92:	4b17      	ldr	r3, [pc, #92]	; (400df0 <usart_serial_getchar+0x7c>)
  400d94:	429d      	cmp	r5, r3
  400d96:	d01b      	beq.n	400dd0 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400d98:	b003      	add	sp, #12
  400d9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400d9c:	461f      	mov	r7, r3
  400d9e:	4e15      	ldr	r6, [pc, #84]	; (400df4 <usart_serial_getchar+0x80>)
  400da0:	4621      	mov	r1, r4
  400da2:	4638      	mov	r0, r7
  400da4:	47b0      	blx	r6
  400da6:	2800      	cmp	r0, #0
  400da8:	d1fa      	bne.n	400da0 <usart_serial_getchar+0x2c>
  400daa:	e7f2      	b.n	400d92 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400dac:	461e      	mov	r6, r3
  400dae:	4d11      	ldr	r5, [pc, #68]	; (400df4 <usart_serial_getchar+0x80>)
  400db0:	4621      	mov	r1, r4
  400db2:	4630      	mov	r0, r6
  400db4:	47a8      	blx	r5
  400db6:	2800      	cmp	r0, #0
  400db8:	d1fa      	bne.n	400db0 <usart_serial_getchar+0x3c>
  400dba:	e7ed      	b.n	400d98 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400dbc:	461e      	mov	r6, r3
  400dbe:	4d0e      	ldr	r5, [pc, #56]	; (400df8 <usart_serial_getchar+0x84>)
  400dc0:	a901      	add	r1, sp, #4
  400dc2:	4630      	mov	r0, r6
  400dc4:	47a8      	blx	r5
  400dc6:	2800      	cmp	r0, #0
  400dc8:	d1fa      	bne.n	400dc0 <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  400dca:	9b01      	ldr	r3, [sp, #4]
  400dcc:	7023      	strb	r3, [r4, #0]
  400dce:	e7e3      	b.n	400d98 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400dd0:	461e      	mov	r6, r3
  400dd2:	4d09      	ldr	r5, [pc, #36]	; (400df8 <usart_serial_getchar+0x84>)
  400dd4:	a901      	add	r1, sp, #4
  400dd6:	4630      	mov	r0, r6
  400dd8:	47a8      	blx	r5
  400dda:	2800      	cmp	r0, #0
  400ddc:	d1fa      	bne.n	400dd4 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  400dde:	9b01      	ldr	r3, [sp, #4]
  400de0:	7023      	strb	r3, [r4, #0]
}
  400de2:	e7d9      	b.n	400d98 <usart_serial_getchar+0x24>
  400de4:	400e0600 	.word	0x400e0600
  400de8:	40060600 	.word	0x40060600
  400dec:	400a0000 	.word	0x400a0000
  400df0:	400a4000 	.word	0x400a4000
  400df4:	0040096f 	.word	0x0040096f
  400df8:	00400995 	.word	0x00400995

00400dfc <usart_serial_putchar>:
{
  400dfc:	b570      	push	{r4, r5, r6, lr}
  400dfe:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400e00:	4b18      	ldr	r3, [pc, #96]	; (400e64 <usart_serial_putchar+0x68>)
  400e02:	4298      	cmp	r0, r3
  400e04:	d00a      	beq.n	400e1c <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  400e06:	4b18      	ldr	r3, [pc, #96]	; (400e68 <usart_serial_putchar+0x6c>)
  400e08:	4298      	cmp	r0, r3
  400e0a:	d010      	beq.n	400e2e <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400e0c:	4b17      	ldr	r3, [pc, #92]	; (400e6c <usart_serial_putchar+0x70>)
  400e0e:	4298      	cmp	r0, r3
  400e10:	d016      	beq.n	400e40 <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  400e12:	4b17      	ldr	r3, [pc, #92]	; (400e70 <usart_serial_putchar+0x74>)
  400e14:	4298      	cmp	r0, r3
  400e16:	d01c      	beq.n	400e52 <usart_serial_putchar+0x56>
	return 0;
  400e18:	2000      	movs	r0, #0
}
  400e1a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400e1c:	461e      	mov	r6, r3
  400e1e:	4d15      	ldr	r5, [pc, #84]	; (400e74 <usart_serial_putchar+0x78>)
  400e20:	4621      	mov	r1, r4
  400e22:	4630      	mov	r0, r6
  400e24:	47a8      	blx	r5
  400e26:	2800      	cmp	r0, #0
  400e28:	d1fa      	bne.n	400e20 <usart_serial_putchar+0x24>
		return 1;
  400e2a:	2001      	movs	r0, #1
  400e2c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400e2e:	461e      	mov	r6, r3
  400e30:	4d10      	ldr	r5, [pc, #64]	; (400e74 <usart_serial_putchar+0x78>)
  400e32:	4621      	mov	r1, r4
  400e34:	4630      	mov	r0, r6
  400e36:	47a8      	blx	r5
  400e38:	2800      	cmp	r0, #0
  400e3a:	d1fa      	bne.n	400e32 <usart_serial_putchar+0x36>
		return 1;
  400e3c:	2001      	movs	r0, #1
  400e3e:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400e40:	461e      	mov	r6, r3
  400e42:	4d0d      	ldr	r5, [pc, #52]	; (400e78 <usart_serial_putchar+0x7c>)
  400e44:	4621      	mov	r1, r4
  400e46:	4630      	mov	r0, r6
  400e48:	47a8      	blx	r5
  400e4a:	2800      	cmp	r0, #0
  400e4c:	d1fa      	bne.n	400e44 <usart_serial_putchar+0x48>
		return 1;
  400e4e:	2001      	movs	r0, #1
  400e50:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400e52:	461e      	mov	r6, r3
  400e54:	4d08      	ldr	r5, [pc, #32]	; (400e78 <usart_serial_putchar+0x7c>)
  400e56:	4621      	mov	r1, r4
  400e58:	4630      	mov	r0, r6
  400e5a:	47a8      	blx	r5
  400e5c:	2800      	cmp	r0, #0
  400e5e:	d1fa      	bne.n	400e56 <usart_serial_putchar+0x5a>
		return 1;
  400e60:	2001      	movs	r0, #1
  400e62:	bd70      	pop	{r4, r5, r6, pc}
  400e64:	400e0600 	.word	0x400e0600
  400e68:	40060600 	.word	0x40060600
  400e6c:	400a0000 	.word	0x400a0000
  400e70:	400a4000 	.word	0x400a4000
  400e74:	0040095f 	.word	0x0040095f
  400e78:	00400981 	.word	0x00400981

00400e7c <sample_average>:

uint16_t sample_average(uint16_t start, uint16_t end) {
		
	uint32_t sample_avg = 0;
	
	for (uint16_t i = start; i < end; i++)
  400e7c:	4288      	cmp	r0, r1
  400e7e:	d216      	bcs.n	400eae <sample_average+0x32>
uint16_t sample_average(uint16_t start, uint16_t end) {
  400e80:	b430      	push	{r4, r5}
  400e82:	0043      	lsls	r3, r0, #1
  400e84:	3b02      	subs	r3, #2
  400e86:	4d0d      	ldr	r5, [pc, #52]	; (400ebc <sample_average+0x40>)
  400e88:	442b      	add	r3, r5
  400e8a:	1e4a      	subs	r2, r1, #1
  400e8c:	1a12      	subs	r2, r2, r0
  400e8e:	fa10 f282 	uxtah	r2, r0, r2
  400e92:	eb05 0542 	add.w	r5, r5, r2, lsl #1
	for (uint16_t i = start; i < end; i++)
  400e96:	2200      	movs	r2, #0
	{
		sample_avg += (uint32_t)buffer[i];
  400e98:	f833 4f02 	ldrh.w	r4, [r3, #2]!
  400e9c:	4422      	add	r2, r4
	for (uint16_t i = start; i < end; i++)
  400e9e:	42ab      	cmp	r3, r5
  400ea0:	d1fa      	bne.n	400e98 <sample_average+0x1c>
	}
	
	sample_avg = sample_avg/(end-start);
  400ea2:	1a09      	subs	r1, r1, r0
  400ea4:	fbb2 f2f1 	udiv	r2, r2, r1
	return sample_avg ;
}
  400ea8:	b290      	uxth	r0, r2
  400eaa:	bc30      	pop	{r4, r5}
  400eac:	4770      	bx	lr
	uint32_t sample_avg = 0;
  400eae:	2200      	movs	r2, #0
	sample_avg = sample_avg/(end-start);
  400eb0:	1a09      	subs	r1, r1, r0
  400eb2:	fbb2 f2f1 	udiv	r2, r2, r1
}
  400eb6:	b290      	uxth	r0, r2
  400eb8:	4770      	bx	lr
  400eba:	bf00      	nop
  400ebc:	20000b98 	.word	0x20000b98

00400ec0 <sample_variance>:

/*	Compute standard deviation from given sample data within a certain window */

uint16_t sample_variance(uint16_t start, uint16_t end)
{
  400ec0:	b570      	push	{r4, r5, r6, lr}
  400ec2:	4605      	mov	r5, r0
  400ec4:	460c      	mov	r4, r1
	uint32_t avg = sample_average(start, end);
  400ec6:	4b0e      	ldr	r3, [pc, #56]	; (400f00 <sample_variance+0x40>)
  400ec8:	4798      	blx	r3
	uint32_t variance = 0;
	
	for (uint16_t i = start; i< end; i++)
  400eca:	42a5      	cmp	r5, r4
  400ecc:	d216      	bcs.n	400efc <sample_variance+0x3c>
  400ece:	006a      	lsls	r2, r5, #1
  400ed0:	3a02      	subs	r2, #2
  400ed2:	4e0c      	ldr	r6, [pc, #48]	; (400f04 <sample_variance+0x44>)
  400ed4:	4432      	add	r2, r6
  400ed6:	1e63      	subs	r3, r4, #1
  400ed8:	1b5b      	subs	r3, r3, r5
  400eda:	fa15 f383 	uxtah	r3, r5, r3
  400ede:	eb06 0643 	add.w	r6, r6, r3, lsl #1
  400ee2:	2100      	movs	r1, #0
	{
		variance += (uint32_t)(buffer[i] - avg)*(buffer[i] - avg);
  400ee4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
  400ee8:	1a1b      	subs	r3, r3, r0
  400eea:	fb03 1103 	mla	r1, r3, r3, r1
	for (uint16_t i = start; i< end; i++)
  400eee:	42b2      	cmp	r2, r6
  400ef0:	d1f8      	bne.n	400ee4 <sample_variance+0x24>
	}
	
	return variance/(end-start);
  400ef2:	1b64      	subs	r4, r4, r5
  400ef4:	fbb1 f1f4 	udiv	r1, r1, r4
}
  400ef8:	b288      	uxth	r0, r1
  400efa:	bd70      	pop	{r4, r5, r6, pc}
	uint32_t variance = 0;
  400efc:	2100      	movs	r1, #0
  400efe:	e7f8      	b.n	400ef2 <sample_variance+0x32>
  400f00:	00400e7d 	.word	0x00400e7d
  400f04:	20000b98 	.word	0x20000b98

00400f08 <find_max>:

/* Find the maximum of the BPM-80 data half cycle and return its index*/

uint16_t find_max(uint16_t* halfcycle, uint16_t length)
{
  400f08:	b470      	push	{r4, r5, r6}
	uint16_t maximum = 0;
	uint16_t max_index = 0;
									
	for (uint16_t i = 0; i < length; i++)
  400f0a:	460e      	mov	r6, r1
  400f0c:	b181      	cbz	r1, 400f30 <find_max+0x28>
  400f0e:	1e81      	subs	r1, r0, #2
  400f10:	2300      	movs	r3, #0
  400f12:	4618      	mov	r0, r3
  400f14:	461c      	mov	r4, r3
  400f16:	b29d      	uxth	r5, r3
	{
		if (halfcycle[i] > maximum) 
  400f18:	f831 2f02 	ldrh.w	r2, [r1, #2]!
  400f1c:	42a2      	cmp	r2, r4
  400f1e:	bf84      	itt	hi
  400f20:	4628      	movhi	r0, r5
		{
			max_index = i;
			maximum = halfcycle[i];
  400f22:	4614      	movhi	r4, r2
  400f24:	3301      	adds	r3, #1
	for (uint16_t i = 0; i < length; i++)
  400f26:	b29a      	uxth	r2, r3
  400f28:	4296      	cmp	r6, r2
  400f2a:	d8f4      	bhi.n	400f16 <find_max+0xe>
		}
	}
	
	
	return max_index;
}
  400f2c:	bc70      	pop	{r4, r5, r6}
  400f2e:	4770      	bx	lr
	uint16_t max_index = 0;
  400f30:	4608      	mov	r0, r1
  400f32:	e7fb      	b.n	400f2c <find_max+0x24>

00400f34 <detect_peaks>:
/* Find beam peak locations and peak widths X and Y using the dispersion-based algorithm */
/* Returns an array of 6 elements : 1. peak position X  2. peak edge left X  3. peak edge right X 
									4. peak position Y  5. peak edge left Y  6. peak edge right Y */

void detect_peaks(uint16_t threshold)
{
  400f34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400f38:	4604      	mov	r4, r0
	uint16_t peak1 = find_max(buffer, half_cycle_length);
  400f3a:	4b3f      	ldr	r3, [pc, #252]	; (401038 <detect_peaks+0x104>)
  400f3c:	881e      	ldrh	r6, [r3, #0]
  400f3e:	4f3f      	ldr	r7, [pc, #252]	; (40103c <detect_peaks+0x108>)
  400f40:	4631      	mov	r1, r6
  400f42:	4638      	mov	r0, r7
  400f44:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 401044 <detect_peaks+0x110>
  400f48:	47c0      	blx	r8
  400f4a:	4605      	mov	r5, r0
	uint16_t peak2 = half_cycle_length + find_max(buffer+half_cycle_length, half_cycle_length);
  400f4c:	4631      	mov	r1, r6
  400f4e:	eb07 0046 	add.w	r0, r7, r6, lsl #1
  400f52:	47c0      	blx	r8
  400f54:	4430      	add	r0, r6
  400f56:	b280      	uxth	r0, r0
	
	// Use peak1 and peak2 to find the 4 corner points of the beams, possibly combine with dispersion-based algorithm
	
	peaks_localization[0] = peak1;
  400f58:	4b39      	ldr	r3, [pc, #228]	; (401040 <detect_peaks+0x10c>)
  400f5a:	801d      	strh	r5, [r3, #0]
	peaks_localization[3] = peak2;
  400f5c:	80d8      	strh	r0, [r3, #6]
			
	// find left corner of X peak
		
	for (uint16_t i = 0; i <= peak1; i++)
	{
		if(buffer[peak1 - i] < threshold) 
  400f5e:	f837 2015 	ldrh.w	r2, [r7, r5, lsl #1]
  400f62:	42a2      	cmp	r2, r4
  400f64:	d354      	bcc.n	401010 <detect_peaks+0xdc>
  400f66:	462b      	mov	r3, r5
  400f68:	2200      	movs	r2, #0
	for (uint16_t i = 0; i <= peak1; i++)
  400f6a:	3201      	adds	r2, #1
  400f6c:	b292      	uxth	r2, r2
  400f6e:	4295      	cmp	r5, r2
  400f70:	d30c      	bcc.n	400f8c <detect_peaks+0x58>
		if(buffer[peak1 - i] < threshold) 
  400f72:	1a99      	subs	r1, r3, r2
  400f74:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
  400f78:	42a1      	cmp	r1, r4
  400f7a:	d2f6      	bcs.n	400f6a <detect_peaks+0x36>
		{
			peaks_localization[1] = peak1-i;
  400f7c:	1aaa      	subs	r2, r5, r2
  400f7e:	4930      	ldr	r1, [pc, #192]	; (401040 <detect_peaks+0x10c>)
  400f80:	804a      	strh	r2, [r1, #2]
		}
	}
	
	// find right corner of X peak
	
	for (uint16_t i = 0; i <= half_cycle_length-peak1; i++)
  400f82:	1b71      	subs	r1, r6, r5
  400f84:	d504      	bpl.n	400f90 <detect_peaks+0x5c>
  400f86:	e011      	b.n	400fac <detect_peaks+0x78>
  400f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400f8c:	1b71      	subs	r1, r6, r5
  400f8e:	d40d      	bmi.n	400fac <detect_peaks+0x78>
  400f90:	2200      	movs	r2, #0
	{
		if(buffer[peak1 + i] < threshold) 
  400f92:	4f2a      	ldr	r7, [pc, #168]	; (40103c <detect_peaks+0x108>)
	for (uint16_t i = 0; i <= half_cycle_length-peak1; i++)
  400f94:	3201      	adds	r2, #1
  400f96:	b292      	uxth	r2, r2
  400f98:	428a      	cmp	r2, r1
  400f9a:	dc07      	bgt.n	400fac <detect_peaks+0x78>
		if(buffer[peak1 + i] < threshold) 
  400f9c:	18d6      	adds	r6, r2, r3
  400f9e:	f837 6016 	ldrh.w	r6, [r7, r6, lsl #1]
  400fa2:	42a6      	cmp	r6, r4
  400fa4:	d2f6      	bcs.n	400f94 <detect_peaks+0x60>
		{
			peaks_localization[2] = peak1+i;
  400fa6:	442a      	add	r2, r5
  400fa8:	4b25      	ldr	r3, [pc, #148]	; (401040 <detect_peaks+0x10c>)
  400faa:	809a      	strh	r2, [r3, #4]
	
	// find left corner of Y peak
	
	for (uint16_t i = 0; i <= peak2; i++)
	{
		if(buffer[peak2 - i] < threshold)
  400fac:	4601      	mov	r1, r0
  400fae:	4b23      	ldr	r3, [pc, #140]	; (40103c <detect_peaks+0x108>)
  400fb0:	f833 3010 	ldrh.w	r3, [r3, r0, lsl #1]
  400fb4:	42a3      	cmp	r3, r4
  400fb6:	d333      	bcc.n	401020 <detect_peaks+0xec>
  400fb8:	2200      	movs	r2, #0
  400fba:	4d20      	ldr	r5, [pc, #128]	; (40103c <detect_peaks+0x108>)
	for (uint16_t i = 0; i <= peak2; i++)
  400fbc:	3201      	adds	r2, #1
  400fbe:	b292      	uxth	r2, r2
  400fc0:	4290      	cmp	r0, r2
  400fc2:	d30e      	bcc.n	400fe2 <detect_peaks+0xae>
		if(buffer[peak2 - i] < threshold)
  400fc4:	1a8b      	subs	r3, r1, r2
  400fc6:	f835 3013 	ldrh.w	r3, [r5, r3, lsl #1]
  400fca:	42a3      	cmp	r3, r4
  400fcc:	d2f6      	bcs.n	400fbc <detect_peaks+0x88>
		{
			peaks_localization[4] = peak2-i;
  400fce:	1a82      	subs	r2, r0, r2
  400fd0:	4b1b      	ldr	r3, [pc, #108]	; (401040 <detect_peaks+0x10c>)
  400fd2:	811a      	strh	r2, [r3, #8]
		}
	}
	
	// find right corner of Y peak
	
	for (uint16_t i = 0; i <= buffersize-peak2; i++)
  400fd4:	f5c0 4582 	rsb	r5, r0, #16640	; 0x4100
  400fd8:	351b      	adds	r5, #27
  400fda:	2d00      	cmp	r5, #0
  400fdc:	da06      	bge.n	400fec <detect_peaks+0xb8>
  400fde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400fe2:	f5c0 4582 	rsb	r5, r0, #16640	; 0x4100
  400fe6:	351b      	adds	r5, #27
  400fe8:	2d00      	cmp	r5, #0
  400fea:	db0f      	blt.n	40100c <detect_peaks+0xd8>
  400fec:	2300      	movs	r3, #0
	{
		if(buffer[peak2 + i] < threshold)
  400fee:	4e13      	ldr	r6, [pc, #76]	; (40103c <detect_peaks+0x108>)
	for (uint16_t i = 0; i <= buffersize-peak2; i++)
  400ff0:	3301      	adds	r3, #1
  400ff2:	b29b      	uxth	r3, r3
  400ff4:	42ab      	cmp	r3, r5
  400ff6:	dcc7      	bgt.n	400f88 <detect_peaks+0x54>
		if(buffer[peak2 + i] < threshold)
  400ff8:	185a      	adds	r2, r3, r1
  400ffa:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
  400ffe:	42a2      	cmp	r2, r4
  401000:	d2f6      	bcs.n	400ff0 <detect_peaks+0xbc>
		{
			peaks_localization[5] = peak2+i;
  401002:	4403      	add	r3, r0
  401004:	4a0e      	ldr	r2, [pc, #56]	; (401040 <detect_peaks+0x10c>)
  401006:	8153      	strh	r3, [r2, #10]
			break;
  401008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40100c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			peaks_localization[1] = peak1-i;
  401010:	4b0b      	ldr	r3, [pc, #44]	; (401040 <detect_peaks+0x10c>)
  401012:	805d      	strh	r5, [r3, #2]
	for (uint16_t i = 0; i <= half_cycle_length-peak1; i++)
  401014:	1b76      	subs	r6, r6, r5
  401016:	2e00      	cmp	r6, #0
  401018:	bfa8      	it	ge
  40101a:	2200      	movge	r2, #0
  40101c:	dac3      	bge.n	400fa6 <detect_peaks+0x72>
  40101e:	e7c5      	b.n	400fac <detect_peaks+0x78>
			peaks_localization[4] = peak2-i;
  401020:	4b07      	ldr	r3, [pc, #28]	; (401040 <detect_peaks+0x10c>)
  401022:	8118      	strh	r0, [r3, #8]
	for (uint16_t i = 0; i <= buffersize-peak2; i++)
  401024:	f5c0 4382 	rsb	r3, r0, #16640	; 0x4100
  401028:	331b      	adds	r3, #27
  40102a:	2b00      	cmp	r3, #0
  40102c:	bfa8      	it	ge
  40102e:	2300      	movge	r3, #0
  401030:	dae7      	bge.n	401002 <detect_peaks+0xce>
  401032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401036:	bf00      	nop
  401038:	20000008 	.word	0x20000008
  40103c:	20000b98 	.word	0x20000b98
  401040:	20000a80 	.word	0x20000a80
  401044:	00400f09 	.word	0x00400f09

00401048 <compute_beam_intensity>:
/* Compute beam intensity of a cycle in X and Y cross section */
/* Takes as input the borders of both peaks*/
/* Outputs beam intensity of X and Y crossection, so that higher level data representation can choose whether to multiply or sum them*/

void compute_beam_intensity(uint16_t peak1_left, uint16_t peak1_right, uint16_t peak2_left, uint16_t peak2_right)
{
  401048:	b470      	push	{r4, r5, r6}
	
	for (uint16_t i = peak1_left; i < peak1_right ; i++)
  40104a:	4288      	cmp	r0, r1
  40104c:	d213      	bcs.n	401076 <compute_beam_intensity+0x2e>
  40104e:	4c16      	ldr	r4, [pc, #88]	; (4010a8 <compute_beam_intensity+0x60>)
  401050:	8825      	ldrh	r5, [r4, #0]
  401052:	0044      	lsls	r4, r0, #1
  401054:	3c02      	subs	r4, #2
  401056:	4e15      	ldr	r6, [pc, #84]	; (4010ac <compute_beam_intensity+0x64>)
  401058:	4434      	add	r4, r6
  40105a:	3901      	subs	r1, #1
  40105c:	1a09      	subs	r1, r1, r0
  40105e:	fa10 f081 	uxtah	r0, r0, r1
  401062:	eb06 0040 	add.w	r0, r6, r0, lsl #1
	{
		beam_intensity[0] += (uint32_t)buffer[i];
  401066:	f834 1f02 	ldrh.w	r1, [r4, #2]!
  40106a:	4429      	add	r1, r5
  40106c:	b28d      	uxth	r5, r1
	for (uint16_t i = peak1_left; i < peak1_right ; i++)
  40106e:	4284      	cmp	r4, r0
  401070:	d1f9      	bne.n	401066 <compute_beam_intensity+0x1e>
  401072:	490d      	ldr	r1, [pc, #52]	; (4010a8 <compute_beam_intensity+0x60>)
  401074:	800d      	strh	r5, [r1, #0]
	}
	
	for (uint16_t i = peak2_left; i < peak2_right ; i++)
  401076:	429a      	cmp	r2, r3
  401078:	d213      	bcs.n	4010a2 <compute_beam_intensity+0x5a>
  40107a:	490b      	ldr	r1, [pc, #44]	; (4010a8 <compute_beam_intensity+0x60>)
  40107c:	8849      	ldrh	r1, [r1, #2]
  40107e:	0050      	lsls	r0, r2, #1
  401080:	3802      	subs	r0, #2
  401082:	4c0a      	ldr	r4, [pc, #40]	; (4010ac <compute_beam_intensity+0x64>)
  401084:	4420      	add	r0, r4
  401086:	3b01      	subs	r3, #1
  401088:	1a9b      	subs	r3, r3, r2
  40108a:	fa12 f283 	uxtah	r2, r2, r3
  40108e:	eb04 0242 	add.w	r2, r4, r2, lsl #1
	{
		beam_intensity[1] += (uint32_t)buffer[i];
  401092:	f830 3f02 	ldrh.w	r3, [r0, #2]!
  401096:	4419      	add	r1, r3
  401098:	b289      	uxth	r1, r1
	for (uint16_t i = peak2_left; i < peak2_right ; i++)
  40109a:	4290      	cmp	r0, r2
  40109c:	d1f9      	bne.n	401092 <compute_beam_intensity+0x4a>
  40109e:	4b02      	ldr	r3, [pc, #8]	; (4010a8 <compute_beam_intensity+0x60>)
  4010a0:	8059      	strh	r1, [r3, #2]
	}
	
}
  4010a2:	bc70      	pop	{r4, r5, r6}
  4010a4:	4770      	bx	lr
  4010a6:	bf00      	nop
  4010a8:	20000a78 	.word	0x20000a78
  4010ac:	20000b98 	.word	0x20000b98

004010b0 <compute_skewness>:


/* Compute skewness of the beam  X and Y */

void compute_skewness(uint16_t peak1_left, uint16_t peak1_right, uint16_t peak2_left, uint16_t peak2_right)
{
  4010b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4010b4:	ed2d 8b02 	vpush	{d8}
  4010b8:	b083      	sub	sp, #12
  4010ba:	4682      	mov	sl, r0
  4010bc:	468b      	mov	fp, r1
  4010be:	4691      	mov	r9, r2
  4010c0:	4698      	mov	r8, r3
	uint16_t* mean[2] = {0,0};
		
	mean[0] = sample_average(peak1_left, peak1_right);
  4010c2:	4c3b      	ldr	r4, [pc, #236]	; (4011b0 <compute_skewness+0x100>)
  4010c4:	47a0      	blx	r4
  4010c6:	4607      	mov	r7, r0
	mean[1] = sample_average(peak2_left, peak2_right);
  4010c8:	4641      	mov	r1, r8
  4010ca:	4648      	mov	r0, r9
  4010cc:	47a0      	blx	r4
  4010ce:	4606      	mov	r6, r0
	uint16_t second_peak_mean = mean[1];
	
	uint32_t numerator = 0;
	uint16_t denominator = 0;
	
	for (uint16_t i = peak1_left; i < peak1_right; i++)
  4010d0:	45da      	cmp	sl, fp
  4010d2:	d217      	bcs.n	401104 <compute_skewness+0x54>
  4010d4:	ea4f 044a 	mov.w	r4, sl, lsl #1
  4010d8:	3c02      	subs	r4, #2
  4010da:	4d36      	ldr	r5, [pc, #216]	; (4011b4 <compute_skewness+0x104>)
  4010dc:	442c      	add	r4, r5
  4010de:	f10b 33ff 	add.w	r3, fp, #4294967295
  4010e2:	eba3 030a 	sub.w	r3, r3, sl
  4010e6:	fa1a f383 	uxtah	r3, sl, r3
  4010ea:	eb05 0543 	add.w	r5, r5, r3, lsl #1
	{
		numerator += pow((buffer[i]-first_peak_mean),3); 
  4010ee:	ed9f 8b2e 	vldr	d8, [pc, #184]	; 4011a8 <compute_skewness+0xf8>
  4010f2:	9001      	str	r0, [sp, #4]
  4010f4:	f834 0f02 	ldrh.w	r0, [r4, #2]!
  4010f8:	1bc0      	subs	r0, r0, r7
  4010fa:	2800      	cmp	r0, #0
  4010fc:	dd46      	ble.n	40118c <compute_skewness+0xdc>
	for (uint16_t i = peak1_left; i < peak1_right; i++)
  4010fe:	42ac      	cmp	r4, r5
  401100:	d1f8      	bne.n	4010f4 <compute_skewness+0x44>
  401102:	9e01      	ldr	r6, [sp, #4]
	}
	
	skewness[0] =  sample_variance(peak1_left, peak1_right) ;
  401104:	4659      	mov	r1, fp
  401106:	4650      	mov	r0, sl
  401108:	4b2b      	ldr	r3, [pc, #172]	; (4011b8 <compute_skewness+0x108>)
  40110a:	4798      	blx	r3
  40110c:	ee07 0a90 	vmov	s15, r0
  401110:	eef8 7a67 	vcvt.f32.u32	s15, s15
  401114:	4b29      	ldr	r3, [pc, #164]	; (4011bc <compute_skewness+0x10c>)
  401116:	edc3 7a00 	vstr	s15, [r3]
	
	
	numerator = 0;
	denominator = 0;
	
	for (uint16_t i = peak2_left; i < peak2_right; i++)
  40111a:	45c1      	cmp	r9, r8
  40111c:	d218      	bcs.n	401150 <compute_skewness+0xa0>
  40111e:	ea4f 0449 	mov.w	r4, r9, lsl #1
  401122:	3c02      	subs	r4, #2
  401124:	4d23      	ldr	r5, [pc, #140]	; (4011b4 <compute_skewness+0x104>)
  401126:	442c      	add	r4, r5
  401128:	f108 33ff 	add.w	r3, r8, #4294967295
  40112c:	eba3 0309 	sub.w	r3, r3, r9
  401130:	fa19 f383 	uxtah	r3, r9, r3
  401134:	eb05 0543 	add.w	r5, r5, r3, lsl #1
	{
		numerator += pow((buffer[i]-second_peak_mean),3);
  401138:	ed9f 8b1b 	vldr	d8, [pc, #108]	; 4011a8 <compute_skewness+0xf8>
  40113c:	f8df a08c 	ldr.w	sl, [pc, #140]	; 4011cc <compute_skewness+0x11c>
  401140:	4f1f      	ldr	r7, [pc, #124]	; (4011c0 <compute_skewness+0x110>)
  401142:	f834 0f02 	ldrh.w	r0, [r4, #2]!
  401146:	1b80      	subs	r0, r0, r6
  401148:	2800      	cmp	r0, #0
  40114a:	dd26      	ble.n	40119a <compute_skewness+0xea>
	for (uint16_t i = peak2_left; i < peak2_right; i++)
  40114c:	42ac      	cmp	r4, r5
  40114e:	d1f8      	bne.n	401142 <compute_skewness+0x92>
	}
	
	skewness[1] = ((peak2_right - peak2_left - 2)*pow(sample_variance(peak2_left, peak2_right),3)) ;
  401150:	4641      	mov	r1, r8
  401152:	4648      	mov	r0, r9
  401154:	4b18      	ldr	r3, [pc, #96]	; (4011b8 <compute_skewness+0x108>)
  401156:	4798      	blx	r3
  401158:	4b1a      	ldr	r3, [pc, #104]	; (4011c4 <compute_skewness+0x114>)
  40115a:	4798      	blx	r3
  40115c:	2200      	movs	r2, #0
  40115e:	4b1a      	ldr	r3, [pc, #104]	; (4011c8 <compute_skewness+0x118>)
  401160:	4c17      	ldr	r4, [pc, #92]	; (4011c0 <compute_skewness+0x110>)
  401162:	47a0      	blx	r4
  401164:	4604      	mov	r4, r0
  401166:	460d      	mov	r5, r1
  401168:	eba8 0009 	sub.w	r0, r8, r9
  40116c:	3802      	subs	r0, #2
  40116e:	4b17      	ldr	r3, [pc, #92]	; (4011cc <compute_skewness+0x11c>)
  401170:	4798      	blx	r3
  401172:	4622      	mov	r2, r4
  401174:	462b      	mov	r3, r5
  401176:	4c16      	ldr	r4, [pc, #88]	; (4011d0 <compute_skewness+0x120>)
  401178:	47a0      	blx	r4
  40117a:	4b16      	ldr	r3, [pc, #88]	; (4011d4 <compute_skewness+0x124>)
  40117c:	4798      	blx	r3
  40117e:	4b0f      	ldr	r3, [pc, #60]	; (4011bc <compute_skewness+0x10c>)
  401180:	6058      	str	r0, [r3, #4]
	
}
  401182:	b003      	add	sp, #12
  401184:	ecbd 8b02 	vpop	{d8}
  401188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		numerator += pow((buffer[i]-first_peak_mean),3); 
  40118c:	4b0f      	ldr	r3, [pc, #60]	; (4011cc <compute_skewness+0x11c>)
  40118e:	4798      	blx	r3
  401190:	ec53 2b18 	vmov	r2, r3, d8
  401194:	4e0a      	ldr	r6, [pc, #40]	; (4011c0 <compute_skewness+0x110>)
  401196:	47b0      	blx	r6
  401198:	e7b1      	b.n	4010fe <compute_skewness+0x4e>
		numerator += pow((buffer[i]-second_peak_mean),3);
  40119a:	47d0      	blx	sl
  40119c:	ec53 2b18 	vmov	r2, r3, d8
  4011a0:	47b8      	blx	r7
  4011a2:	e7d3      	b.n	40114c <compute_skewness+0x9c>
  4011a4:	f3af 8000 	nop.w
  4011a8:	00000000 	.word	0x00000000
  4011ac:	40080000 	.word	0x40080000
  4011b0:	00400e7d 	.word	0x00400e7d
  4011b4:	20000b98 	.word	0x20000b98
  4011b8:	00400ec1 	.word	0x00400ec1
  4011bc:	20000a8c 	.word	0x20000a8c
  4011c0:	00401549 	.word	0x00401549
  4011c4:	00402919 	.word	0x00402919
  4011c8:	40080000 	.word	0x40080000
  4011cc:	00402939 	.word	0x00402939
  4011d0:	00402a05 	.word	0x00402a05
  4011d4:	00402f65 	.word	0x00402f65

004011d8 <show_beam_parameters>:


/* Present beam parameters on terminal*/

void show_beam_parameters()
{
  4011d8:	b570      	push	{r4, r5, r6, lr}
	
	
	detect_peaks(20);
  4011da:	2014      	movs	r0, #20
  4011dc:	4b25      	ldr	r3, [pc, #148]	; (401274 <show_beam_parameters+0x9c>)
  4011de:	4798      	blx	r3
	compute_beam_intensity(peaks_localization[1], peaks_localization[2], peaks_localization[4], peaks_localization[5]);
  4011e0:	4d25      	ldr	r5, [pc, #148]	; (401278 <show_beam_parameters+0xa0>)
  4011e2:	896b      	ldrh	r3, [r5, #10]
  4011e4:	892a      	ldrh	r2, [r5, #8]
  4011e6:	88a9      	ldrh	r1, [r5, #4]
  4011e8:	8868      	ldrh	r0, [r5, #2]
  4011ea:	4c24      	ldr	r4, [pc, #144]	; (40127c <show_beam_parameters+0xa4>)
  4011ec:	47a0      	blx	r4
	//fwhm = compute_fwhm(buffer, find_max(buffer, half_cycle_length), find_max(buffer + half_cycle_length, half_cycle_length));
	compute_skewness(peaks_localization[1], peaks_localization[2], peaks_localization[4], peaks_localization[5]);
  4011ee:	896b      	ldrh	r3, [r5, #10]
  4011f0:	892a      	ldrh	r2, [r5, #8]
  4011f2:	88a9      	ldrh	r1, [r5, #4]
  4011f4:	8868      	ldrh	r0, [r5, #2]
  4011f6:	4c22      	ldr	r4, [pc, #136]	; (401280 <show_beam_parameters+0xa8>)
  4011f8:	47a0      	blx	r4
	
	printf(" BPM-80 beam characteristics \n\r");
  4011fa:	4822      	ldr	r0, [pc, #136]	; (401284 <show_beam_parameters+0xac>)
  4011fc:	4c22      	ldr	r4, [pc, #136]	; (401288 <show_beam_parameters+0xb0>)
  4011fe:	47a0      	blx	r4
	printf("************************************************\n\r\r");
  401200:	4822      	ldr	r0, [pc, #136]	; (40128c <show_beam_parameters+0xb4>)
  401202:	47a0      	blx	r4
	
	printf("Peak localization : \n\n\r");
  401204:	4822      	ldr	r0, [pc, #136]	; (401290 <show_beam_parameters+0xb8>)
  401206:	47a0      	blx	r4
	printf("---------------------------------------\n\n\r");
  401208:	4e22      	ldr	r6, [pc, #136]	; (401294 <show_beam_parameters+0xbc>)
  40120a:	4630      	mov	r0, r6
  40120c:	47a0      	blx	r4
	
	printf("Peak X pinnacle : %u \n\r", *peaks_localization);
  40120e:	8829      	ldrh	r1, [r5, #0]
  401210:	4821      	ldr	r0, [pc, #132]	; (401298 <show_beam_parameters+0xc0>)
  401212:	47a0      	blx	r4
	printf("Peak X start    : %u \n\r", *(peaks_localization+1));
  401214:	8869      	ldrh	r1, [r5, #2]
  401216:	4821      	ldr	r0, [pc, #132]	; (40129c <show_beam_parameters+0xc4>)
  401218:	47a0      	blx	r4
	printf("Peak X end      : %u \n\n\r\r", *(peaks_localization+2));
  40121a:	88a9      	ldrh	r1, [r5, #4]
  40121c:	4820      	ldr	r0, [pc, #128]	; (4012a0 <show_beam_parameters+0xc8>)
  40121e:	47a0      	blx	r4
	
	printf("Peak Y pinnacle : %u \n\r", peaks_localization[3]);
  401220:	88e9      	ldrh	r1, [r5, #6]
  401222:	4820      	ldr	r0, [pc, #128]	; (4012a4 <show_beam_parameters+0xcc>)
  401224:	47a0      	blx	r4
	printf("Peak Y start    : %u \n\r", peaks_localization[4]);
  401226:	8929      	ldrh	r1, [r5, #8]
  401228:	481f      	ldr	r0, [pc, #124]	; (4012a8 <show_beam_parameters+0xd0>)
  40122a:	47a0      	blx	r4
	printf("Peak Y end      : %u \n\n\r\r", peaks_localization[5]);
  40122c:	8969      	ldrh	r1, [r5, #10]
  40122e:	481f      	ldr	r0, [pc, #124]	; (4012ac <show_beam_parameters+0xd4>)
  401230:	47a0      	blx	r4
	
	printf("Beam intensity profile : \n\n\r");
  401232:	481f      	ldr	r0, [pc, #124]	; (4012b0 <show_beam_parameters+0xd8>)
  401234:	47a0      	blx	r4
	printf("---------------------------------------\n\n\r");
  401236:	4630      	mov	r0, r6
  401238:	47a0      	blx	r4
	
	printf("X intensity : %u \n\r", beam_intensity[0]);
  40123a:	4d1e      	ldr	r5, [pc, #120]	; (4012b4 <show_beam_parameters+0xdc>)
  40123c:	8829      	ldrh	r1, [r5, #0]
  40123e:	481e      	ldr	r0, [pc, #120]	; (4012b8 <show_beam_parameters+0xe0>)
  401240:	47a0      	blx	r4
	printf("Y intensity : %u \n\r", beam_intensity[1]);
  401242:	8869      	ldrh	r1, [r5, #2]
  401244:	481d      	ldr	r0, [pc, #116]	; (4012bc <show_beam_parameters+0xe4>)
  401246:	47a0      	blx	r4
	printf("Total intensity : %u \n\n\r\r", beam_intensity[0] + beam_intensity[1]);
  401248:	8829      	ldrh	r1, [r5, #0]
  40124a:	886b      	ldrh	r3, [r5, #2]
  40124c:	4419      	add	r1, r3
  40124e:	481c      	ldr	r0, [pc, #112]	; (4012c0 <show_beam_parameters+0xe8>)
  401250:	47a0      	blx	r4
	//printf("Beam FWHM: \n\n");
	
	//printf("X FWHM : %u \n", fwhm[0]);
	//printf("Y FWHM : %u \n\n", fwhm[1]);
	
	printf("Beam skewness: \n\n\r");
  401252:	481c      	ldr	r0, [pc, #112]	; (4012c4 <show_beam_parameters+0xec>)
  401254:	47a0      	blx	r4
	printf("---------------------------------------\n\n\r");
  401256:	4630      	mov	r0, r6
  401258:	47a0      	blx	r4
	
	printf("X skewness : ");
  40125a:	481b      	ldr	r0, [pc, #108]	; (4012c8 <show_beam_parameters+0xf0>)
  40125c:	47a0      	blx	r4
	print_float(skewness[0]);
  40125e:	4e1b      	ldr	r6, [pc, #108]	; (4012cc <show_beam_parameters+0xf4>)
  401260:	ed96 0a00 	vldr	s0, [r6]
  401264:	4d1a      	ldr	r5, [pc, #104]	; (4012d0 <show_beam_parameters+0xf8>)
  401266:	47a8      	blx	r5
	
	printf("Y skewness : ");
  401268:	481a      	ldr	r0, [pc, #104]	; (4012d4 <show_beam_parameters+0xfc>)
  40126a:	47a0      	blx	r4
	print_float(skewness[1]);
  40126c:	ed96 0a01 	vldr	s0, [r6, #4]
  401270:	47a8      	blx	r5
  401272:	bd70      	pop	{r4, r5, r6, pc}
  401274:	00400f35 	.word	0x00400f35
  401278:	20000a80 	.word	0x20000a80
  40127c:	00401049 	.word	0x00401049
  401280:	004010b1 	.word	0x004010b1
  401284:	00405f94 	.word	0x00405f94
  401288:	00403061 	.word	0x00403061
  40128c:	00405fb4 	.word	0x00405fb4
  401290:	00405fe8 	.word	0x00405fe8
  401294:	00406000 	.word	0x00406000
  401298:	0040602c 	.word	0x0040602c
  40129c:	00406044 	.word	0x00406044
  4012a0:	0040605c 	.word	0x0040605c
  4012a4:	00406078 	.word	0x00406078
  4012a8:	00406090 	.word	0x00406090
  4012ac:	004060a8 	.word	0x004060a8
  4012b0:	004060c4 	.word	0x004060c4
  4012b4:	20000a78 	.word	0x20000a78
  4012b8:	004060e4 	.word	0x004060e4
  4012bc:	004060f8 	.word	0x004060f8
  4012c0:	0040610c 	.word	0x0040610c
  4012c4:	00406128 	.word	0x00406128
  4012c8:	0040613c 	.word	0x0040613c
  4012cc:	20000a8c 	.word	0x20000a8c
  4012d0:	00400d05 	.word	0x00400d05
  4012d4:	0040614c 	.word	0x0040614c

004012d8 <main>:




int main (void)
{
  4012d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4012dc:	b08d      	sub	sp, #52	; 0x34
	/* Initialize the SAM system. */
	sysclk_init();
  4012de:	4b71      	ldr	r3, [pc, #452]	; (4014a4 <main+0x1cc>)
  4012e0:	4798      	blx	r3
	board_init();
  4012e2:	4b71      	ldr	r3, [pc, #452]	; (4014a8 <main+0x1d0>)
  4012e4:	4798      	blx	r3
  4012e6:	2007      	movs	r0, #7
  4012e8:	f8df 9254 	ldr.w	r9, [pc, #596]	; 401540 <main+0x268>
  4012ec:	47c8      	blx	r9
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4012ee:	4c6f      	ldr	r4, [pc, #444]	; (4014ac <main+0x1d4>)
  4012f0:	4b6f      	ldr	r3, [pc, #444]	; (4014b0 <main+0x1d8>)
  4012f2:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4012f4:	4a6f      	ldr	r2, [pc, #444]	; (4014b4 <main+0x1dc>)
  4012f6:	4b70      	ldr	r3, [pc, #448]	; (4014b8 <main+0x1e0>)
  4012f8:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4012fa:	4a70      	ldr	r2, [pc, #448]	; (4014bc <main+0x1e4>)
  4012fc:	4b70      	ldr	r3, [pc, #448]	; (4014c0 <main+0x1e8>)
  4012fe:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  401300:	4d70      	ldr	r5, [pc, #448]	; (4014c4 <main+0x1ec>)
  401302:	9505      	str	r5, [sp, #20]
	uart_settings.ul_baudrate = opt->baudrate;
  401304:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  401308:	9306      	str	r3, [sp, #24]
	uart_settings.ul_mode = opt->paritytype;
  40130a:	f44f 6800 	mov.w	r8, #2048	; 0x800
  40130e:	f8cd 801c 	str.w	r8, [sp, #28]
  401312:	2007      	movs	r0, #7
  401314:	47c8      	blx	r9
		uart_init((Uart*)p_usart, &uart_settings);
  401316:	a905      	add	r1, sp, #20
  401318:	4620      	mov	r0, r4
  40131a:	4b6b      	ldr	r3, [pc, #428]	; (4014c8 <main+0x1f0>)
  40131c:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40131e:	4e6b      	ldr	r6, [pc, #428]	; (4014cc <main+0x1f4>)
  401320:	6833      	ldr	r3, [r6, #0]
  401322:	2100      	movs	r1, #0
  401324:	6898      	ldr	r0, [r3, #8]
  401326:	4c6a      	ldr	r4, [pc, #424]	; (4014d0 <main+0x1f8>)
  401328:	47a0      	blx	r4
	setbuf(stdin, NULL);
  40132a:	6833      	ldr	r3, [r6, #0]
  40132c:	2100      	movs	r1, #0
  40132e:	6858      	ldr	r0, [r3, #4]
  401330:	47a0      	blx	r4

	configure_console();
	
	g_afec0_sample_data = 0;
  401332:	2300      	movs	r3, #0
  401334:	4a67      	ldr	r2, [pc, #412]	; (4014d4 <main+0x1fc>)
  401336:	6013      	str	r3, [r2, #0]
	g_afec1_sample_data = 0;
  401338:	4a67      	ldr	r2, [pc, #412]	; (4014d8 <main+0x200>)
  40133a:	6013      	str	r3, [r2, #0]
	afec_enable(AFEC0);
  40133c:	4c67      	ldr	r4, [pc, #412]	; (4014dc <main+0x204>)
  40133e:	4620      	mov	r0, r4
  401340:	4f67      	ldr	r7, [pc, #412]	; (4014e0 <main+0x208>)
  401342:	47b8      	blx	r7
	afec_get_config_defaults(&afec_cfg);
  401344:	a805      	add	r0, sp, #20
  401346:	4b67      	ldr	r3, [pc, #412]	; (4014e4 <main+0x20c>)
  401348:	4798      	blx	r3
	afec_ch_get_config_defaults(&afec_ch_cfg);
  40134a:	a802      	add	r0, sp, #8
  40134c:	4b66      	ldr	r3, [pc, #408]	; (4014e8 <main+0x210>)
  40134e:	4798      	blx	r3
		afec_enable(AFEC1);
  401350:	4e66      	ldr	r6, [pc, #408]	; (4014ec <main+0x214>)
  401352:	4630      	mov	r0, r6
  401354:	47b8      	blx	r7
		afec_init(AFEC0, &afec_cfg);
  401356:	a905      	add	r1, sp, #20
  401358:	4620      	mov	r0, r4
  40135a:	4f65      	ldr	r7, [pc, #404]	; (4014f0 <main+0x218>)
  40135c:	47b8      	blx	r7
		afec_init(AFEC1, &afec_cfg);
  40135e:	a905      	add	r1, sp, #20
  401360:	4630      	mov	r0, r6
  401362:	47b8      	blx	r7
		afec_ch_set_config(AFEC0, AFEC_CHANNEL_6, &afec_ch_cfg);
  401364:	aa02      	add	r2, sp, #8
  401366:	2106      	movs	r1, #6
  401368:	4620      	mov	r0, r4
  40136a:	4f62      	ldr	r7, [pc, #392]	; (4014f4 <main+0x21c>)
  40136c:	47b8      	blx	r7
		afec_ch_set_config(AFEC1, AFEC_CHANNEL_0, &afec_ch_cfg);
  40136e:	aa02      	add	r2, sp, #8
  401370:	2100      	movs	r1, #0
  401372:	4630      	mov	r0, r6
  401374:	47b8      	blx	r7
	afec->AFEC_CSELR = afec_ch;
  401376:	2700      	movs	r7, #0
  401378:	6677      	str	r7, [r6, #100]	; 0x64
	afec->AFEC_COCR = (aoffset & AFEC_COCR_AOFF_Msk);
  40137a:	f8c6 806c 	str.w	r8, [r6, #108]	; 0x6c
	afec->AFEC_CSELR = afec_ch;
  40137e:	2306      	movs	r3, #6
  401380:	6663      	str	r3, [r4, #100]	; 0x64
	afec->AFEC_COCR = (aoffset & AFEC_COCR_AOFF_Msk);
  401382:	f8c4 806c 	str.w	r8, [r4, #108]	; 0x6c
	reg = afec->AFEC_MR;
  401386:	6873      	ldr	r3, [r6, #4]
		reg &= ~(AFEC_MR_TRGSEL_Msk | AFEC_MR_TRGEN | AFEC_MR_FREERUN_ON);
  401388:	f023 038f 	bic.w	r3, r3, #143	; 0x8f
	afec->AFEC_MR = reg;
  40138c:	6073      	str	r3, [r6, #4]
    uint32_t ul_div = 0;
  40138e:	9703      	str	r7, [sp, #12]
	uint32_t ul_tc_clks = 0;
  401390:	f10d 0830 	add.w	r8, sp, #48	; 0x30
  401394:	f848 7d20 	str.w	r7, [r8, #-32]!
	pmc_enable_periph_clk(ID_TC0);														// Enable peripheral clock of timer counter 0
  401398:	2015      	movs	r0, #21
  40139a:	47c8      	blx	r9
	tc_find_mck_divisor(sampleFreq, ul_sysclk, &ul_div, &ul_tc_clks, ul_sysclk);
  40139c:	9500      	str	r5, [sp, #0]
  40139e:	4643      	mov	r3, r8
  4013a0:	aa03      	add	r2, sp, #12
  4013a2:	4629      	mov	r1, r5
  4013a4:	4854      	ldr	r0, [pc, #336]	; (4014f8 <main+0x220>)
  4013a6:	f8df 819c 	ldr.w	r8, [pc, #412]	; 401544 <main+0x26c>
  4013aa:	47c0      	blx	r8
	tc_init(TC0, 0, ul_tc_clks | TC_CMR_CPCTRG | TC_CMR_WAVE |
  4013ac:	f8df 8178 	ldr.w	r8, [pc, #376]	; 401528 <main+0x250>
  4013b0:	9a04      	ldr	r2, [sp, #16]
  4013b2:	f442 22d8 	orr.w	r2, r2, #442368	; 0x6c000
  4013b6:	4639      	mov	r1, r7
  4013b8:	4640      	mov	r0, r8
  4013ba:	4b50      	ldr	r3, [pc, #320]	; (4014fc <main+0x224>)
  4013bc:	4798      	blx	r3
	TC0->TC_CHANNEL[0].TC_RA = (ul_sysclk / ul_div) / (sampleFreq*2);
  4013be:	9b03      	ldr	r3, [sp, #12]
  4013c0:	fbb5 f3f3 	udiv	r3, r5, r3
  4013c4:	4a4e      	ldr	r2, [pc, #312]	; (401500 <main+0x228>)
  4013c6:	fba2 2303 	umull	r2, r3, r2, r3
  4013ca:	0c5a      	lsrs	r2, r3, #17
  4013cc:	f8c8 2014 	str.w	r2, [r8, #20]
	TC0->TC_CHANNEL[0].TC_RC = (ul_sysclk / ul_div) / sampleFreq;
  4013d0:	0c1b      	lsrs	r3, r3, #16
  4013d2:	f8c8 301c 	str.w	r3, [r8, #28]
	tc_start(TC0, 0);																	// Start the TC0 timer
  4013d6:	4639      	mov	r1, r7
  4013d8:	4640      	mov	r0, r8
  4013da:	4b4a      	ldr	r3, [pc, #296]	; (401504 <main+0x22c>)
  4013dc:	4798      	blx	r3
	reg = afec->AFEC_MR;
  4013de:	6863      	ldr	r3, [r4, #4]
		reg &= ~(AFEC_MR_TRGSEL_Msk | AFEC_MR_TRGEN | AFEC_MR_FREERUN_ON);
  4013e0:	f023 038f 	bic.w	r3, r3, #143	; 0x8f
		reg |= trigger;
  4013e4:	f043 0303 	orr.w	r3, r3, #3
	afec->AFEC_MR = reg;
  4013e8:	6063      	str	r3, [r4, #4]
	afec->AFEC_CHER = (afec_ch == AFEC_CHANNEL_ALL) ?
  4013ea:	2501      	movs	r5, #1
  4013ec:	6175      	str	r5, [r6, #20]
  4013ee:	2340      	movs	r3, #64	; 0x40
  4013f0:	6163      	str	r3, [r4, #20]
		afec_set_callback(AFEC0, AFEC_INTERRUPT_DATA_READY, afec0_data_ready, 1);
  4013f2:	462b      	mov	r3, r5
  4013f4:	4a44      	ldr	r2, [pc, #272]	; (401508 <main+0x230>)
  4013f6:	2110      	movs	r1, #16
  4013f8:	4620      	mov	r0, r4
  4013fa:	4f44      	ldr	r7, [pc, #272]	; (40150c <main+0x234>)
  4013fc:	47b8      	blx	r7
		afec_set_callback(AFEC1, AFEC_INTERRUPT_DATA_READY, afec1_data_ready, 1);
  4013fe:	462b      	mov	r3, r5
  401400:	4a43      	ldr	r2, [pc, #268]	; (401510 <main+0x238>)
  401402:	2110      	movs	r1, #16
  401404:	4630      	mov	r0, r6
  401406:	47b8      	blx	r7
 */
static inline enum status_code afec_start_calibration(Afec *const afec)
{
	uint32_t reg;

	reg = afec->AFEC_CHSR;
  401408:	69e3      	ldr	r3, [r4, #28]
	afec->AFEC_CDOR = reg;
  40140a:	65e3      	str	r3, [r4, #92]	; 0x5c

	if ((afec->AFEC_MR & AFEC_MR_FREERUN) == AFEC_MR_FREERUN_ON) {
  40140c:	6863      	ldr	r3, [r4, #4]
  40140e:	f013 0f80 	tst.w	r3, #128	; 0x80
  401412:	d101      	bne.n	401418 <main+0x140>
		return STATUS_ERR_BUSY;
	}
	afec->AFEC_CR = AFEC_CR_AUTOCAL;
  401414:	2208      	movs	r2, #8
  401416:	6022      	str	r2, [r4, #0]
	return afec->AFEC_ISR;
  401418:	4a30      	ldr	r2, [pc, #192]	; (4014dc <main+0x204>)
  40141a:	6b13      	ldr	r3, [r2, #48]	; 0x30
		while((afec_get_interrupt_status(AFEC0) & AFEC_ISR_EOCAL) != AFEC_ISR_EOCAL);
  40141c:	2b00      	cmp	r3, #0
  40141e:	dafc      	bge.n	40141a <main+0x142>
	reg = afec->AFEC_CHSR;
  401420:	4b32      	ldr	r3, [pc, #200]	; (4014ec <main+0x214>)
  401422:	69da      	ldr	r2, [r3, #28]
	afec->AFEC_CDOR = reg;
  401424:	65da      	str	r2, [r3, #92]	; 0x5c
	if ((afec->AFEC_MR & AFEC_MR_FREERUN) == AFEC_MR_FREERUN_ON) {
  401426:	685b      	ldr	r3, [r3, #4]
  401428:	f013 0f80 	tst.w	r3, #128	; 0x80
  40142c:	d102      	bne.n	401434 <main+0x15c>
	afec->AFEC_CR = AFEC_CR_AUTOCAL;
  40142e:	2208      	movs	r2, #8
  401430:	4b2e      	ldr	r3, [pc, #184]	; (4014ec <main+0x214>)
  401432:	601a      	str	r2, [r3, #0]
	return afec->AFEC_ISR;
  401434:	4a2d      	ldr	r2, [pc, #180]	; (4014ec <main+0x214>)
  401436:	6b13      	ldr	r3, [r2, #48]	; 0x30
		while((afec_get_interrupt_status(AFEC1) & AFEC_ISR_EOCAL) != AFEC_ISR_EOCAL);
  401438:	2b00      	cmp	r3, #0
  40143a:	dafc      	bge.n	401436 <main+0x15e>
	bool test;
	set_afec_test();
			
	/* Print out some dots until buffer is filled*/
	
	while (bufferIndex < buffersize) 
  40143c:	4b35      	ldr	r3, [pc, #212]	; (401514 <main+0x23c>)
  40143e:	881a      	ldrh	r2, [r3, #0]
  401440:	f244 131a 	movw	r3, #16666	; 0x411a
  401444:	429a      	cmp	r2, r3
  401446:	d809      	bhi.n	40145c <main+0x184>
	{			
		printf(".");
  401448:	4e33      	ldr	r6, [pc, #204]	; (401518 <main+0x240>)
  40144a:	4d34      	ldr	r5, [pc, #208]	; (40151c <main+0x244>)
	while (bufferIndex < buffersize) 
  40144c:	4c31      	ldr	r4, [pc, #196]	; (401514 <main+0x23c>)
		printf(".");
  40144e:	4630      	mov	r0, r6
  401450:	47a8      	blx	r5
	while (bufferIndex < buffersize) 
  401452:	8822      	ldrh	r2, [r4, #0]
  401454:	f244 131a 	movw	r3, #16666	; 0x411a
  401458:	429a      	cmp	r2, r3
  40145a:	d9f8      	bls.n	40144e <main+0x176>
	}
		
					
	afec_disable_interrupt(AFEC0, AFEC_INTERRUPT_ALL);
  40145c:	4d30      	ldr	r5, [pc, #192]	; (401520 <main+0x248>)
  40145e:	4629      	mov	r1, r5
  401460:	481e      	ldr	r0, [pc, #120]	; (4014dc <main+0x204>)
  401462:	4c30      	ldr	r4, [pc, #192]	; (401524 <main+0x24c>)
  401464:	47a0      	blx	r4
	afec_disable_interrupt(AFEC1, AFEC_INTERRUPT_ALL);
  401466:	4629      	mov	r1, r5
  401468:	4820      	ldr	r0, [pc, #128]	; (4014ec <main+0x214>)
  40146a:	47a0      	blx	r4
	tc_stop(TC0, 0);
  40146c:	2100      	movs	r1, #0
  40146e:	482e      	ldr	r0, [pc, #184]	; (401528 <main+0x250>)
  401470:	4b2e      	ldr	r3, [pc, #184]	; (40152c <main+0x254>)
  401472:	4798      	blx	r3
  401474:	4c2e      	ldr	r4, [pc, #184]	; (401530 <main+0x258>)
  401476:	4f2f      	ldr	r7, [pc, #188]	; (401534 <main+0x25c>)
	usart_serial_write_packet(CONF_UART, &sample_swapped_bytes ,2);
  401478:	4e0c      	ldr	r6, [pc, #48]	; (4014ac <main+0x1d4>)
  40147a:	4d2f      	ldr	r5, [pc, #188]	; (401538 <main+0x260>)
	// Print for testing algorithms
	
	uint16_t i=0;	
	while (i< buffersize)
	{
		print_sample(buffer[i]);
  40147c:	f834 2f02 	ldrh.w	r2, [r4, #2]!
	uint16_t sample_swapped_bytes = ((sample<<8)&0xff00)|((sample>>8)&0x00ff);
  401480:	0a13      	lsrs	r3, r2, #8
  401482:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  401486:	f8ad 3014 	strh.w	r3, [sp, #20]
	usart_serial_write_packet(CONF_UART, &sample_swapped_bytes ,2);
  40148a:	2202      	movs	r2, #2
  40148c:	a905      	add	r1, sp, #20
  40148e:	4630      	mov	r0, r6
  401490:	47a8      	blx	r5
	while (i< buffersize)
  401492:	42bc      	cmp	r4, r7
  401494:	d1f2      	bne.n	40147c <main+0x1a4>
		i++;
	} 
	
	
	show_beam_parameters();
  401496:	4b29      	ldr	r3, [pc, #164]	; (40153c <main+0x264>)
  401498:	4798      	blx	r3
		
  40149a:	2000      	movs	r0, #0
  40149c:	b00d      	add	sp, #52	; 0x34
  40149e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4014a2:	bf00      	nop
  4014a4:	00400165 	.word	0x00400165
  4014a8:	00400389 	.word	0x00400389
  4014ac:	400e0600 	.word	0x400e0600
  4014b0:	20000ad8 	.word	0x20000ad8
  4014b4:	00400dfd 	.word	0x00400dfd
  4014b8:	20000ad4 	.word	0x20000ad4
  4014bc:	00400d75 	.word	0x00400d75
  4014c0:	20000ad0 	.word	0x20000ad0
  4014c4:	05b8d800 	.word	0x05b8d800
  4014c8:	00400927 	.word	0x00400927
  4014cc:	2000000c 	.word	0x2000000c
  4014d0:	00403125 	.word	0x00403125
  4014d4:	20008dd0 	.word	0x20008dd0
  4014d8:	20000b94 	.word	0x20000b94
  4014dc:	400b0000 	.word	0x400b0000
  4014e0:	004006ed 	.word	0x004006ed
  4014e4:	004004ed 	.word	0x004004ed
  4014e8:	0040051d 	.word	0x0040051d
  4014ec:	400b4000 	.word	0x400b4000
  4014f0:	00400529 	.word	0x00400529
  4014f4:	004004bd 	.word	0x004004bd
  4014f8:	0003d090 	.word	0x0003d090
  4014fc:	0040088d 	.word	0x0040088d
  401500:	431bde83 	.word	0x431bde83
  401504:	004008a7 	.word	0x004008a7
  401508:	00400ca9 	.word	0x00400ca9
  40150c:	00400635 	.word	0x00400635
  401510:	00400ce5 	.word	0x00400ce5
  401514:	20000a7c 	.word	0x20000a7c
  401518:	00405f88 	.word	0x00405f88
  40151c:	00403061 	.word	0x00403061
  401520:	df00ffff 	.word	0xdf00ffff
  401524:	0040068d 	.word	0x0040068d
  401528:	40090000 	.word	0x40090000
  40152c:	004008af 	.word	0x004008af
  401530:	20000b96 	.word	0x20000b96
  401534:	20008dcc 	.word	0x20008dcc
  401538:	004001cd 	.word	0x004001cd
  40153c:	004011d9 	.word	0x004011d9
  401540:	00400839 	.word	0x00400839
  401544:	004008b7 	.word	0x004008b7

00401548 <pow>:
  401548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40154c:	f8df 92f0 	ldr.w	r9, [pc, #752]	; 401840 <pow+0x2f8>
  401550:	b08d      	sub	sp, #52	; 0x34
  401552:	4606      	mov	r6, r0
  401554:	460f      	mov	r7, r1
  401556:	4614      	mov	r4, r2
  401558:	461d      	mov	r5, r3
  40155a:	f000 f975 	bl	401848 <__ieee754_pow>
  40155e:	f999 8000 	ldrsb.w	r8, [r9]
  401562:	f1b8 3fff 	cmp.w	r8, #4294967295
  401566:	e9cd 0100 	strd	r0, r1, [sp]
  40156a:	d036      	beq.n	4015da <pow+0x92>
  40156c:	4622      	mov	r2, r4
  40156e:	462b      	mov	r3, r5
  401570:	4620      	mov	r0, r4
  401572:	4629      	mov	r1, r5
  401574:	f001 fce0 	bl	402f38 <__aeabi_dcmpun>
  401578:	4683      	mov	fp, r0
  40157a:	bb70      	cbnz	r0, 4015da <pow+0x92>
  40157c:	4632      	mov	r2, r6
  40157e:	463b      	mov	r3, r7
  401580:	4630      	mov	r0, r6
  401582:	4639      	mov	r1, r7
  401584:	f001 fcd8 	bl	402f38 <__aeabi_dcmpun>
  401588:	2200      	movs	r2, #0
  40158a:	4682      	mov	sl, r0
  40158c:	2300      	movs	r3, #0
  40158e:	2800      	cmp	r0, #0
  401590:	f040 80a0 	bne.w	4016d4 <pow+0x18c>
  401594:	4630      	mov	r0, r6
  401596:	4639      	mov	r1, r7
  401598:	f001 fc9c 	bl	402ed4 <__aeabi_dcmpeq>
  40159c:	b310      	cbz	r0, 4015e4 <pow+0x9c>
  40159e:	2200      	movs	r2, #0
  4015a0:	2300      	movs	r3, #0
  4015a2:	4620      	mov	r0, r4
  4015a4:	4629      	mov	r1, r5
  4015a6:	f001 fc95 	bl	402ed4 <__aeabi_dcmpeq>
  4015aa:	4683      	mov	fp, r0
  4015ac:	2800      	cmp	r0, #0
  4015ae:	d06a      	beq.n	401686 <pow+0x13e>
  4015b0:	2201      	movs	r2, #1
  4015b2:	4b9c      	ldr	r3, [pc, #624]	; (401824 <pow+0x2dc>)
  4015b4:	9202      	str	r2, [sp, #8]
  4015b6:	2100      	movs	r1, #0
  4015b8:	2200      	movs	r2, #0
  4015ba:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
  4015be:	e9cd 6704 	strd	r6, r7, [sp, #16]
  4015c2:	e9cd 4506 	strd	r4, r5, [sp, #24]
  4015c6:	e9cd 1208 	strd	r1, r2, [sp, #32]
  4015ca:	9303      	str	r3, [sp, #12]
  4015cc:	f1b8 0f00 	cmp.w	r8, #0
  4015d0:	d045      	beq.n	40165e <pow+0x116>
  4015d2:	4c95      	ldr	r4, [pc, #596]	; (401828 <pow+0x2e0>)
  4015d4:	2300      	movs	r3, #0
  4015d6:	e9cd 3400 	strd	r3, r4, [sp]
  4015da:	e9dd 0100 	ldrd	r0, r1, [sp]
  4015de:	b00d      	add	sp, #52	; 0x34
  4015e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4015e4:	e9dd 0100 	ldrd	r0, r1, [sp]
  4015e8:	f000 ff34 	bl	402454 <finite>
  4015ec:	4680      	mov	r8, r0
  4015ee:	2800      	cmp	r0, #0
  4015f0:	f000 808b 	beq.w	40170a <pow+0x1c2>
  4015f4:	f04f 0a00 	mov.w	sl, #0
  4015f8:	f04f 0b00 	mov.w	fp, #0
  4015fc:	4652      	mov	r2, sl
  4015fe:	465b      	mov	r3, fp
  401600:	e9dd 0100 	ldrd	r0, r1, [sp]
  401604:	f001 fc66 	bl	402ed4 <__aeabi_dcmpeq>
  401608:	2800      	cmp	r0, #0
  40160a:	d0e6      	beq.n	4015da <pow+0x92>
  40160c:	4630      	mov	r0, r6
  40160e:	4639      	mov	r1, r7
  401610:	f000 ff20 	bl	402454 <finite>
  401614:	2800      	cmp	r0, #0
  401616:	d0e0      	beq.n	4015da <pow+0x92>
  401618:	4620      	mov	r0, r4
  40161a:	4629      	mov	r1, r5
  40161c:	f000 ff1a 	bl	402454 <finite>
  401620:	2800      	cmp	r0, #0
  401622:	d0da      	beq.n	4015da <pow+0x92>
  401624:	f999 3000 	ldrsb.w	r3, [r9]
  401628:	4a7e      	ldr	r2, [pc, #504]	; (401824 <pow+0x2dc>)
  40162a:	9203      	str	r2, [sp, #12]
  40162c:	2104      	movs	r1, #4
  40162e:	2200      	movs	r2, #0
  401630:	2b02      	cmp	r3, #2
  401632:	e9cd 6704 	strd	r6, r7, [sp, #16]
  401636:	e9cd 4506 	strd	r4, r5, [sp, #24]
  40163a:	e9cd ab08 	strd	sl, fp, [sp, #32]
  40163e:	9102      	str	r1, [sp, #8]
  401640:	920a      	str	r2, [sp, #40]	; 0x28
  401642:	d003      	beq.n	40164c <pow+0x104>
  401644:	a802      	add	r0, sp, #8
  401646:	f000 ff0b 	bl	402460 <matherr>
  40164a:	b968      	cbnz	r0, 401668 <pow+0x120>
  40164c:	f001 fcda 	bl	403004 <__errno>
  401650:	2322      	movs	r3, #34	; 0x22
  401652:	6003      	str	r3, [r0, #0]
  401654:	e008      	b.n	401668 <pow+0x120>
  401656:	2300      	movs	r3, #0
  401658:	2400      	movs	r4, #0
  40165a:	e9cd 3408 	strd	r3, r4, [sp, #32]
  40165e:	a802      	add	r0, sp, #8
  401660:	f000 fefe 	bl	402460 <matherr>
  401664:	2800      	cmp	r0, #0
  401666:	d030      	beq.n	4016ca <pow+0x182>
  401668:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40166a:	b11b      	cbz	r3, 401674 <pow+0x12c>
  40166c:	f001 fcca 	bl	403004 <__errno>
  401670:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401672:	6003      	str	r3, [r0, #0]
  401674:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
  401678:	e9cd 3400 	strd	r3, r4, [sp]
  40167c:	e9dd 0100 	ldrd	r0, r1, [sp]
  401680:	b00d      	add	sp, #52	; 0x34
  401682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401686:	4620      	mov	r0, r4
  401688:	4629      	mov	r1, r5
  40168a:	f000 fee3 	bl	402454 <finite>
  40168e:	2800      	cmp	r0, #0
  401690:	d0a3      	beq.n	4015da <pow+0x92>
  401692:	2200      	movs	r2, #0
  401694:	2300      	movs	r3, #0
  401696:	4620      	mov	r0, r4
  401698:	4629      	mov	r1, r5
  40169a:	f001 fc25 	bl	402ee8 <__aeabi_dcmplt>
  40169e:	2800      	cmp	r0, #0
  4016a0:	d09b      	beq.n	4015da <pow+0x92>
  4016a2:	f999 3000 	ldrsb.w	r3, [r9]
  4016a6:	4a5f      	ldr	r2, [pc, #380]	; (401824 <pow+0x2dc>)
  4016a8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
  4016ac:	2101      	movs	r1, #1
  4016ae:	e9cd 6704 	strd	r6, r7, [sp, #16]
  4016b2:	e9cd 4506 	strd	r4, r5, [sp, #24]
  4016b6:	9102      	str	r1, [sp, #8]
  4016b8:	9203      	str	r2, [sp, #12]
  4016ba:	2b00      	cmp	r3, #0
  4016bc:	d0cb      	beq.n	401656 <pow+0x10e>
  4016be:	495b      	ldr	r1, [pc, #364]	; (40182c <pow+0x2e4>)
  4016c0:	2000      	movs	r0, #0
  4016c2:	2b02      	cmp	r3, #2
  4016c4:	e9cd 0108 	strd	r0, r1, [sp, #32]
  4016c8:	d1c9      	bne.n	40165e <pow+0x116>
  4016ca:	f001 fc9b 	bl	403004 <__errno>
  4016ce:	2321      	movs	r3, #33	; 0x21
  4016d0:	6003      	str	r3, [r0, #0]
  4016d2:	e7c9      	b.n	401668 <pow+0x120>
  4016d4:	4620      	mov	r0, r4
  4016d6:	4629      	mov	r1, r5
  4016d8:	f001 fbfc 	bl	402ed4 <__aeabi_dcmpeq>
  4016dc:	2800      	cmp	r0, #0
  4016de:	f43f af7c 	beq.w	4015da <pow+0x92>
  4016e2:	4b51      	ldr	r3, [pc, #324]	; (401828 <pow+0x2e0>)
  4016e4:	494f      	ldr	r1, [pc, #316]	; (401824 <pow+0x2dc>)
  4016e6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
  4016ea:	2001      	movs	r0, #1
  4016ec:	2200      	movs	r2, #0
  4016ee:	f1b8 0f02 	cmp.w	r8, #2
  4016f2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  4016f6:	e9cd 4506 	strd	r4, r5, [sp, #24]
  4016fa:	9002      	str	r0, [sp, #8]
  4016fc:	9103      	str	r1, [sp, #12]
  4016fe:	e9cd 2308 	strd	r2, r3, [sp, #32]
  401702:	d1ac      	bne.n	40165e <pow+0x116>
  401704:	e9cd 2300 	strd	r2, r3, [sp]
  401708:	e767      	b.n	4015da <pow+0x92>
  40170a:	4630      	mov	r0, r6
  40170c:	4639      	mov	r1, r7
  40170e:	f000 fea1 	bl	402454 <finite>
  401712:	2800      	cmp	r0, #0
  401714:	f43f af6e 	beq.w	4015f4 <pow+0xac>
  401718:	4620      	mov	r0, r4
  40171a:	4629      	mov	r1, r5
  40171c:	f000 fe9a 	bl	402454 <finite>
  401720:	2800      	cmp	r0, #0
  401722:	f43f af67 	beq.w	4015f4 <pow+0xac>
  401726:	e9dd 2300 	ldrd	r2, r3, [sp]
  40172a:	4610      	mov	r0, r2
  40172c:	4619      	mov	r1, r3
  40172e:	f001 fc03 	bl	402f38 <__aeabi_dcmpun>
  401732:	2800      	cmp	r0, #0
  401734:	d158      	bne.n	4017e8 <pow+0x2a0>
  401736:	2303      	movs	r3, #3
  401738:	f999 8000 	ldrsb.w	r8, [r9]
  40173c:	9302      	str	r3, [sp, #8]
  40173e:	4b39      	ldr	r3, [pc, #228]	; (401824 <pow+0x2dc>)
  401740:	900a      	str	r0, [sp, #40]	; 0x28
  401742:	9303      	str	r3, [sp, #12]
  401744:	e9cd 6704 	strd	r6, r7, [sp, #16]
  401748:	e9cd 4506 	strd	r4, r5, [sp, #24]
  40174c:	2200      	movs	r2, #0
  40174e:	2300      	movs	r3, #0
  401750:	4630      	mov	r0, r6
  401752:	4639      	mov	r1, r7
  401754:	f1b8 0f00 	cmp.w	r8, #0
  401758:	d126      	bne.n	4017a8 <pow+0x260>
  40175a:	4f35      	ldr	r7, [pc, #212]	; (401830 <pow+0x2e8>)
  40175c:	f04f 4660 	mov.w	r6, #3758096384	; 0xe0000000
  401760:	e9cd 6708 	strd	r6, r7, [sp, #32]
  401764:	f001 fbc0 	bl	402ee8 <__aeabi_dcmplt>
  401768:	2800      	cmp	r0, #0
  40176a:	f43f af6b 	beq.w	401644 <pow+0xfc>
  40176e:	2200      	movs	r2, #0
  401770:	4b30      	ldr	r3, [pc, #192]	; (401834 <pow+0x2ec>)
  401772:	4620      	mov	r0, r4
  401774:	4629      	mov	r1, r5
  401776:	f001 f945 	bl	402a04 <__aeabi_dmul>
  40177a:	4604      	mov	r4, r0
  40177c:	460d      	mov	r5, r1
  40177e:	f000 fe77 	bl	402470 <rint>
  401782:	4602      	mov	r2, r0
  401784:	460b      	mov	r3, r1
  401786:	4620      	mov	r0, r4
  401788:	4629      	mov	r1, r5
  40178a:	f001 fba3 	bl	402ed4 <__aeabi_dcmpeq>
  40178e:	bb40      	cbnz	r0, 4017e2 <pow+0x29a>
  401790:	4b29      	ldr	r3, [pc, #164]	; (401838 <pow+0x2f0>)
  401792:	f999 8000 	ldrsb.w	r8, [r9]
  401796:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
  40179a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40179e:	f1b8 0f02 	cmp.w	r8, #2
  4017a2:	f47f af4f 	bne.w	401644 <pow+0xfc>
  4017a6:	e751      	b.n	40164c <pow+0x104>
  4017a8:	4f24      	ldr	r7, [pc, #144]	; (40183c <pow+0x2f4>)
  4017aa:	2600      	movs	r6, #0
  4017ac:	e9cd 6708 	strd	r6, r7, [sp, #32]
  4017b0:	f001 fb9a 	bl	402ee8 <__aeabi_dcmplt>
  4017b4:	2800      	cmp	r0, #0
  4017b6:	d0f2      	beq.n	40179e <pow+0x256>
  4017b8:	2200      	movs	r2, #0
  4017ba:	4b1e      	ldr	r3, [pc, #120]	; (401834 <pow+0x2ec>)
  4017bc:	4620      	mov	r0, r4
  4017be:	4629      	mov	r1, r5
  4017c0:	f001 f920 	bl	402a04 <__aeabi_dmul>
  4017c4:	4604      	mov	r4, r0
  4017c6:	460d      	mov	r5, r1
  4017c8:	f000 fe52 	bl	402470 <rint>
  4017cc:	4602      	mov	r2, r0
  4017ce:	460b      	mov	r3, r1
  4017d0:	4620      	mov	r0, r4
  4017d2:	4629      	mov	r1, r5
  4017d4:	f001 fb7e 	bl	402ed4 <__aeabi_dcmpeq>
  4017d8:	b918      	cbnz	r0, 4017e2 <pow+0x29a>
  4017da:	4b14      	ldr	r3, [pc, #80]	; (40182c <pow+0x2e4>)
  4017dc:	2200      	movs	r2, #0
  4017de:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4017e2:	f999 8000 	ldrsb.w	r8, [r9]
  4017e6:	e7da      	b.n	40179e <pow+0x256>
  4017e8:	f999 9000 	ldrsb.w	r9, [r9]
  4017ec:	4b0d      	ldr	r3, [pc, #52]	; (401824 <pow+0x2dc>)
  4017ee:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
  4017f2:	2201      	movs	r2, #1
  4017f4:	e9cd 6704 	strd	r6, r7, [sp, #16]
  4017f8:	e9cd 4506 	strd	r4, r5, [sp, #24]
  4017fc:	9202      	str	r2, [sp, #8]
  4017fe:	9303      	str	r3, [sp, #12]
  401800:	f1b9 0f00 	cmp.w	r9, #0
  401804:	f43f af27 	beq.w	401656 <pow+0x10e>
  401808:	2200      	movs	r2, #0
  40180a:	2300      	movs	r3, #0
  40180c:	4610      	mov	r0, r2
  40180e:	4619      	mov	r1, r3
  401810:	f001 fa22 	bl	402c58 <__aeabi_ddiv>
  401814:	f1b9 0f02 	cmp.w	r9, #2
  401818:	e9cd 0108 	strd	r0, r1, [sp, #32]
  40181c:	f43f af55 	beq.w	4016ca <pow+0x182>
  401820:	e71d      	b.n	40165e <pow+0x116>
  401822:	bf00      	nop
  401824:	0040615c 	.word	0x0040615c
  401828:	3ff00000 	.word	0x3ff00000
  40182c:	fff00000 	.word	0xfff00000
  401830:	47efffff 	.word	0x47efffff
  401834:	3fe00000 	.word	0x3fe00000
  401838:	c7efffff 	.word	0xc7efffff
  40183c:	7ff00000 	.word	0x7ff00000
  401840:	2000000a 	.word	0x2000000a
  401844:	00000000 	.word	0x00000000

00401848 <__ieee754_pow>:
  401848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40184c:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
  401850:	ea57 0402 	orrs.w	r4, r7, r2
  401854:	b093      	sub	sp, #76	; 0x4c
  401856:	d037      	beq.n	4018c8 <__ieee754_pow+0x80>
  401858:	4c67      	ldr	r4, [pc, #412]	; (4019f8 <__ieee754_pow+0x1b0>)
  40185a:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  40185e:	42a6      	cmp	r6, r4
  401860:	4683      	mov	fp, r0
  401862:	460d      	mov	r5, r1
  401864:	dc29      	bgt.n	4018ba <__ieee754_pow+0x72>
  401866:	469a      	mov	sl, r3
  401868:	4696      	mov	lr, r2
  40186a:	d025      	beq.n	4018b8 <__ieee754_pow+0x70>
  40186c:	42a7      	cmp	r7, r4
  40186e:	dc24      	bgt.n	4018ba <__ieee754_pow+0x72>
  401870:	4c61      	ldr	r4, [pc, #388]	; (4019f8 <__ieee754_pow+0x1b0>)
  401872:	42a7      	cmp	r7, r4
  401874:	d079      	beq.n	40196a <__ieee754_pow+0x122>
  401876:	2d00      	cmp	r5, #0
  401878:	4689      	mov	r9, r1
  40187a:	4680      	mov	r8, r0
  40187c:	e9cd 2300 	strd	r2, r3, [sp]
  401880:	db77      	blt.n	401972 <__ieee754_pow+0x12a>
  401882:	2400      	movs	r4, #0
  401884:	f1be 0f00 	cmp.w	lr, #0
  401888:	d12c      	bne.n	4018e4 <__ieee754_pow+0x9c>
  40188a:	4b5b      	ldr	r3, [pc, #364]	; (4019f8 <__ieee754_pow+0x1b0>)
  40188c:	429f      	cmp	r7, r3
  40188e:	f000 808b 	beq.w	4019a8 <__ieee754_pow+0x160>
  401892:	4b5a      	ldr	r3, [pc, #360]	; (4019fc <__ieee754_pow+0x1b4>)
  401894:	429f      	cmp	r7, r3
  401896:	d061      	beq.n	40195c <__ieee754_pow+0x114>
  401898:	f1ba 4f80 	cmp.w	sl, #1073741824	; 0x40000000
  40189c:	f000 83ba 	beq.w	402014 <__ieee754_pow+0x7cc>
  4018a0:	4b57      	ldr	r3, [pc, #348]	; (401a00 <__ieee754_pow+0x1b8>)
  4018a2:	459a      	cmp	sl, r3
  4018a4:	d11e      	bne.n	4018e4 <__ieee754_pow+0x9c>
  4018a6:	2d00      	cmp	r5, #0
  4018a8:	db1c      	blt.n	4018e4 <__ieee754_pow+0x9c>
  4018aa:	4640      	mov	r0, r8
  4018ac:	4649      	mov	r1, r9
  4018ae:	b013      	add	sp, #76	; 0x4c
  4018b0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4018b4:	f000 bd0e 	b.w	4022d4 <__ieee754_sqrt>
  4018b8:	b158      	cbz	r0, 4018d2 <__ieee754_pow+0x8a>
  4018ba:	f106 4640 	add.w	r6, r6, #3221225472	; 0xc0000000
  4018be:	f506 1680 	add.w	r6, r6, #1048576	; 0x100000
  4018c2:	ea56 030b 	orrs.w	r3, r6, fp
  4018c6:	d106      	bne.n	4018d6 <__ieee754_pow+0x8e>
  4018c8:	494c      	ldr	r1, [pc, #304]	; (4019fc <__ieee754_pow+0x1b4>)
  4018ca:	2000      	movs	r0, #0
  4018cc:	b013      	add	sp, #76	; 0x4c
  4018ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018d2:	42b7      	cmp	r7, r6
  4018d4:	ddcc      	ble.n	401870 <__ieee754_pow+0x28>
  4018d6:	484b      	ldr	r0, [pc, #300]	; (401a04 <__ieee754_pow+0x1bc>)
  4018d8:	b013      	add	sp, #76	; 0x4c
  4018da:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4018de:	f000 bdc1 	b.w	402464 <nan>
  4018e2:	2400      	movs	r4, #0
  4018e4:	4640      	mov	r0, r8
  4018e6:	4649      	mov	r1, r9
  4018e8:	f000 fdb0 	bl	40244c <fabs>
  4018ec:	f1bb 0f00 	cmp.w	fp, #0
  4018f0:	d119      	bne.n	401926 <__ieee754_pow+0xde>
  4018f2:	b126      	cbz	r6, 4018fe <__ieee754_pow+0xb6>
  4018f4:	4b41      	ldr	r3, [pc, #260]	; (4019fc <__ieee754_pow+0x1b4>)
  4018f6:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
  4018fa:	429a      	cmp	r2, r3
  4018fc:	d113      	bne.n	401926 <__ieee754_pow+0xde>
  4018fe:	f1ba 0f00 	cmp.w	sl, #0
  401902:	f2c0 83bc 	blt.w	40207e <__ieee754_pow+0x836>
  401906:	2d00      	cmp	r5, #0
  401908:	dae0      	bge.n	4018cc <__ieee754_pow+0x84>
  40190a:	f106 4640 	add.w	r6, r6, #3221225472	; 0xc0000000
  40190e:	f506 1680 	add.w	r6, r6, #1048576	; 0x100000
  401912:	ea56 0304 	orrs.w	r3, r6, r4
  401916:	f000 848f 	beq.w	402238 <__ieee754_pow+0x9f0>
  40191a:	2c01      	cmp	r4, #1
  40191c:	d1d6      	bne.n	4018cc <__ieee754_pow+0x84>
  40191e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  401922:	4619      	mov	r1, r3
  401924:	e7d2      	b.n	4018cc <__ieee754_pow+0x84>
  401926:	0fed      	lsrs	r5, r5, #31
  401928:	3d01      	subs	r5, #1
  40192a:	ea54 0305 	orrs.w	r3, r4, r5
  40192e:	d04e      	beq.n	4019ce <__ieee754_pow+0x186>
  401930:	4b35      	ldr	r3, [pc, #212]	; (401a08 <__ieee754_pow+0x1c0>)
  401932:	429f      	cmp	r7, r3
  401934:	dd6e      	ble.n	401a14 <__ieee754_pow+0x1cc>
  401936:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
  40193a:	429f      	cmp	r7, r3
  40193c:	f340 83e8 	ble.w	402110 <__ieee754_pow+0x8c8>
  401940:	4b32      	ldr	r3, [pc, #200]	; (401a0c <__ieee754_pow+0x1c4>)
  401942:	429e      	cmp	r6, r3
  401944:	dd4e      	ble.n	4019e4 <__ieee754_pow+0x19c>
  401946:	f1ba 0f00 	cmp.w	sl, #0
  40194a:	dd4e      	ble.n	4019ea <__ieee754_pow+0x1a2>
  40194c:	a328      	add	r3, pc, #160	; (adr r3, 4019f0 <__ieee754_pow+0x1a8>)
  40194e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401952:	4610      	mov	r0, r2
  401954:	4619      	mov	r1, r3
  401956:	f001 f855 	bl	402a04 <__aeabi_dmul>
  40195a:	e7b7      	b.n	4018cc <__ieee754_pow+0x84>
  40195c:	f1ba 0f00 	cmp.w	sl, #0
  401960:	f2c0 843c 	blt.w	4021dc <__ieee754_pow+0x994>
  401964:	4640      	mov	r0, r8
  401966:	4649      	mov	r1, r9
  401968:	e7b0      	b.n	4018cc <__ieee754_pow+0x84>
  40196a:	f1be 0f00 	cmp.w	lr, #0
  40196e:	d082      	beq.n	401876 <__ieee754_pow+0x2e>
  401970:	e7a3      	b.n	4018ba <__ieee754_pow+0x72>
  401972:	4b27      	ldr	r3, [pc, #156]	; (401a10 <__ieee754_pow+0x1c8>)
  401974:	429f      	cmp	r7, r3
  401976:	dc28      	bgt.n	4019ca <__ieee754_pow+0x182>
  401978:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
  40197c:	429f      	cmp	r7, r3
  40197e:	dd80      	ble.n	401882 <__ieee754_pow+0x3a>
  401980:	153b      	asrs	r3, r7, #20
  401982:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
  401986:	2b14      	cmp	r3, #20
  401988:	f340 843e 	ble.w	402208 <__ieee754_pow+0x9c0>
  40198c:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
  401990:	fa2e f203 	lsr.w	r2, lr, r3
  401994:	fa02 f303 	lsl.w	r3, r2, r3
  401998:	459e      	cmp	lr, r3
  40199a:	f47f af72 	bne.w	401882 <__ieee754_pow+0x3a>
  40199e:	f002 0201 	and.w	r2, r2, #1
  4019a2:	f1c2 0402 	rsb	r4, r2, #2
  4019a6:	e76d      	b.n	401884 <__ieee754_pow+0x3c>
  4019a8:	f106 4340 	add.w	r3, r6, #3221225472	; 0xc0000000
  4019ac:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
  4019b0:	ea53 030b 	orrs.w	r3, r3, fp
  4019b4:	d088      	beq.n	4018c8 <__ieee754_pow+0x80>
  4019b6:	4b15      	ldr	r3, [pc, #84]	; (401a0c <__ieee754_pow+0x1c4>)
  4019b8:	429e      	cmp	r6, r3
  4019ba:	f340 8332 	ble.w	402022 <__ieee754_pow+0x7da>
  4019be:	f1ba 0f00 	cmp.w	sl, #0
  4019c2:	db12      	blt.n	4019ea <__ieee754_pow+0x1a2>
  4019c4:	e9dd 0100 	ldrd	r0, r1, [sp]
  4019c8:	e780      	b.n	4018cc <__ieee754_pow+0x84>
  4019ca:	2402      	movs	r4, #2
  4019cc:	e75a      	b.n	401884 <__ieee754_pow+0x3c>
  4019ce:	4642      	mov	r2, r8
  4019d0:	464b      	mov	r3, r9
  4019d2:	4640      	mov	r0, r8
  4019d4:	4649      	mov	r1, r9
  4019d6:	f000 fe61 	bl	40269c <__aeabi_dsub>
  4019da:	4602      	mov	r2, r0
  4019dc:	460b      	mov	r3, r1
  4019de:	f001 f93b 	bl	402c58 <__aeabi_ddiv>
  4019e2:	e773      	b.n	4018cc <__ieee754_pow+0x84>
  4019e4:	f1ba 0f00 	cmp.w	sl, #0
  4019e8:	dbb0      	blt.n	40194c <__ieee754_pow+0x104>
  4019ea:	2000      	movs	r0, #0
  4019ec:	2100      	movs	r1, #0
  4019ee:	e76d      	b.n	4018cc <__ieee754_pow+0x84>
  4019f0:	8800759c 	.word	0x8800759c
  4019f4:	7e37e43c 	.word	0x7e37e43c
  4019f8:	7ff00000 	.word	0x7ff00000
  4019fc:	3ff00000 	.word	0x3ff00000
  401a00:	3fe00000 	.word	0x3fe00000
  401a04:	004060e0 	.word	0x004060e0
  401a08:	41e00000 	.word	0x41e00000
  401a0c:	3fefffff 	.word	0x3fefffff
  401a10:	433fffff 	.word	0x433fffff
  401a14:	f5b6 1f80 	cmp.w	r6, #1048576	; 0x100000
  401a18:	f04f 0200 	mov.w	r2, #0
  401a1c:	da05      	bge.n	401a2a <__ieee754_pow+0x1e2>
  401a1e:	4bd4      	ldr	r3, [pc, #848]	; (401d70 <__ieee754_pow+0x528>)
  401a20:	f000 fff0 	bl	402a04 <__aeabi_dmul>
  401a24:	f06f 0234 	mvn.w	r2, #52	; 0x34
  401a28:	460e      	mov	r6, r1
  401a2a:	1533      	asrs	r3, r6, #20
  401a2c:	4fd1      	ldr	r7, [pc, #836]	; (401d74 <__ieee754_pow+0x52c>)
  401a2e:	f3c6 0613 	ubfx	r6, r6, #0, #20
  401a32:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
  401a36:	4413      	add	r3, r2
  401a38:	f046 5a7f 	orr.w	sl, r6, #1069547520	; 0x3fc00000
  401a3c:	42be      	cmp	r6, r7
  401a3e:	461a      	mov	r2, r3
  401a40:	930d      	str	r3, [sp, #52]	; 0x34
  401a42:	f44a 1a40 	orr.w	sl, sl, #3145728	; 0x300000
  401a46:	f340 8321 	ble.w	40208c <__ieee754_pow+0x844>
  401a4a:	4bcb      	ldr	r3, [pc, #812]	; (401d78 <__ieee754_pow+0x530>)
  401a4c:	429e      	cmp	r6, r3
  401a4e:	f340 83fd 	ble.w	40224c <__ieee754_pow+0xa04>
  401a52:	4613      	mov	r3, r2
  401a54:	3301      	adds	r3, #1
  401a56:	930d      	str	r3, [sp, #52]	; 0x34
  401a58:	4bc8      	ldr	r3, [pc, #800]	; (401d7c <__ieee754_pow+0x534>)
  401a5a:	2200      	movs	r2, #0
  401a5c:	e9cd 2306 	strd	r2, r3, [sp, #24]
  401a60:	2700      	movs	r7, #0
  401a62:	2600      	movs	r6, #0
  401a64:	e9cd 6708 	strd	r6, r7, [sp, #32]
  401a68:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
  401a6c:	f5aa 1a80 	sub.w	sl, sl, #1048576	; 0x100000
  401a70:	2700      	movs	r7, #0
  401a72:	4602      	mov	r2, r0
  401a74:	4653      	mov	r3, sl
  401a76:	4651      	mov	r1, sl
  401a78:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  401a7c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401a80:	f000 fe0c 	bl	40269c <__aeabi_dsub>
  401a84:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401a88:	4680      	mov	r8, r0
  401a8a:	4689      	mov	r9, r1
  401a8c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  401a90:	f000 fe06 	bl	4026a0 <__adddf3>
  401a94:	4602      	mov	r2, r0
  401a96:	460b      	mov	r3, r1
  401a98:	2000      	movs	r0, #0
  401a9a:	49b8      	ldr	r1, [pc, #736]	; (401d7c <__ieee754_pow+0x534>)
  401a9c:	f001 f8dc 	bl	402c58 <__aeabi_ddiv>
  401aa0:	460a      	mov	r2, r1
  401aa2:	4601      	mov	r1, r0
  401aa4:	e9cd 1210 	strd	r1, r2, [sp, #64]	; 0x40
  401aa8:	4613      	mov	r3, r2
  401aaa:	4649      	mov	r1, r9
  401aac:	4602      	mov	r2, r0
  401aae:	4640      	mov	r0, r8
  401ab0:	f000 ffa8 	bl	402a04 <__aeabi_dmul>
  401ab4:	ea4f 036a 	mov.w	r3, sl, asr #1
  401ab8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  401abc:	468c      	mov	ip, r1
  401abe:	4683      	mov	fp, r0
  401ac0:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
  401ac4:	e9cd bc04 	strd	fp, ip, [sp, #16]
  401ac8:	46da      	mov	sl, fp
  401aca:	468b      	mov	fp, r1
  401acc:	19d9      	adds	r1, r3, r7
  401ace:	2300      	movs	r3, #0
  401ad0:	e9cd ab02 	strd	sl, fp, [sp, #8]
  401ad4:	9302      	str	r3, [sp, #8]
  401ad6:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
  401ada:	2000      	movs	r0, #0
  401adc:	4606      	mov	r6, r0
  401ade:	460f      	mov	r7, r1
  401ae0:	4602      	mov	r2, r0
  401ae2:	460b      	mov	r3, r1
  401ae4:	4650      	mov	r0, sl
  401ae6:	4659      	mov	r1, fp
  401ae8:	f000 ff8c 	bl	402a04 <__aeabi_dmul>
  401aec:	4602      	mov	r2, r0
  401aee:	460b      	mov	r3, r1
  401af0:	4640      	mov	r0, r8
  401af2:	4649      	mov	r1, r9
  401af4:	f000 fdd2 	bl	40269c <__aeabi_dsub>
  401af8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401afc:	4680      	mov	r8, r0
  401afe:	4689      	mov	r9, r1
  401b00:	4630      	mov	r0, r6
  401b02:	4639      	mov	r1, r7
  401b04:	f000 fdca 	bl	40269c <__aeabi_dsub>
  401b08:	4602      	mov	r2, r0
  401b0a:	460b      	mov	r3, r1
  401b0c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  401b10:	f000 fdc4 	bl	40269c <__aeabi_dsub>
  401b14:	4652      	mov	r2, sl
  401b16:	465b      	mov	r3, fp
  401b18:	f000 ff74 	bl	402a04 <__aeabi_dmul>
  401b1c:	4602      	mov	r2, r0
  401b1e:	460b      	mov	r3, r1
  401b20:	4640      	mov	r0, r8
  401b22:	4649      	mov	r1, r9
  401b24:	f000 fdba 	bl	40269c <__aeabi_dsub>
  401b28:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  401b2c:	f000 ff6a 	bl	402a04 <__aeabi_dmul>
  401b30:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
  401b34:	e9cd 0106 	strd	r0, r1, [sp, #24]
  401b38:	4632      	mov	r2, r6
  401b3a:	463b      	mov	r3, r7
  401b3c:	4630      	mov	r0, r6
  401b3e:	4639      	mov	r1, r7
  401b40:	f000 ff60 	bl	402a04 <__aeabi_dmul>
  401b44:	a378      	add	r3, pc, #480	; (adr r3, 401d28 <__ieee754_pow+0x4e0>)
  401b46:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b4a:	4606      	mov	r6, r0
  401b4c:	460f      	mov	r7, r1
  401b4e:	f000 ff59 	bl	402a04 <__aeabi_dmul>
  401b52:	a377      	add	r3, pc, #476	; (adr r3, 401d30 <__ieee754_pow+0x4e8>)
  401b54:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b58:	f000 fda2 	bl	4026a0 <__adddf3>
  401b5c:	4632      	mov	r2, r6
  401b5e:	463b      	mov	r3, r7
  401b60:	f000 ff50 	bl	402a04 <__aeabi_dmul>
  401b64:	a374      	add	r3, pc, #464	; (adr r3, 401d38 <__ieee754_pow+0x4f0>)
  401b66:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b6a:	f000 fd99 	bl	4026a0 <__adddf3>
  401b6e:	4632      	mov	r2, r6
  401b70:	463b      	mov	r3, r7
  401b72:	f000 ff47 	bl	402a04 <__aeabi_dmul>
  401b76:	a372      	add	r3, pc, #456	; (adr r3, 401d40 <__ieee754_pow+0x4f8>)
  401b78:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b7c:	f000 fd90 	bl	4026a0 <__adddf3>
  401b80:	4632      	mov	r2, r6
  401b82:	463b      	mov	r3, r7
  401b84:	f000 ff3e 	bl	402a04 <__aeabi_dmul>
  401b88:	a36f      	add	r3, pc, #444	; (adr r3, 401d48 <__ieee754_pow+0x500>)
  401b8a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b8e:	f000 fd87 	bl	4026a0 <__adddf3>
  401b92:	4632      	mov	r2, r6
  401b94:	463b      	mov	r3, r7
  401b96:	f000 ff35 	bl	402a04 <__aeabi_dmul>
  401b9a:	a36d      	add	r3, pc, #436	; (adr r3, 401d50 <__ieee754_pow+0x508>)
  401b9c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ba0:	f000 fd7e 	bl	4026a0 <__adddf3>
  401ba4:	4632      	mov	r2, r6
  401ba6:	4680      	mov	r8, r0
  401ba8:	4689      	mov	r9, r1
  401baa:	463b      	mov	r3, r7
  401bac:	4630      	mov	r0, r6
  401bae:	4639      	mov	r1, r7
  401bb0:	f000 ff28 	bl	402a04 <__aeabi_dmul>
  401bb4:	4602      	mov	r2, r0
  401bb6:	460b      	mov	r3, r1
  401bb8:	4640      	mov	r0, r8
  401bba:	4649      	mov	r1, r9
  401bbc:	f000 ff22 	bl	402a04 <__aeabi_dmul>
  401bc0:	4652      	mov	r2, sl
  401bc2:	4606      	mov	r6, r0
  401bc4:	460f      	mov	r7, r1
  401bc6:	465b      	mov	r3, fp
  401bc8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401bcc:	f000 fd68 	bl	4026a0 <__adddf3>
  401bd0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  401bd4:	f000 ff16 	bl	402a04 <__aeabi_dmul>
  401bd8:	4632      	mov	r2, r6
  401bda:	463b      	mov	r3, r7
  401bdc:	f000 fd60 	bl	4026a0 <__adddf3>
  401be0:	4652      	mov	r2, sl
  401be2:	4680      	mov	r8, r0
  401be4:	4689      	mov	r9, r1
  401be6:	465b      	mov	r3, fp
  401be8:	4650      	mov	r0, sl
  401bea:	4659      	mov	r1, fp
  401bec:	f000 ff0a 	bl	402a04 <__aeabi_dmul>
  401bf0:	2200      	movs	r2, #0
  401bf2:	4b63      	ldr	r3, [pc, #396]	; (401d80 <__ieee754_pow+0x538>)
  401bf4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  401bf8:	f000 fd52 	bl	4026a0 <__adddf3>
  401bfc:	4642      	mov	r2, r8
  401bfe:	464b      	mov	r3, r9
  401c00:	f000 fd4e 	bl	4026a0 <__adddf3>
  401c04:	9802      	ldr	r0, [sp, #8]
  401c06:	460f      	mov	r7, r1
  401c08:	4606      	mov	r6, r0
  401c0a:	4632      	mov	r2, r6
  401c0c:	463b      	mov	r3, r7
  401c0e:	4650      	mov	r0, sl
  401c10:	4659      	mov	r1, fp
  401c12:	f000 fef7 	bl	402a04 <__aeabi_dmul>
  401c16:	2200      	movs	r2, #0
  401c18:	4682      	mov	sl, r0
  401c1a:	468b      	mov	fp, r1
  401c1c:	4b58      	ldr	r3, [pc, #352]	; (401d80 <__ieee754_pow+0x538>)
  401c1e:	4630      	mov	r0, r6
  401c20:	4639      	mov	r1, r7
  401c22:	f000 fd3b 	bl	40269c <__aeabi_dsub>
  401c26:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  401c2a:	f000 fd37 	bl	40269c <__aeabi_dsub>
  401c2e:	4602      	mov	r2, r0
  401c30:	460b      	mov	r3, r1
  401c32:	4640      	mov	r0, r8
  401c34:	4649      	mov	r1, r9
  401c36:	f000 fd31 	bl	40269c <__aeabi_dsub>
  401c3a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  401c3e:	f000 fee1 	bl	402a04 <__aeabi_dmul>
  401c42:	4632      	mov	r2, r6
  401c44:	4680      	mov	r8, r0
  401c46:	4689      	mov	r9, r1
  401c48:	463b      	mov	r3, r7
  401c4a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  401c4e:	f000 fed9 	bl	402a04 <__aeabi_dmul>
  401c52:	4602      	mov	r2, r0
  401c54:	460b      	mov	r3, r1
  401c56:	4640      	mov	r0, r8
  401c58:	4649      	mov	r1, r9
  401c5a:	f000 fd21 	bl	4026a0 <__adddf3>
  401c5e:	4680      	mov	r8, r0
  401c60:	4689      	mov	r9, r1
  401c62:	4602      	mov	r2, r0
  401c64:	460b      	mov	r3, r1
  401c66:	4650      	mov	r0, sl
  401c68:	4659      	mov	r1, fp
  401c6a:	e9cd ab04 	strd	sl, fp, [sp, #16]
  401c6e:	f000 fd17 	bl	4026a0 <__adddf3>
  401c72:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
  401c76:	a338      	add	r3, pc, #224	; (adr r3, 401d58 <__ieee754_pow+0x510>)
  401c78:	e9d3 2300 	ldrd	r2, r3, [r3]
  401c7c:	4650      	mov	r0, sl
  401c7e:	460f      	mov	r7, r1
  401c80:	f000 fec0 	bl	402a04 <__aeabi_dmul>
  401c84:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  401c88:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401c8c:	4639      	mov	r1, r7
  401c8e:	4650      	mov	r0, sl
  401c90:	f000 fd04 	bl	40269c <__aeabi_dsub>
  401c94:	4602      	mov	r2, r0
  401c96:	460b      	mov	r3, r1
  401c98:	4640      	mov	r0, r8
  401c9a:	4649      	mov	r1, r9
  401c9c:	f000 fcfe 	bl	40269c <__aeabi_dsub>
  401ca0:	a32f      	add	r3, pc, #188	; (adr r3, 401d60 <__ieee754_pow+0x518>)
  401ca2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ca6:	f000 fead 	bl	402a04 <__aeabi_dmul>
  401caa:	a32f      	add	r3, pc, #188	; (adr r3, 401d68 <__ieee754_pow+0x520>)
  401cac:	e9d3 2300 	ldrd	r2, r3, [r3]
  401cb0:	4680      	mov	r8, r0
  401cb2:	4689      	mov	r9, r1
  401cb4:	4650      	mov	r0, sl
  401cb6:	4639      	mov	r1, r7
  401cb8:	f000 fea4 	bl	402a04 <__aeabi_dmul>
  401cbc:	4602      	mov	r2, r0
  401cbe:	460b      	mov	r3, r1
  401cc0:	4640      	mov	r0, r8
  401cc2:	4649      	mov	r1, r9
  401cc4:	f000 fcec 	bl	4026a0 <__adddf3>
  401cc8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  401ccc:	f000 fce8 	bl	4026a0 <__adddf3>
  401cd0:	4680      	mov	r8, r0
  401cd2:	980d      	ldr	r0, [sp, #52]	; 0x34
  401cd4:	4689      	mov	r9, r1
  401cd6:	f000 fe2f 	bl	402938 <__aeabi_i2d>
  401cda:	4642      	mov	r2, r8
  401cdc:	4606      	mov	r6, r0
  401cde:	460f      	mov	r7, r1
  401ce0:	464b      	mov	r3, r9
  401ce2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401ce6:	f000 fcdb 	bl	4026a0 <__adddf3>
  401cea:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  401cee:	f000 fcd7 	bl	4026a0 <__adddf3>
  401cf2:	4632      	mov	r2, r6
  401cf4:	463b      	mov	r3, r7
  401cf6:	f000 fcd3 	bl	4026a0 <__adddf3>
  401cfa:	4632      	mov	r2, r6
  401cfc:	463b      	mov	r3, r7
  401cfe:	4650      	mov	r0, sl
  401d00:	468b      	mov	fp, r1
  401d02:	f000 fccb 	bl	40269c <__aeabi_dsub>
  401d06:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
  401d0a:	f000 fcc7 	bl	40269c <__aeabi_dsub>
  401d0e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401d12:	f000 fcc3 	bl	40269c <__aeabi_dsub>
  401d16:	4602      	mov	r2, r0
  401d18:	460b      	mov	r3, r1
  401d1a:	4640      	mov	r0, r8
  401d1c:	4649      	mov	r1, r9
  401d1e:	f000 fcbd 	bl	40269c <__aeabi_dsub>
  401d22:	4680      	mov	r8, r0
  401d24:	e02e      	b.n	401d84 <__ieee754_pow+0x53c>
  401d26:	bf00      	nop
  401d28:	4a454eef 	.word	0x4a454eef
  401d2c:	3fca7e28 	.word	0x3fca7e28
  401d30:	93c9db65 	.word	0x93c9db65
  401d34:	3fcd864a 	.word	0x3fcd864a
  401d38:	a91d4101 	.word	0xa91d4101
  401d3c:	3fd17460 	.word	0x3fd17460
  401d40:	518f264d 	.word	0x518f264d
  401d44:	3fd55555 	.word	0x3fd55555
  401d48:	db6fabff 	.word	0xdb6fabff
  401d4c:	3fdb6db6 	.word	0x3fdb6db6
  401d50:	33333303 	.word	0x33333303
  401d54:	3fe33333 	.word	0x3fe33333
  401d58:	e0000000 	.word	0xe0000000
  401d5c:	3feec709 	.word	0x3feec709
  401d60:	dc3a03fd 	.word	0xdc3a03fd
  401d64:	3feec709 	.word	0x3feec709
  401d68:	145b01f5 	.word	0x145b01f5
  401d6c:	be3e2fe0 	.word	0xbe3e2fe0
  401d70:	43400000 	.word	0x43400000
  401d74:	0003988e 	.word	0x0003988e
  401d78:	000bb679 	.word	0x000bb679
  401d7c:	3ff00000 	.word	0x3ff00000
  401d80:	40080000 	.word	0x40080000
  401d84:	4689      	mov	r9, r1
  401d86:	3c01      	subs	r4, #1
  401d88:	ea54 0305 	orrs.w	r3, r4, r5
  401d8c:	e9dd 0100 	ldrd	r0, r1, [sp]
  401d90:	bf14      	ite	ne
  401d92:	4cd9      	ldrne	r4, [pc, #868]	; (4020f8 <__ieee754_pow+0x8b0>)
  401d94:	4cd9      	ldreq	r4, [pc, #868]	; (4020fc <__ieee754_pow+0x8b4>)
  401d96:	2300      	movs	r3, #0
  401d98:	e9cd 3404 	strd	r3, r4, [sp, #16]
  401d9c:	4603      	mov	r3, r0
  401d9e:	460c      	mov	r4, r1
  401da0:	e9cd 3402 	strd	r3, r4, [sp, #8]
  401da4:	2300      	movs	r3, #0
  401da6:	9302      	str	r3, [sp, #8]
  401da8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  401dac:	4622      	mov	r2, r4
  401dae:	462b      	mov	r3, r5
  401db0:	f000 fc74 	bl	40269c <__aeabi_dsub>
  401db4:	4652      	mov	r2, sl
  401db6:	465b      	mov	r3, fp
  401db8:	f000 fe24 	bl	402a04 <__aeabi_dmul>
  401dbc:	e9dd 2300 	ldrd	r2, r3, [sp]
  401dc0:	4606      	mov	r6, r0
  401dc2:	460f      	mov	r7, r1
  401dc4:	4640      	mov	r0, r8
  401dc6:	4649      	mov	r1, r9
  401dc8:	f000 fe1c 	bl	402a04 <__aeabi_dmul>
  401dcc:	4602      	mov	r2, r0
  401dce:	460b      	mov	r3, r1
  401dd0:	4630      	mov	r0, r6
  401dd2:	4639      	mov	r1, r7
  401dd4:	f000 fc64 	bl	4026a0 <__adddf3>
  401dd8:	4622      	mov	r2, r4
  401dda:	4680      	mov	r8, r0
  401ddc:	4689      	mov	r9, r1
  401dde:	462b      	mov	r3, r5
  401de0:	4650      	mov	r0, sl
  401de2:	4659      	mov	r1, fp
  401de4:	e9cd 8900 	strd	r8, r9, [sp]
  401de8:	f000 fe0c 	bl	402a04 <__aeabi_dmul>
  401dec:	460b      	mov	r3, r1
  401dee:	4602      	mov	r2, r0
  401df0:	4606      	mov	r6, r0
  401df2:	460f      	mov	r7, r1
  401df4:	4640      	mov	r0, r8
  401df6:	4649      	mov	r1, r9
  401df8:	f000 fc52 	bl	4026a0 <__adddf3>
  401dfc:	4bc0      	ldr	r3, [pc, #768]	; (402100 <__ieee754_pow+0x8b8>)
  401dfe:	4299      	cmp	r1, r3
  401e00:	4604      	mov	r4, r0
  401e02:	460d      	mov	r5, r1
  401e04:	468a      	mov	sl, r1
  401e06:	f340 8116 	ble.w	402036 <__ieee754_pow+0x7ee>
  401e0a:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
  401e0e:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
  401e12:	4303      	orrs	r3, r0
  401e14:	f040 81ea 	bne.w	4021ec <__ieee754_pow+0x9a4>
  401e18:	a3a3      	add	r3, pc, #652	; (adr r3, 4020a8 <__ieee754_pow+0x860>)
  401e1a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e1e:	e9dd 0100 	ldrd	r0, r1, [sp]
  401e22:	f000 fc3d 	bl	4026a0 <__adddf3>
  401e26:	4632      	mov	r2, r6
  401e28:	4680      	mov	r8, r0
  401e2a:	4689      	mov	r9, r1
  401e2c:	463b      	mov	r3, r7
  401e2e:	4620      	mov	r0, r4
  401e30:	4629      	mov	r1, r5
  401e32:	f000 fc33 	bl	40269c <__aeabi_dsub>
  401e36:	4602      	mov	r2, r0
  401e38:	460b      	mov	r3, r1
  401e3a:	4640      	mov	r0, r8
  401e3c:	4649      	mov	r1, r9
  401e3e:	f001 f871 	bl	402f24 <__aeabi_dcmpgt>
  401e42:	2800      	cmp	r0, #0
  401e44:	f040 81d2 	bne.w	4021ec <__ieee754_pow+0x9a4>
  401e48:	46a8      	mov	r8, r5
  401e4a:	ea4f 5328 	mov.w	r3, r8, asr #20
  401e4e:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
  401e52:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
  401e56:	fa42 f303 	asr.w	r3, r2, r3
  401e5a:	4453      	add	r3, sl
  401e5c:	f3c3 520a 	ubfx	r2, r3, #20, #11
  401e60:	4da8      	ldr	r5, [pc, #672]	; (402104 <__ieee754_pow+0x8bc>)
  401e62:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
  401e66:	4115      	asrs	r5, r2
  401e68:	f3c3 0413 	ubfx	r4, r3, #0, #20
  401e6c:	ea23 0105 	bic.w	r1, r3, r5
  401e70:	2000      	movs	r0, #0
  401e72:	f1c2 0b14 	rsb	fp, r2, #20
  401e76:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  401e7a:	f1ba 0f00 	cmp.w	sl, #0
  401e7e:	4602      	mov	r2, r0
  401e80:	460b      	mov	r3, r1
  401e82:	fa44 fb0b 	asr.w	fp, r4, fp
  401e86:	4630      	mov	r0, r6
  401e88:	4639      	mov	r1, r7
  401e8a:	bfb8      	it	lt
  401e8c:	f1cb 0b00 	rsblt	fp, fp, #0
  401e90:	f000 fc04 	bl	40269c <__aeabi_dsub>
  401e94:	4602      	mov	r2, r0
  401e96:	460b      	mov	r3, r1
  401e98:	4606      	mov	r6, r0
  401e9a:	460f      	mov	r7, r1
  401e9c:	e9dd 0100 	ldrd	r0, r1, [sp]
  401ea0:	f000 fbfe 	bl	4026a0 <__adddf3>
  401ea4:	ea4f 5a0b 	mov.w	sl, fp, lsl #20
  401ea8:	460d      	mov	r5, r1
  401eaa:	2400      	movs	r4, #0
  401eac:	a380      	add	r3, pc, #512	; (adr r3, 4020b0 <__ieee754_pow+0x868>)
  401eae:	e9d3 2300 	ldrd	r2, r3, [r3]
  401eb2:	4620      	mov	r0, r4
  401eb4:	4629      	mov	r1, r5
  401eb6:	f000 fda5 	bl	402a04 <__aeabi_dmul>
  401eba:	4632      	mov	r2, r6
  401ebc:	4680      	mov	r8, r0
  401ebe:	4689      	mov	r9, r1
  401ec0:	463b      	mov	r3, r7
  401ec2:	4620      	mov	r0, r4
  401ec4:	4629      	mov	r1, r5
  401ec6:	f000 fbe9 	bl	40269c <__aeabi_dsub>
  401eca:	4602      	mov	r2, r0
  401ecc:	460b      	mov	r3, r1
  401ece:	e9dd 0100 	ldrd	r0, r1, [sp]
  401ed2:	f000 fbe3 	bl	40269c <__aeabi_dsub>
  401ed6:	a378      	add	r3, pc, #480	; (adr r3, 4020b8 <__ieee754_pow+0x870>)
  401ed8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401edc:	f000 fd92 	bl	402a04 <__aeabi_dmul>
  401ee0:	a377      	add	r3, pc, #476	; (adr r3, 4020c0 <__ieee754_pow+0x878>)
  401ee2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ee6:	4606      	mov	r6, r0
  401ee8:	460f      	mov	r7, r1
  401eea:	4620      	mov	r0, r4
  401eec:	4629      	mov	r1, r5
  401eee:	f000 fd89 	bl	402a04 <__aeabi_dmul>
  401ef2:	4602      	mov	r2, r0
  401ef4:	460b      	mov	r3, r1
  401ef6:	4630      	mov	r0, r6
  401ef8:	4639      	mov	r1, r7
  401efa:	f000 fbd1 	bl	4026a0 <__adddf3>
  401efe:	4606      	mov	r6, r0
  401f00:	460f      	mov	r7, r1
  401f02:	4602      	mov	r2, r0
  401f04:	460b      	mov	r3, r1
  401f06:	4640      	mov	r0, r8
  401f08:	4649      	mov	r1, r9
  401f0a:	f000 fbc9 	bl	4026a0 <__adddf3>
  401f0e:	4642      	mov	r2, r8
  401f10:	464b      	mov	r3, r9
  401f12:	4604      	mov	r4, r0
  401f14:	460d      	mov	r5, r1
  401f16:	f000 fbc1 	bl	40269c <__aeabi_dsub>
  401f1a:	4602      	mov	r2, r0
  401f1c:	460b      	mov	r3, r1
  401f1e:	4630      	mov	r0, r6
  401f20:	4639      	mov	r1, r7
  401f22:	f000 fbbb 	bl	40269c <__aeabi_dsub>
  401f26:	4622      	mov	r2, r4
  401f28:	4680      	mov	r8, r0
  401f2a:	4689      	mov	r9, r1
  401f2c:	462b      	mov	r3, r5
  401f2e:	4620      	mov	r0, r4
  401f30:	4629      	mov	r1, r5
  401f32:	f000 fd67 	bl	402a04 <__aeabi_dmul>
  401f36:	a364      	add	r3, pc, #400	; (adr r3, 4020c8 <__ieee754_pow+0x880>)
  401f38:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f3c:	4606      	mov	r6, r0
  401f3e:	460f      	mov	r7, r1
  401f40:	f000 fd60 	bl	402a04 <__aeabi_dmul>
  401f44:	a362      	add	r3, pc, #392	; (adr r3, 4020d0 <__ieee754_pow+0x888>)
  401f46:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f4a:	f000 fba7 	bl	40269c <__aeabi_dsub>
  401f4e:	4632      	mov	r2, r6
  401f50:	463b      	mov	r3, r7
  401f52:	f000 fd57 	bl	402a04 <__aeabi_dmul>
  401f56:	a360      	add	r3, pc, #384	; (adr r3, 4020d8 <__ieee754_pow+0x890>)
  401f58:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f5c:	f000 fba0 	bl	4026a0 <__adddf3>
  401f60:	4632      	mov	r2, r6
  401f62:	463b      	mov	r3, r7
  401f64:	f000 fd4e 	bl	402a04 <__aeabi_dmul>
  401f68:	a35d      	add	r3, pc, #372	; (adr r3, 4020e0 <__ieee754_pow+0x898>)
  401f6a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f6e:	f000 fb95 	bl	40269c <__aeabi_dsub>
  401f72:	4632      	mov	r2, r6
  401f74:	463b      	mov	r3, r7
  401f76:	f000 fd45 	bl	402a04 <__aeabi_dmul>
  401f7a:	a35b      	add	r3, pc, #364	; (adr r3, 4020e8 <__ieee754_pow+0x8a0>)
  401f7c:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f80:	f000 fb8e 	bl	4026a0 <__adddf3>
  401f84:	4632      	mov	r2, r6
  401f86:	463b      	mov	r3, r7
  401f88:	f000 fd3c 	bl	402a04 <__aeabi_dmul>
  401f8c:	4602      	mov	r2, r0
  401f8e:	460b      	mov	r3, r1
  401f90:	4620      	mov	r0, r4
  401f92:	4629      	mov	r1, r5
  401f94:	f000 fb82 	bl	40269c <__aeabi_dsub>
  401f98:	4606      	mov	r6, r0
  401f9a:	460f      	mov	r7, r1
  401f9c:	4602      	mov	r2, r0
  401f9e:	460b      	mov	r3, r1
  401fa0:	4620      	mov	r0, r4
  401fa2:	4629      	mov	r1, r5
  401fa4:	f000 fd2e 	bl	402a04 <__aeabi_dmul>
  401fa8:	2200      	movs	r2, #0
  401faa:	e9cd 0100 	strd	r0, r1, [sp]
  401fae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  401fb2:	4630      	mov	r0, r6
  401fb4:	4639      	mov	r1, r7
  401fb6:	f000 fb71 	bl	40269c <__aeabi_dsub>
  401fba:	4602      	mov	r2, r0
  401fbc:	460b      	mov	r3, r1
  401fbe:	e9dd 0100 	ldrd	r0, r1, [sp]
  401fc2:	f000 fe49 	bl	402c58 <__aeabi_ddiv>
  401fc6:	4642      	mov	r2, r8
  401fc8:	4606      	mov	r6, r0
  401fca:	460f      	mov	r7, r1
  401fcc:	464b      	mov	r3, r9
  401fce:	4620      	mov	r0, r4
  401fd0:	4629      	mov	r1, r5
  401fd2:	f000 fd17 	bl	402a04 <__aeabi_dmul>
  401fd6:	4642      	mov	r2, r8
  401fd8:	464b      	mov	r3, r9
  401fda:	f000 fb61 	bl	4026a0 <__adddf3>
  401fde:	4602      	mov	r2, r0
  401fe0:	460b      	mov	r3, r1
  401fe2:	4630      	mov	r0, r6
  401fe4:	4639      	mov	r1, r7
  401fe6:	f000 fb59 	bl	40269c <__aeabi_dsub>
  401fea:	4622      	mov	r2, r4
  401fec:	462b      	mov	r3, r5
  401fee:	f000 fb55 	bl	40269c <__aeabi_dsub>
  401ff2:	4602      	mov	r2, r0
  401ff4:	460b      	mov	r3, r1
  401ff6:	2000      	movs	r0, #0
  401ff8:	493f      	ldr	r1, [pc, #252]	; (4020f8 <__ieee754_pow+0x8b0>)
  401ffa:	f000 fb4f 	bl	40269c <__aeabi_dsub>
  401ffe:	448a      	add	sl, r1
  402000:	f5ba 1f80 	cmp.w	sl, #1048576	; 0x100000
  402004:	f2c0 8133 	blt.w	40226e <__ieee754_pow+0xa26>
  402008:	4651      	mov	r1, sl
  40200a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  40200e:	f000 fcf9 	bl	402a04 <__aeabi_dmul>
  402012:	e45b      	b.n	4018cc <__ieee754_pow+0x84>
  402014:	4642      	mov	r2, r8
  402016:	4640      	mov	r0, r8
  402018:	464b      	mov	r3, r9
  40201a:	4649      	mov	r1, r9
  40201c:	f000 fcf2 	bl	402a04 <__aeabi_dmul>
  402020:	e454      	b.n	4018cc <__ieee754_pow+0x84>
  402022:	f1ba 0f00 	cmp.w	sl, #0
  402026:	f6bf ace0 	bge.w	4019ea <__ieee754_pow+0x1a2>
  40202a:	e9dd 3400 	ldrd	r3, r4, [sp]
  40202e:	4618      	mov	r0, r3
  402030:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
  402034:	e44a      	b.n	4018cc <__ieee754_pow+0x84>
  402036:	4b34      	ldr	r3, [pc, #208]	; (402108 <__ieee754_pow+0x8c0>)
  402038:	f021 4800 	bic.w	r8, r1, #2147483648	; 0x80000000
  40203c:	4598      	cmp	r8, r3
  40203e:	f340 80f2 	ble.w	402226 <__ieee754_pow+0x9de>
  402042:	4b32      	ldr	r3, [pc, #200]	; (40210c <__ieee754_pow+0x8c4>)
  402044:	440b      	add	r3, r1
  402046:	4303      	orrs	r3, r0
  402048:	d10c      	bne.n	402064 <__ieee754_pow+0x81c>
  40204a:	4632      	mov	r2, r6
  40204c:	463b      	mov	r3, r7
  40204e:	f000 fb25 	bl	40269c <__aeabi_dsub>
  402052:	4602      	mov	r2, r0
  402054:	460b      	mov	r3, r1
  402056:	e9dd 0100 	ldrd	r0, r1, [sp]
  40205a:	f000 ff4f 	bl	402efc <__aeabi_dcmple>
  40205e:	2800      	cmp	r0, #0
  402060:	f43f aef3 	beq.w	401e4a <__ieee754_pow+0x602>
  402064:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  402068:	a321      	add	r3, pc, #132	; (adr r3, 4020f0 <__ieee754_pow+0x8a8>)
  40206a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40206e:	f000 fcc9 	bl	402a04 <__aeabi_dmul>
  402072:	a31f      	add	r3, pc, #124	; (adr r3, 4020f0 <__ieee754_pow+0x8a8>)
  402074:	e9d3 2300 	ldrd	r2, r3, [r3]
  402078:	f000 fcc4 	bl	402a04 <__aeabi_dmul>
  40207c:	e426      	b.n	4018cc <__ieee754_pow+0x84>
  40207e:	4602      	mov	r2, r0
  402080:	460b      	mov	r3, r1
  402082:	2000      	movs	r0, #0
  402084:	491c      	ldr	r1, [pc, #112]	; (4020f8 <__ieee754_pow+0x8b0>)
  402086:	f000 fde7 	bl	402c58 <__aeabi_ddiv>
  40208a:	e43c      	b.n	401906 <__ieee754_pow+0xbe>
  40208c:	2200      	movs	r2, #0
  40208e:	2300      	movs	r3, #0
  402090:	e9cd 2308 	strd	r2, r3, [sp, #32]
  402094:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  402098:	4b17      	ldr	r3, [pc, #92]	; (4020f8 <__ieee754_pow+0x8b0>)
  40209a:	2200      	movs	r2, #0
  40209c:	2700      	movs	r7, #0
  40209e:	e9cd 2306 	strd	r2, r3, [sp, #24]
  4020a2:	e4e6      	b.n	401a72 <__ieee754_pow+0x22a>
  4020a4:	f3af 8000 	nop.w
  4020a8:	652b82fe 	.word	0x652b82fe
  4020ac:	3c971547 	.word	0x3c971547
  4020b0:	00000000 	.word	0x00000000
  4020b4:	3fe62e43 	.word	0x3fe62e43
  4020b8:	fefa39ef 	.word	0xfefa39ef
  4020bc:	3fe62e42 	.word	0x3fe62e42
  4020c0:	0ca86c39 	.word	0x0ca86c39
  4020c4:	be205c61 	.word	0xbe205c61
  4020c8:	72bea4d0 	.word	0x72bea4d0
  4020cc:	3e663769 	.word	0x3e663769
  4020d0:	c5d26bf1 	.word	0xc5d26bf1
  4020d4:	3ebbbd41 	.word	0x3ebbbd41
  4020d8:	af25de2c 	.word	0xaf25de2c
  4020dc:	3f11566a 	.word	0x3f11566a
  4020e0:	16bebd93 	.word	0x16bebd93
  4020e4:	3f66c16c 	.word	0x3f66c16c
  4020e8:	5555553e 	.word	0x5555553e
  4020ec:	3fc55555 	.word	0x3fc55555
  4020f0:	c2f8f359 	.word	0xc2f8f359
  4020f4:	01a56e1f 	.word	0x01a56e1f
  4020f8:	3ff00000 	.word	0x3ff00000
  4020fc:	bff00000 	.word	0xbff00000
  402100:	408fffff 	.word	0x408fffff
  402104:	000fffff 	.word	0x000fffff
  402108:	4090cbff 	.word	0x4090cbff
  40210c:	3f6f3400 	.word	0x3f6f3400
  402110:	4b6b      	ldr	r3, [pc, #428]	; (4022c0 <__ieee754_pow+0xa78>)
  402112:	429e      	cmp	r6, r3
  402114:	f77f ac66 	ble.w	4019e4 <__ieee754_pow+0x19c>
  402118:	4b6a      	ldr	r3, [pc, #424]	; (4022c4 <__ieee754_pow+0xa7c>)
  40211a:	429e      	cmp	r6, r3
  40211c:	f73f ac13 	bgt.w	401946 <__ieee754_pow+0xfe>
  402120:	2200      	movs	r2, #0
  402122:	4b68      	ldr	r3, [pc, #416]	; (4022c4 <__ieee754_pow+0xa7c>)
  402124:	f000 faba 	bl	40269c <__aeabi_dsub>
  402128:	a357      	add	r3, pc, #348	; (adr r3, 402288 <__ieee754_pow+0xa40>)
  40212a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40212e:	4606      	mov	r6, r0
  402130:	460f      	mov	r7, r1
  402132:	f000 fc67 	bl	402a04 <__aeabi_dmul>
  402136:	a356      	add	r3, pc, #344	; (adr r3, 402290 <__ieee754_pow+0xa48>)
  402138:	e9d3 2300 	ldrd	r2, r3, [r3]
  40213c:	4680      	mov	r8, r0
  40213e:	4689      	mov	r9, r1
  402140:	4630      	mov	r0, r6
  402142:	4639      	mov	r1, r7
  402144:	f000 fc5e 	bl	402a04 <__aeabi_dmul>
  402148:	2200      	movs	r2, #0
  40214a:	4682      	mov	sl, r0
  40214c:	468b      	mov	fp, r1
  40214e:	4b5e      	ldr	r3, [pc, #376]	; (4022c8 <__ieee754_pow+0xa80>)
  402150:	4630      	mov	r0, r6
  402152:	4639      	mov	r1, r7
  402154:	f000 fc56 	bl	402a04 <__aeabi_dmul>
  402158:	4602      	mov	r2, r0
  40215a:	460b      	mov	r3, r1
  40215c:	a14e      	add	r1, pc, #312	; (adr r1, 402298 <__ieee754_pow+0xa50>)
  40215e:	e9d1 0100 	ldrd	r0, r1, [r1]
  402162:	f000 fa9b 	bl	40269c <__aeabi_dsub>
  402166:	4632      	mov	r2, r6
  402168:	463b      	mov	r3, r7
  40216a:	f000 fc4b 	bl	402a04 <__aeabi_dmul>
  40216e:	4602      	mov	r2, r0
  402170:	460b      	mov	r3, r1
  402172:	2000      	movs	r0, #0
  402174:	4955      	ldr	r1, [pc, #340]	; (4022cc <__ieee754_pow+0xa84>)
  402176:	f000 fa91 	bl	40269c <__aeabi_dsub>
  40217a:	4632      	mov	r2, r6
  40217c:	e9cd 0102 	strd	r0, r1, [sp, #8]
  402180:	463b      	mov	r3, r7
  402182:	4630      	mov	r0, r6
  402184:	4639      	mov	r1, r7
  402186:	f000 fc3d 	bl	402a04 <__aeabi_dmul>
  40218a:	4602      	mov	r2, r0
  40218c:	460b      	mov	r3, r1
  40218e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  402192:	f000 fc37 	bl	402a04 <__aeabi_dmul>
  402196:	a342      	add	r3, pc, #264	; (adr r3, 4022a0 <__ieee754_pow+0xa58>)
  402198:	e9d3 2300 	ldrd	r2, r3, [r3]
  40219c:	f000 fc32 	bl	402a04 <__aeabi_dmul>
  4021a0:	4602      	mov	r2, r0
  4021a2:	460b      	mov	r3, r1
  4021a4:	4650      	mov	r0, sl
  4021a6:	4659      	mov	r1, fp
  4021a8:	f000 fa78 	bl	40269c <__aeabi_dsub>
  4021ac:	4602      	mov	r2, r0
  4021ae:	460b      	mov	r3, r1
  4021b0:	4606      	mov	r6, r0
  4021b2:	460f      	mov	r7, r1
  4021b4:	4640      	mov	r0, r8
  4021b6:	4649      	mov	r1, r9
  4021b8:	f000 fa72 	bl	4026a0 <__adddf3>
  4021bc:	4642      	mov	r2, r8
  4021be:	464b      	mov	r3, r9
  4021c0:	2000      	movs	r0, #0
  4021c2:	4682      	mov	sl, r0
  4021c4:	468b      	mov	fp, r1
  4021c6:	f000 fa69 	bl	40269c <__aeabi_dsub>
  4021ca:	4602      	mov	r2, r0
  4021cc:	460b      	mov	r3, r1
  4021ce:	4630      	mov	r0, r6
  4021d0:	4639      	mov	r1, r7
  4021d2:	f000 fa63 	bl	40269c <__aeabi_dsub>
  4021d6:	4680      	mov	r8, r0
  4021d8:	4689      	mov	r9, r1
  4021da:	e5d4      	b.n	401d86 <__ieee754_pow+0x53e>
  4021dc:	4642      	mov	r2, r8
  4021de:	464b      	mov	r3, r9
  4021e0:	2000      	movs	r0, #0
  4021e2:	4938      	ldr	r1, [pc, #224]	; (4022c4 <__ieee754_pow+0xa7c>)
  4021e4:	f000 fd38 	bl	402c58 <__aeabi_ddiv>
  4021e8:	f7ff bb70 	b.w	4018cc <__ieee754_pow+0x84>
  4021ec:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4021f0:	a32d      	add	r3, pc, #180	; (adr r3, 4022a8 <__ieee754_pow+0xa60>)
  4021f2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4021f6:	f000 fc05 	bl	402a04 <__aeabi_dmul>
  4021fa:	a32b      	add	r3, pc, #172	; (adr r3, 4022a8 <__ieee754_pow+0xa60>)
  4021fc:	e9d3 2300 	ldrd	r2, r3, [r3]
  402200:	f000 fc00 	bl	402a04 <__aeabi_dmul>
  402204:	f7ff bb62 	b.w	4018cc <__ieee754_pow+0x84>
  402208:	f1be 0f00 	cmp.w	lr, #0
  40220c:	f47f ab69 	bne.w	4018e2 <__ieee754_pow+0x9a>
  402210:	f1c3 0314 	rsb	r3, r3, #20
  402214:	fa47 f203 	asr.w	r2, r7, r3
  402218:	fa02 f303 	lsl.w	r3, r2, r3
  40221c:	429f      	cmp	r7, r3
  40221e:	d02a      	beq.n	402276 <__ieee754_pow+0xa2e>
  402220:	4674      	mov	r4, lr
  402222:	f7ff bb36 	b.w	401892 <__ieee754_pow+0x4a>
  402226:	4b29      	ldr	r3, [pc, #164]	; (4022cc <__ieee754_pow+0xa84>)
  402228:	4598      	cmp	r8, r3
  40222a:	f73f ae0e 	bgt.w	401e4a <__ieee754_pow+0x602>
  40222e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  402232:	4692      	mov	sl, r2
  402234:	4693      	mov	fp, r2
  402236:	e638      	b.n	401eaa <__ieee754_pow+0x662>
  402238:	4602      	mov	r2, r0
  40223a:	460b      	mov	r3, r1
  40223c:	f000 fa2e 	bl	40269c <__aeabi_dsub>
  402240:	4602      	mov	r2, r0
  402242:	460b      	mov	r3, r1
  402244:	f000 fd08 	bl	402c58 <__aeabi_ddiv>
  402248:	f7ff bb40 	b.w	4018cc <__ieee754_pow+0x84>
  40224c:	a318      	add	r3, pc, #96	; (adr r3, 4022b0 <__ieee754_pow+0xa68>)
  40224e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402252:	e9cd 2308 	strd	r2, r3, [sp, #32]
  402256:	a318      	add	r3, pc, #96	; (adr r3, 4022b8 <__ieee754_pow+0xa70>)
  402258:	e9d3 2300 	ldrd	r2, r3, [r3]
  40225c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  402260:	4b1b      	ldr	r3, [pc, #108]	; (4022d0 <__ieee754_pow+0xa88>)
  402262:	2200      	movs	r2, #0
  402264:	f44f 2780 	mov.w	r7, #262144	; 0x40000
  402268:	e9cd 2306 	strd	r2, r3, [sp, #24]
  40226c:	e401      	b.n	401a72 <__ieee754_pow+0x22a>
  40226e:	465a      	mov	r2, fp
  402270:	f000 f98a 	bl	402588 <scalbn>
  402274:	e6c9      	b.n	40200a <__ieee754_pow+0x7c2>
  402276:	f002 0201 	and.w	r2, r2, #1
  40227a:	f1c2 0402 	rsb	r4, r2, #2
  40227e:	f7ff bb08 	b.w	401892 <__ieee754_pow+0x4a>
  402282:	bf00      	nop
  402284:	f3af 8000 	nop.w
  402288:	60000000 	.word	0x60000000
  40228c:	3ff71547 	.word	0x3ff71547
  402290:	f85ddf44 	.word	0xf85ddf44
  402294:	3e54ae0b 	.word	0x3e54ae0b
  402298:	55555555 	.word	0x55555555
  40229c:	3fd55555 	.word	0x3fd55555
  4022a0:	652b82fe 	.word	0x652b82fe
  4022a4:	3ff71547 	.word	0x3ff71547
  4022a8:	8800759c 	.word	0x8800759c
  4022ac:	7e37e43c 	.word	0x7e37e43c
  4022b0:	40000000 	.word	0x40000000
  4022b4:	3fe2b803 	.word	0x3fe2b803
  4022b8:	43cfd006 	.word	0x43cfd006
  4022bc:	3e4cfdeb 	.word	0x3e4cfdeb
  4022c0:	3feffffe 	.word	0x3feffffe
  4022c4:	3ff00000 	.word	0x3ff00000
  4022c8:	3fd00000 	.word	0x3fd00000
  4022cc:	3fe00000 	.word	0x3fe00000
  4022d0:	3ff80000 	.word	0x3ff80000

004022d4 <__ieee754_sqrt>:
  4022d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4022d8:	4f5b      	ldr	r7, [pc, #364]	; (402448 <__ieee754_sqrt+0x174>)
  4022da:	438f      	bics	r7, r1
  4022dc:	4605      	mov	r5, r0
  4022de:	460c      	mov	r4, r1
  4022e0:	f000 8092 	beq.w	402408 <__ieee754_sqrt+0x134>
  4022e4:	2900      	cmp	r1, #0
  4022e6:	460b      	mov	r3, r1
  4022e8:	4602      	mov	r2, r0
  4022ea:	dd6f      	ble.n	4023cc <__ieee754_sqrt+0xf8>
  4022ec:	150f      	asrs	r7, r1, #20
  4022ee:	d07b      	beq.n	4023e8 <__ieee754_sqrt+0x114>
  4022f0:	f2a7 37ff 	subw	r7, r7, #1023	; 0x3ff
  4022f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
  4022f8:	07f8      	lsls	r0, r7, #31
  4022fa:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4022fe:	d45c      	bmi.n	4023ba <__ieee754_sqrt+0xe6>
  402300:	eb03 71d2 	add.w	r1, r3, r2, lsr #31
  402304:	2600      	movs	r6, #0
  402306:	440b      	add	r3, r1
  402308:	107f      	asrs	r7, r7, #1
  40230a:	0052      	lsls	r2, r2, #1
  40230c:	46b6      	mov	lr, r6
  40230e:	2016      	movs	r0, #22
  402310:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
  402314:	eb0e 0401 	add.w	r4, lr, r1
  402318:	429c      	cmp	r4, r3
  40231a:	ea4f 75d2 	mov.w	r5, r2, lsr #31
  40231e:	ea4f 0242 	mov.w	r2, r2, lsl #1
  402322:	dc03      	bgt.n	40232c <__ieee754_sqrt+0x58>
  402324:	1b1b      	subs	r3, r3, r4
  402326:	eb04 0e01 	add.w	lr, r4, r1
  40232a:	440e      	add	r6, r1
  40232c:	3801      	subs	r0, #1
  40232e:	eb05 0343 	add.w	r3, r5, r3, lsl #1
  402332:	ea4f 0151 	mov.w	r1, r1, lsr #1
  402336:	d1ed      	bne.n	402314 <__ieee754_sqrt+0x40>
  402338:	4684      	mov	ip, r0
  40233a:	2420      	movs	r4, #32
  40233c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402340:	e009      	b.n	402356 <__ieee754_sqrt+0x82>
  402342:	d020      	beq.n	402386 <__ieee754_sqrt+0xb2>
  402344:	eb03 75d2 	add.w	r5, r3, r2, lsr #31
  402348:	3c01      	subs	r4, #1
  40234a:	ea4f 0151 	mov.w	r1, r1, lsr #1
  40234e:	442b      	add	r3, r5
  402350:	ea4f 0242 	mov.w	r2, r2, lsl #1
  402354:	d020      	beq.n	402398 <__ieee754_sqrt+0xc4>
  402356:	4573      	cmp	r3, lr
  402358:	eb01 050c 	add.w	r5, r1, ip
  40235c:	ddf1      	ble.n	402342 <__ieee754_sqrt+0x6e>
  40235e:	2d00      	cmp	r5, #0
  402360:	eb05 0c01 	add.w	ip, r5, r1
  402364:	db09      	blt.n	40237a <__ieee754_sqrt+0xa6>
  402366:	46f0      	mov	r8, lr
  402368:	4295      	cmp	r5, r2
  40236a:	eba3 030e 	sub.w	r3, r3, lr
  40236e:	d900      	bls.n	402372 <__ieee754_sqrt+0x9e>
  402370:	3b01      	subs	r3, #1
  402372:	1b52      	subs	r2, r2, r5
  402374:	4408      	add	r0, r1
  402376:	46c6      	mov	lr, r8
  402378:	e7e4      	b.n	402344 <__ieee754_sqrt+0x70>
  40237a:	f1bc 0f00 	cmp.w	ip, #0
  40237e:	dbf2      	blt.n	402366 <__ieee754_sqrt+0x92>
  402380:	f10e 0801 	add.w	r8, lr, #1
  402384:	e7f0      	b.n	402368 <__ieee754_sqrt+0x94>
  402386:	4295      	cmp	r5, r2
  402388:	d8dc      	bhi.n	402344 <__ieee754_sqrt+0x70>
  40238a:	2d00      	cmp	r5, #0
  40238c:	eb05 0c01 	add.w	ip, r5, r1
  402390:	db44      	blt.n	40241c <__ieee754_sqrt+0x148>
  402392:	4698      	mov	r8, r3
  402394:	2300      	movs	r3, #0
  402396:	e7ec      	b.n	402372 <__ieee754_sqrt+0x9e>
  402398:	4313      	orrs	r3, r2
  40239a:	d113      	bne.n	4023c4 <__ieee754_sqrt+0xf0>
  40239c:	0840      	lsrs	r0, r0, #1
  40239e:	1073      	asrs	r3, r6, #1
  4023a0:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
  4023a4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4023a8:	07f2      	lsls	r2, r6, #31
  4023aa:	eb03 5907 	add.w	r9, r3, r7, lsl #20
  4023ae:	bf48      	it	mi
  4023b0:	f040 4000 	orrmi.w	r0, r0, #2147483648	; 0x80000000
  4023b4:	4649      	mov	r1, r9
  4023b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4023ba:	005b      	lsls	r3, r3, #1
  4023bc:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
  4023c0:	0052      	lsls	r2, r2, #1
  4023c2:	e79d      	b.n	402300 <__ieee754_sqrt+0x2c>
  4023c4:	1c41      	adds	r1, r0, #1
  4023c6:	d02d      	beq.n	402424 <__ieee754_sqrt+0x150>
  4023c8:	3001      	adds	r0, #1
  4023ca:	e7e7      	b.n	40239c <__ieee754_sqrt+0xc8>
  4023cc:	4606      	mov	r6, r0
  4023ce:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  4023d2:	433e      	orrs	r6, r7
  4023d4:	d0ef      	beq.n	4023b6 <__ieee754_sqrt+0xe2>
  4023d6:	bb69      	cbnz	r1, 402434 <__ieee754_sqrt+0x160>
  4023d8:	460f      	mov	r7, r1
  4023da:	0ad3      	lsrs	r3, r2, #11
  4023dc:	3f15      	subs	r7, #21
  4023de:	0552      	lsls	r2, r2, #21
  4023e0:	2b00      	cmp	r3, #0
  4023e2:	d0fa      	beq.n	4023da <__ieee754_sqrt+0x106>
  4023e4:	02de      	lsls	r6, r3, #11
  4023e6:	d420      	bmi.n	40242a <__ieee754_sqrt+0x156>
  4023e8:	2400      	movs	r4, #0
  4023ea:	e000      	b.n	4023ee <__ieee754_sqrt+0x11a>
  4023ec:	4604      	mov	r4, r0
  4023ee:	005b      	lsls	r3, r3, #1
  4023f0:	02dd      	lsls	r5, r3, #11
  4023f2:	f104 0001 	add.w	r0, r4, #1
  4023f6:	d5f9      	bpl.n	4023ec <__ieee754_sqrt+0x118>
  4023f8:	f1c0 0120 	rsb	r1, r0, #32
  4023fc:	fa22 f101 	lsr.w	r1, r2, r1
  402400:	430b      	orrs	r3, r1
  402402:	1b3f      	subs	r7, r7, r4
  402404:	4082      	lsls	r2, r0
  402406:	e773      	b.n	4022f0 <__ieee754_sqrt+0x1c>
  402408:	4602      	mov	r2, r0
  40240a:	460b      	mov	r3, r1
  40240c:	f000 fafa 	bl	402a04 <__aeabi_dmul>
  402410:	462a      	mov	r2, r5
  402412:	4623      	mov	r3, r4
  402414:	f000 f944 	bl	4026a0 <__adddf3>
  402418:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40241c:	f1bc 0f00 	cmp.w	ip, #0
  402420:	daae      	bge.n	402380 <__ieee754_sqrt+0xac>
  402422:	e7b6      	b.n	402392 <__ieee754_sqrt+0xbe>
  402424:	3601      	adds	r6, #1
  402426:	4620      	mov	r0, r4
  402428:	e7b9      	b.n	40239e <__ieee754_sqrt+0xca>
  40242a:	2000      	movs	r0, #0
  40242c:	2120      	movs	r1, #32
  40242e:	f04f 34ff 	mov.w	r4, #4294967295
  402432:	e7e3      	b.n	4023fc <__ieee754_sqrt+0x128>
  402434:	4602      	mov	r2, r0
  402436:	460b      	mov	r3, r1
  402438:	f000 f930 	bl	40269c <__aeabi_dsub>
  40243c:	4602      	mov	r2, r0
  40243e:	460b      	mov	r3, r1
  402440:	f000 fc0a 	bl	402c58 <__aeabi_ddiv>
  402444:	e7b7      	b.n	4023b6 <__ieee754_sqrt+0xe2>
  402446:	bf00      	nop
  402448:	7ff00000 	.word	0x7ff00000

0040244c <fabs>:
  40244c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402450:	4770      	bx	lr
  402452:	bf00      	nop

00402454 <finite>:
  402454:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
  402458:	f501 1080 	add.w	r0, r1, #1048576	; 0x100000
  40245c:	0fc0      	lsrs	r0, r0, #31
  40245e:	4770      	bx	lr

00402460 <matherr>:
  402460:	2000      	movs	r0, #0
  402462:	4770      	bx	lr

00402464 <nan>:
  402464:	2000      	movs	r0, #0
  402466:	4901      	ldr	r1, [pc, #4]	; (40246c <nan+0x8>)
  402468:	4770      	bx	lr
  40246a:	bf00      	nop
  40246c:	7ff80000 	.word	0x7ff80000

00402470 <rint>:
  402470:	b5f0      	push	{r4, r5, r6, r7, lr}
  402472:	f3c1 5e0a 	ubfx	lr, r1, #20, #11
  402476:	f2ae 36ff 	subw	r6, lr, #1023	; 0x3ff
  40247a:	2e13      	cmp	r6, #19
  40247c:	b083      	sub	sp, #12
  40247e:	4602      	mov	r2, r0
  402480:	460b      	mov	r3, r1
  402482:	460c      	mov	r4, r1
  402484:	ea4f 75d1 	mov.w	r5, r1, lsr #31
  402488:	4607      	mov	r7, r0
  40248a:	dc2e      	bgt.n	4024ea <rint+0x7a>
  40248c:	2e00      	cmp	r6, #0
  40248e:	db49      	blt.n	402524 <rint+0xb4>
  402490:	493a      	ldr	r1, [pc, #232]	; (40257c <rint+0x10c>)
  402492:	4131      	asrs	r1, r6
  402494:	ea03 0001 	and.w	r0, r3, r1
  402498:	4310      	orrs	r0, r2
  40249a:	d02b      	beq.n	4024f4 <rint+0x84>
  40249c:	0849      	lsrs	r1, r1, #1
  40249e:	400b      	ands	r3, r1
  4024a0:	ea53 0702 	orrs.w	r7, r3, r2
  4024a4:	d00c      	beq.n	4024c0 <rint+0x50>
  4024a6:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  4024aa:	2e13      	cmp	r6, #19
  4024ac:	ea24 0101 	bic.w	r1, r4, r1
  4024b0:	fa43 f406 	asr.w	r4, r3, r6
  4024b4:	ea44 0401 	orr.w	r4, r4, r1
  4024b8:	bf0c      	ite	eq
  4024ba:	f04f 4700 	moveq.w	r7, #2147483648	; 0x80000000
  4024be:	2700      	movne	r7, #0
  4024c0:	4b2f      	ldr	r3, [pc, #188]	; (402580 <rint+0x110>)
  4024c2:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
  4024c6:	4621      	mov	r1, r4
  4024c8:	e9d5 4500 	ldrd	r4, r5, [r5]
  4024cc:	4638      	mov	r0, r7
  4024ce:	4622      	mov	r2, r4
  4024d0:	462b      	mov	r3, r5
  4024d2:	f000 f8e5 	bl	4026a0 <__adddf3>
  4024d6:	e9cd 0100 	strd	r0, r1, [sp]
  4024da:	4622      	mov	r2, r4
  4024dc:	462b      	mov	r3, r5
  4024de:	e9dd 0100 	ldrd	r0, r1, [sp]
  4024e2:	f000 f8db 	bl	40269c <__aeabi_dsub>
  4024e6:	b003      	add	sp, #12
  4024e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4024ea:	2e33      	cmp	r6, #51	; 0x33
  4024ec:	dd06      	ble.n	4024fc <rint+0x8c>
  4024ee:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
  4024f2:	d040      	beq.n	402576 <rint+0x106>
  4024f4:	4610      	mov	r0, r2
  4024f6:	4619      	mov	r1, r3
  4024f8:	b003      	add	sp, #12
  4024fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4024fc:	f2ae 4e13 	subw	lr, lr, #1043	; 0x413
  402500:	f04f 31ff 	mov.w	r1, #4294967295
  402504:	fa21 f10e 	lsr.w	r1, r1, lr
  402508:	4208      	tst	r0, r1
  40250a:	d0f3      	beq.n	4024f4 <rint+0x84>
  40250c:	0849      	lsrs	r1, r1, #1
  40250e:	4208      	tst	r0, r1
  402510:	d0d6      	beq.n	4024c0 <rint+0x50>
  402512:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  402516:	ea20 0101 	bic.w	r1, r0, r1
  40251a:	fa43 fe0e 	asr.w	lr, r3, lr
  40251e:	ea4e 0701 	orr.w	r7, lr, r1
  402522:	e7cd      	b.n	4024c0 <rint+0x50>
  402524:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402528:	4301      	orrs	r1, r0
  40252a:	d0e3      	beq.n	4024f4 <rint+0x84>
  40252c:	f3c3 0113 	ubfx	r1, r3, #0, #20
  402530:	4e13      	ldr	r6, [pc, #76]	; (402580 <rint+0x110>)
  402532:	4301      	orrs	r1, r0
  402534:	f1c1 0c00 	rsb	ip, r1, #0
  402538:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
  40253c:	e9d6 6700 	ldrd	r6, r7, [r6]
  402540:	ea4c 0c01 	orr.w	ip, ip, r1
  402544:	ea4f 3c1c 	mov.w	ip, ip, lsr #12
  402548:	0c5c      	lsrs	r4, r3, #17
  40254a:	0464      	lsls	r4, r4, #17
  40254c:	f40c 2300 	and.w	r3, ip, #524288	; 0x80000
  402550:	ea43 0104 	orr.w	r1, r3, r4
  402554:	4632      	mov	r2, r6
  402556:	463b      	mov	r3, r7
  402558:	f000 f8a2 	bl	4026a0 <__adddf3>
  40255c:	e9cd 0100 	strd	r0, r1, [sp]
  402560:	4632      	mov	r2, r6
  402562:	463b      	mov	r3, r7
  402564:	e9dd 0100 	ldrd	r0, r1, [sp]
  402568:	f000 f898 	bl	40269c <__aeabi_dsub>
  40256c:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
  402570:	ea44 71c5 	orr.w	r1, r4, r5, lsl #31
  402574:	e7c0      	b.n	4024f8 <rint+0x88>
  402576:	f000 f893 	bl	4026a0 <__adddf3>
  40257a:	e7bd      	b.n	4024f8 <rint+0x88>
  40257c:	000fffff 	.word	0x000fffff
  402580:	00406160 	.word	0x00406160
  402584:	00000000 	.word	0x00000000

00402588 <scalbn>:
  402588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40258a:	f3c1 560a 	ubfx	r6, r1, #20, #11
  40258e:	4604      	mov	r4, r0
  402590:	460d      	mov	r5, r1
  402592:	460b      	mov	r3, r1
  402594:	4617      	mov	r7, r2
  402596:	bb0e      	cbnz	r6, 4025dc <scalbn+0x54>
  402598:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  40259c:	4303      	orrs	r3, r0
  40259e:	4686      	mov	lr, r0
  4025a0:	d025      	beq.n	4025ee <scalbn+0x66>
  4025a2:	2200      	movs	r2, #0
  4025a4:	4b34      	ldr	r3, [pc, #208]	; (402678 <scalbn+0xf0>)
  4025a6:	f000 fa2d 	bl	402a04 <__aeabi_dmul>
  4025aa:	4a34      	ldr	r2, [pc, #208]	; (40267c <scalbn+0xf4>)
  4025ac:	4297      	cmp	r7, r2
  4025ae:	4604      	mov	r4, r0
  4025b0:	460d      	mov	r5, r1
  4025b2:	460b      	mov	r3, r1
  4025b4:	db2a      	blt.n	40260c <scalbn+0x84>
  4025b6:	f3c1 560a 	ubfx	r6, r1, #20, #11
  4025ba:	3e36      	subs	r6, #54	; 0x36
  4025bc:	443e      	add	r6, r7
  4025be:	f240 72fe 	movw	r2, #2046	; 0x7fe
  4025c2:	4296      	cmp	r6, r2
  4025c4:	dc28      	bgt.n	402618 <scalbn+0x90>
  4025c6:	2e00      	cmp	r6, #0
  4025c8:	dd12      	ble.n	4025f0 <scalbn+0x68>
  4025ca:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  4025ce:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  4025d2:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  4025d6:	4620      	mov	r0, r4
  4025d8:	4629      	mov	r1, r5
  4025da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4025dc:	f240 72ff 	movw	r2, #2047	; 0x7ff
  4025e0:	4296      	cmp	r6, r2
  4025e2:	d1eb      	bne.n	4025bc <scalbn+0x34>
  4025e4:	4602      	mov	r2, r0
  4025e6:	460b      	mov	r3, r1
  4025e8:	f000 f85a 	bl	4026a0 <__adddf3>
  4025ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4025ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4025f0:	f116 0f35 	cmn.w	r6, #53	; 0x35
  4025f4:	da1d      	bge.n	402632 <scalbn+0xaa>
  4025f6:	f24c 3350 	movw	r3, #50000	; 0xc350
  4025fa:	429f      	cmp	r7, r3
  4025fc:	4622      	mov	r2, r4
  4025fe:	462b      	mov	r3, r5
  402600:	dc25      	bgt.n	40264e <scalbn+0xc6>
  402602:	a119      	add	r1, pc, #100	; (adr r1, 402668 <scalbn+0xe0>)
  402604:	e9d1 0100 	ldrd	r0, r1, [r1]
  402608:	f000 f83c 	bl	402684 <copysign>
  40260c:	a316      	add	r3, pc, #88	; (adr r3, 402668 <scalbn+0xe0>)
  40260e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402612:	f000 f9f7 	bl	402a04 <__aeabi_dmul>
  402616:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402618:	4622      	mov	r2, r4
  40261a:	462b      	mov	r3, r5
  40261c:	a114      	add	r1, pc, #80	; (adr r1, 402670 <scalbn+0xe8>)
  40261e:	e9d1 0100 	ldrd	r0, r1, [r1]
  402622:	f000 f82f 	bl	402684 <copysign>
  402626:	a312      	add	r3, pc, #72	; (adr r3, 402670 <scalbn+0xe8>)
  402628:	e9d3 2300 	ldrd	r2, r3, [r3]
  40262c:	f000 f9ea 	bl	402a04 <__aeabi_dmul>
  402630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402632:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  402636:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  40263a:	3636      	adds	r6, #54	; 0x36
  40263c:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  402640:	4620      	mov	r0, r4
  402642:	4629      	mov	r1, r5
  402644:	2200      	movs	r2, #0
  402646:	4b0e      	ldr	r3, [pc, #56]	; (402680 <scalbn+0xf8>)
  402648:	f000 f9dc 	bl	402a04 <__aeabi_dmul>
  40264c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40264e:	a108      	add	r1, pc, #32	; (adr r1, 402670 <scalbn+0xe8>)
  402650:	e9d1 0100 	ldrd	r0, r1, [r1]
  402654:	f000 f816 	bl	402684 <copysign>
  402658:	a305      	add	r3, pc, #20	; (adr r3, 402670 <scalbn+0xe8>)
  40265a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40265e:	f000 f9d1 	bl	402a04 <__aeabi_dmul>
  402662:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402664:	f3af 8000 	nop.w
  402668:	c2f8f359 	.word	0xc2f8f359
  40266c:	01a56e1f 	.word	0x01a56e1f
  402670:	8800759c 	.word	0x8800759c
  402674:	7e37e43c 	.word	0x7e37e43c
  402678:	43500000 	.word	0x43500000
  40267c:	ffff3cb0 	.word	0xffff3cb0
  402680:	3c900000 	.word	0x3c900000

00402684 <copysign>:
  402684:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
  402688:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
  40268c:	ea42 0103 	orr.w	r1, r2, r3
  402690:	4770      	bx	lr
  402692:	bf00      	nop

00402694 <__aeabi_drsub>:
  402694:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  402698:	e002      	b.n	4026a0 <__adddf3>
  40269a:	bf00      	nop

0040269c <__aeabi_dsub>:
  40269c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004026a0 <__adddf3>:
  4026a0:	b530      	push	{r4, r5, lr}
  4026a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4026a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4026aa:	ea94 0f05 	teq	r4, r5
  4026ae:	bf08      	it	eq
  4026b0:	ea90 0f02 	teqeq	r0, r2
  4026b4:	bf1f      	itttt	ne
  4026b6:	ea54 0c00 	orrsne.w	ip, r4, r0
  4026ba:	ea55 0c02 	orrsne.w	ip, r5, r2
  4026be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4026c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4026c6:	f000 80e2 	beq.w	40288e <__adddf3+0x1ee>
  4026ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4026ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4026d2:	bfb8      	it	lt
  4026d4:	426d      	neglt	r5, r5
  4026d6:	dd0c      	ble.n	4026f2 <__adddf3+0x52>
  4026d8:	442c      	add	r4, r5
  4026da:	ea80 0202 	eor.w	r2, r0, r2
  4026de:	ea81 0303 	eor.w	r3, r1, r3
  4026e2:	ea82 0000 	eor.w	r0, r2, r0
  4026e6:	ea83 0101 	eor.w	r1, r3, r1
  4026ea:	ea80 0202 	eor.w	r2, r0, r2
  4026ee:	ea81 0303 	eor.w	r3, r1, r3
  4026f2:	2d36      	cmp	r5, #54	; 0x36
  4026f4:	bf88      	it	hi
  4026f6:	bd30      	pophi	{r4, r5, pc}
  4026f8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4026fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402700:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  402704:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  402708:	d002      	beq.n	402710 <__adddf3+0x70>
  40270a:	4240      	negs	r0, r0
  40270c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402710:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  402714:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402718:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40271c:	d002      	beq.n	402724 <__adddf3+0x84>
  40271e:	4252      	negs	r2, r2
  402720:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  402724:	ea94 0f05 	teq	r4, r5
  402728:	f000 80a7 	beq.w	40287a <__adddf3+0x1da>
  40272c:	f1a4 0401 	sub.w	r4, r4, #1
  402730:	f1d5 0e20 	rsbs	lr, r5, #32
  402734:	db0d      	blt.n	402752 <__adddf3+0xb2>
  402736:	fa02 fc0e 	lsl.w	ip, r2, lr
  40273a:	fa22 f205 	lsr.w	r2, r2, r5
  40273e:	1880      	adds	r0, r0, r2
  402740:	f141 0100 	adc.w	r1, r1, #0
  402744:	fa03 f20e 	lsl.w	r2, r3, lr
  402748:	1880      	adds	r0, r0, r2
  40274a:	fa43 f305 	asr.w	r3, r3, r5
  40274e:	4159      	adcs	r1, r3
  402750:	e00e      	b.n	402770 <__adddf3+0xd0>
  402752:	f1a5 0520 	sub.w	r5, r5, #32
  402756:	f10e 0e20 	add.w	lr, lr, #32
  40275a:	2a01      	cmp	r2, #1
  40275c:	fa03 fc0e 	lsl.w	ip, r3, lr
  402760:	bf28      	it	cs
  402762:	f04c 0c02 	orrcs.w	ip, ip, #2
  402766:	fa43 f305 	asr.w	r3, r3, r5
  40276a:	18c0      	adds	r0, r0, r3
  40276c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  402770:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402774:	d507      	bpl.n	402786 <__adddf3+0xe6>
  402776:	f04f 0e00 	mov.w	lr, #0
  40277a:	f1dc 0c00 	rsbs	ip, ip, #0
  40277e:	eb7e 0000 	sbcs.w	r0, lr, r0
  402782:	eb6e 0101 	sbc.w	r1, lr, r1
  402786:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40278a:	d31b      	bcc.n	4027c4 <__adddf3+0x124>
  40278c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  402790:	d30c      	bcc.n	4027ac <__adddf3+0x10c>
  402792:	0849      	lsrs	r1, r1, #1
  402794:	ea5f 0030 	movs.w	r0, r0, rrx
  402798:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40279c:	f104 0401 	add.w	r4, r4, #1
  4027a0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4027a4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4027a8:	f080 809a 	bcs.w	4028e0 <__adddf3+0x240>
  4027ac:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4027b0:	bf08      	it	eq
  4027b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4027b6:	f150 0000 	adcs.w	r0, r0, #0
  4027ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4027be:	ea41 0105 	orr.w	r1, r1, r5
  4027c2:	bd30      	pop	{r4, r5, pc}
  4027c4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4027c8:	4140      	adcs	r0, r0
  4027ca:	eb41 0101 	adc.w	r1, r1, r1
  4027ce:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4027d2:	f1a4 0401 	sub.w	r4, r4, #1
  4027d6:	d1e9      	bne.n	4027ac <__adddf3+0x10c>
  4027d8:	f091 0f00 	teq	r1, #0
  4027dc:	bf04      	itt	eq
  4027de:	4601      	moveq	r1, r0
  4027e0:	2000      	moveq	r0, #0
  4027e2:	fab1 f381 	clz	r3, r1
  4027e6:	bf08      	it	eq
  4027e8:	3320      	addeq	r3, #32
  4027ea:	f1a3 030b 	sub.w	r3, r3, #11
  4027ee:	f1b3 0220 	subs.w	r2, r3, #32
  4027f2:	da0c      	bge.n	40280e <__adddf3+0x16e>
  4027f4:	320c      	adds	r2, #12
  4027f6:	dd08      	ble.n	40280a <__adddf3+0x16a>
  4027f8:	f102 0c14 	add.w	ip, r2, #20
  4027fc:	f1c2 020c 	rsb	r2, r2, #12
  402800:	fa01 f00c 	lsl.w	r0, r1, ip
  402804:	fa21 f102 	lsr.w	r1, r1, r2
  402808:	e00c      	b.n	402824 <__adddf3+0x184>
  40280a:	f102 0214 	add.w	r2, r2, #20
  40280e:	bfd8      	it	le
  402810:	f1c2 0c20 	rsble	ip, r2, #32
  402814:	fa01 f102 	lsl.w	r1, r1, r2
  402818:	fa20 fc0c 	lsr.w	ip, r0, ip
  40281c:	bfdc      	itt	le
  40281e:	ea41 010c 	orrle.w	r1, r1, ip
  402822:	4090      	lslle	r0, r2
  402824:	1ae4      	subs	r4, r4, r3
  402826:	bfa2      	ittt	ge
  402828:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40282c:	4329      	orrge	r1, r5
  40282e:	bd30      	popge	{r4, r5, pc}
  402830:	ea6f 0404 	mvn.w	r4, r4
  402834:	3c1f      	subs	r4, #31
  402836:	da1c      	bge.n	402872 <__adddf3+0x1d2>
  402838:	340c      	adds	r4, #12
  40283a:	dc0e      	bgt.n	40285a <__adddf3+0x1ba>
  40283c:	f104 0414 	add.w	r4, r4, #20
  402840:	f1c4 0220 	rsb	r2, r4, #32
  402844:	fa20 f004 	lsr.w	r0, r0, r4
  402848:	fa01 f302 	lsl.w	r3, r1, r2
  40284c:	ea40 0003 	orr.w	r0, r0, r3
  402850:	fa21 f304 	lsr.w	r3, r1, r4
  402854:	ea45 0103 	orr.w	r1, r5, r3
  402858:	bd30      	pop	{r4, r5, pc}
  40285a:	f1c4 040c 	rsb	r4, r4, #12
  40285e:	f1c4 0220 	rsb	r2, r4, #32
  402862:	fa20 f002 	lsr.w	r0, r0, r2
  402866:	fa01 f304 	lsl.w	r3, r1, r4
  40286a:	ea40 0003 	orr.w	r0, r0, r3
  40286e:	4629      	mov	r1, r5
  402870:	bd30      	pop	{r4, r5, pc}
  402872:	fa21 f004 	lsr.w	r0, r1, r4
  402876:	4629      	mov	r1, r5
  402878:	bd30      	pop	{r4, r5, pc}
  40287a:	f094 0f00 	teq	r4, #0
  40287e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  402882:	bf06      	itte	eq
  402884:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  402888:	3401      	addeq	r4, #1
  40288a:	3d01      	subne	r5, #1
  40288c:	e74e      	b.n	40272c <__adddf3+0x8c>
  40288e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402892:	bf18      	it	ne
  402894:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402898:	d029      	beq.n	4028ee <__adddf3+0x24e>
  40289a:	ea94 0f05 	teq	r4, r5
  40289e:	bf08      	it	eq
  4028a0:	ea90 0f02 	teqeq	r0, r2
  4028a4:	d005      	beq.n	4028b2 <__adddf3+0x212>
  4028a6:	ea54 0c00 	orrs.w	ip, r4, r0
  4028aa:	bf04      	itt	eq
  4028ac:	4619      	moveq	r1, r3
  4028ae:	4610      	moveq	r0, r2
  4028b0:	bd30      	pop	{r4, r5, pc}
  4028b2:	ea91 0f03 	teq	r1, r3
  4028b6:	bf1e      	ittt	ne
  4028b8:	2100      	movne	r1, #0
  4028ba:	2000      	movne	r0, #0
  4028bc:	bd30      	popne	{r4, r5, pc}
  4028be:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4028c2:	d105      	bne.n	4028d0 <__adddf3+0x230>
  4028c4:	0040      	lsls	r0, r0, #1
  4028c6:	4149      	adcs	r1, r1
  4028c8:	bf28      	it	cs
  4028ca:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4028ce:	bd30      	pop	{r4, r5, pc}
  4028d0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4028d4:	bf3c      	itt	cc
  4028d6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4028da:	bd30      	popcc	{r4, r5, pc}
  4028dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4028e0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4028e4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4028e8:	f04f 0000 	mov.w	r0, #0
  4028ec:	bd30      	pop	{r4, r5, pc}
  4028ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4028f2:	bf1a      	itte	ne
  4028f4:	4619      	movne	r1, r3
  4028f6:	4610      	movne	r0, r2
  4028f8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4028fc:	bf1c      	itt	ne
  4028fe:	460b      	movne	r3, r1
  402900:	4602      	movne	r2, r0
  402902:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  402906:	bf06      	itte	eq
  402908:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40290c:	ea91 0f03 	teqeq	r1, r3
  402910:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  402914:	bd30      	pop	{r4, r5, pc}
  402916:	bf00      	nop

00402918 <__aeabi_ui2d>:
  402918:	f090 0f00 	teq	r0, #0
  40291c:	bf04      	itt	eq
  40291e:	2100      	moveq	r1, #0
  402920:	4770      	bxeq	lr
  402922:	b530      	push	{r4, r5, lr}
  402924:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402928:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40292c:	f04f 0500 	mov.w	r5, #0
  402930:	f04f 0100 	mov.w	r1, #0
  402934:	e750      	b.n	4027d8 <__adddf3+0x138>
  402936:	bf00      	nop

00402938 <__aeabi_i2d>:
  402938:	f090 0f00 	teq	r0, #0
  40293c:	bf04      	itt	eq
  40293e:	2100      	moveq	r1, #0
  402940:	4770      	bxeq	lr
  402942:	b530      	push	{r4, r5, lr}
  402944:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402948:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40294c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  402950:	bf48      	it	mi
  402952:	4240      	negmi	r0, r0
  402954:	f04f 0100 	mov.w	r1, #0
  402958:	e73e      	b.n	4027d8 <__adddf3+0x138>
  40295a:	bf00      	nop

0040295c <__aeabi_f2d>:
  40295c:	0042      	lsls	r2, r0, #1
  40295e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  402962:	ea4f 0131 	mov.w	r1, r1, rrx
  402966:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40296a:	bf1f      	itttt	ne
  40296c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  402970:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402974:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  402978:	4770      	bxne	lr
  40297a:	f092 0f00 	teq	r2, #0
  40297e:	bf14      	ite	ne
  402980:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402984:	4770      	bxeq	lr
  402986:	b530      	push	{r4, r5, lr}
  402988:	f44f 7460 	mov.w	r4, #896	; 0x380
  40298c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402990:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402994:	e720      	b.n	4027d8 <__adddf3+0x138>
  402996:	bf00      	nop

00402998 <__aeabi_ul2d>:
  402998:	ea50 0201 	orrs.w	r2, r0, r1
  40299c:	bf08      	it	eq
  40299e:	4770      	bxeq	lr
  4029a0:	b530      	push	{r4, r5, lr}
  4029a2:	f04f 0500 	mov.w	r5, #0
  4029a6:	e00a      	b.n	4029be <__aeabi_l2d+0x16>

004029a8 <__aeabi_l2d>:
  4029a8:	ea50 0201 	orrs.w	r2, r0, r1
  4029ac:	bf08      	it	eq
  4029ae:	4770      	bxeq	lr
  4029b0:	b530      	push	{r4, r5, lr}
  4029b2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4029b6:	d502      	bpl.n	4029be <__aeabi_l2d+0x16>
  4029b8:	4240      	negs	r0, r0
  4029ba:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4029be:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4029c2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4029c6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4029ca:	f43f aedc 	beq.w	402786 <__adddf3+0xe6>
  4029ce:	f04f 0203 	mov.w	r2, #3
  4029d2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4029d6:	bf18      	it	ne
  4029d8:	3203      	addne	r2, #3
  4029da:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4029de:	bf18      	it	ne
  4029e0:	3203      	addne	r2, #3
  4029e2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4029e6:	f1c2 0320 	rsb	r3, r2, #32
  4029ea:	fa00 fc03 	lsl.w	ip, r0, r3
  4029ee:	fa20 f002 	lsr.w	r0, r0, r2
  4029f2:	fa01 fe03 	lsl.w	lr, r1, r3
  4029f6:	ea40 000e 	orr.w	r0, r0, lr
  4029fa:	fa21 f102 	lsr.w	r1, r1, r2
  4029fe:	4414      	add	r4, r2
  402a00:	e6c1      	b.n	402786 <__adddf3+0xe6>
  402a02:	bf00      	nop

00402a04 <__aeabi_dmul>:
  402a04:	b570      	push	{r4, r5, r6, lr}
  402a06:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402a0a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402a0e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  402a12:	bf1d      	ittte	ne
  402a14:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402a18:	ea94 0f0c 	teqne	r4, ip
  402a1c:	ea95 0f0c 	teqne	r5, ip
  402a20:	f000 f8de 	bleq	402be0 <__aeabi_dmul+0x1dc>
  402a24:	442c      	add	r4, r5
  402a26:	ea81 0603 	eor.w	r6, r1, r3
  402a2a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  402a2e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  402a32:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  402a36:	bf18      	it	ne
  402a38:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  402a3c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402a40:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  402a44:	d038      	beq.n	402ab8 <__aeabi_dmul+0xb4>
  402a46:	fba0 ce02 	umull	ip, lr, r0, r2
  402a4a:	f04f 0500 	mov.w	r5, #0
  402a4e:	fbe1 e502 	umlal	lr, r5, r1, r2
  402a52:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  402a56:	fbe0 e503 	umlal	lr, r5, r0, r3
  402a5a:	f04f 0600 	mov.w	r6, #0
  402a5e:	fbe1 5603 	umlal	r5, r6, r1, r3
  402a62:	f09c 0f00 	teq	ip, #0
  402a66:	bf18      	it	ne
  402a68:	f04e 0e01 	orrne.w	lr, lr, #1
  402a6c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  402a70:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  402a74:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  402a78:	d204      	bcs.n	402a84 <__aeabi_dmul+0x80>
  402a7a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  402a7e:	416d      	adcs	r5, r5
  402a80:	eb46 0606 	adc.w	r6, r6, r6
  402a84:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  402a88:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  402a8c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  402a90:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  402a94:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  402a98:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402a9c:	bf88      	it	hi
  402a9e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402aa2:	d81e      	bhi.n	402ae2 <__aeabi_dmul+0xde>
  402aa4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  402aa8:	bf08      	it	eq
  402aaa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  402aae:	f150 0000 	adcs.w	r0, r0, #0
  402ab2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402ab6:	bd70      	pop	{r4, r5, r6, pc}
  402ab8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  402abc:	ea46 0101 	orr.w	r1, r6, r1
  402ac0:	ea40 0002 	orr.w	r0, r0, r2
  402ac4:	ea81 0103 	eor.w	r1, r1, r3
  402ac8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  402acc:	bfc2      	ittt	gt
  402ace:	ebd4 050c 	rsbsgt	r5, r4, ip
  402ad2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  402ad6:	bd70      	popgt	{r4, r5, r6, pc}
  402ad8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402adc:	f04f 0e00 	mov.w	lr, #0
  402ae0:	3c01      	subs	r4, #1
  402ae2:	f300 80ab 	bgt.w	402c3c <__aeabi_dmul+0x238>
  402ae6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  402aea:	bfde      	ittt	le
  402aec:	2000      	movle	r0, #0
  402aee:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  402af2:	bd70      	pople	{r4, r5, r6, pc}
  402af4:	f1c4 0400 	rsb	r4, r4, #0
  402af8:	3c20      	subs	r4, #32
  402afa:	da35      	bge.n	402b68 <__aeabi_dmul+0x164>
  402afc:	340c      	adds	r4, #12
  402afe:	dc1b      	bgt.n	402b38 <__aeabi_dmul+0x134>
  402b00:	f104 0414 	add.w	r4, r4, #20
  402b04:	f1c4 0520 	rsb	r5, r4, #32
  402b08:	fa00 f305 	lsl.w	r3, r0, r5
  402b0c:	fa20 f004 	lsr.w	r0, r0, r4
  402b10:	fa01 f205 	lsl.w	r2, r1, r5
  402b14:	ea40 0002 	orr.w	r0, r0, r2
  402b18:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  402b1c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402b20:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  402b24:	fa21 f604 	lsr.w	r6, r1, r4
  402b28:	eb42 0106 	adc.w	r1, r2, r6
  402b2c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402b30:	bf08      	it	eq
  402b32:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402b36:	bd70      	pop	{r4, r5, r6, pc}
  402b38:	f1c4 040c 	rsb	r4, r4, #12
  402b3c:	f1c4 0520 	rsb	r5, r4, #32
  402b40:	fa00 f304 	lsl.w	r3, r0, r4
  402b44:	fa20 f005 	lsr.w	r0, r0, r5
  402b48:	fa01 f204 	lsl.w	r2, r1, r4
  402b4c:	ea40 0002 	orr.w	r0, r0, r2
  402b50:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402b54:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  402b58:	f141 0100 	adc.w	r1, r1, #0
  402b5c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402b60:	bf08      	it	eq
  402b62:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402b66:	bd70      	pop	{r4, r5, r6, pc}
  402b68:	f1c4 0520 	rsb	r5, r4, #32
  402b6c:	fa00 f205 	lsl.w	r2, r0, r5
  402b70:	ea4e 0e02 	orr.w	lr, lr, r2
  402b74:	fa20 f304 	lsr.w	r3, r0, r4
  402b78:	fa01 f205 	lsl.w	r2, r1, r5
  402b7c:	ea43 0302 	orr.w	r3, r3, r2
  402b80:	fa21 f004 	lsr.w	r0, r1, r4
  402b84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402b88:	fa21 f204 	lsr.w	r2, r1, r4
  402b8c:	ea20 0002 	bic.w	r0, r0, r2
  402b90:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  402b94:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402b98:	bf08      	it	eq
  402b9a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402b9e:	bd70      	pop	{r4, r5, r6, pc}
  402ba0:	f094 0f00 	teq	r4, #0
  402ba4:	d10f      	bne.n	402bc6 <__aeabi_dmul+0x1c2>
  402ba6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  402baa:	0040      	lsls	r0, r0, #1
  402bac:	eb41 0101 	adc.w	r1, r1, r1
  402bb0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402bb4:	bf08      	it	eq
  402bb6:	3c01      	subeq	r4, #1
  402bb8:	d0f7      	beq.n	402baa <__aeabi_dmul+0x1a6>
  402bba:	ea41 0106 	orr.w	r1, r1, r6
  402bbe:	f095 0f00 	teq	r5, #0
  402bc2:	bf18      	it	ne
  402bc4:	4770      	bxne	lr
  402bc6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  402bca:	0052      	lsls	r2, r2, #1
  402bcc:	eb43 0303 	adc.w	r3, r3, r3
  402bd0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  402bd4:	bf08      	it	eq
  402bd6:	3d01      	subeq	r5, #1
  402bd8:	d0f7      	beq.n	402bca <__aeabi_dmul+0x1c6>
  402bda:	ea43 0306 	orr.w	r3, r3, r6
  402bde:	4770      	bx	lr
  402be0:	ea94 0f0c 	teq	r4, ip
  402be4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402be8:	bf18      	it	ne
  402bea:	ea95 0f0c 	teqne	r5, ip
  402bee:	d00c      	beq.n	402c0a <__aeabi_dmul+0x206>
  402bf0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402bf4:	bf18      	it	ne
  402bf6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402bfa:	d1d1      	bne.n	402ba0 <__aeabi_dmul+0x19c>
  402bfc:	ea81 0103 	eor.w	r1, r1, r3
  402c00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402c04:	f04f 0000 	mov.w	r0, #0
  402c08:	bd70      	pop	{r4, r5, r6, pc}
  402c0a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402c0e:	bf06      	itte	eq
  402c10:	4610      	moveq	r0, r2
  402c12:	4619      	moveq	r1, r3
  402c14:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402c18:	d019      	beq.n	402c4e <__aeabi_dmul+0x24a>
  402c1a:	ea94 0f0c 	teq	r4, ip
  402c1e:	d102      	bne.n	402c26 <__aeabi_dmul+0x222>
  402c20:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  402c24:	d113      	bne.n	402c4e <__aeabi_dmul+0x24a>
  402c26:	ea95 0f0c 	teq	r5, ip
  402c2a:	d105      	bne.n	402c38 <__aeabi_dmul+0x234>
  402c2c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  402c30:	bf1c      	itt	ne
  402c32:	4610      	movne	r0, r2
  402c34:	4619      	movne	r1, r3
  402c36:	d10a      	bne.n	402c4e <__aeabi_dmul+0x24a>
  402c38:	ea81 0103 	eor.w	r1, r1, r3
  402c3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402c40:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402c44:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402c48:	f04f 0000 	mov.w	r0, #0
  402c4c:	bd70      	pop	{r4, r5, r6, pc}
  402c4e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402c52:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  402c56:	bd70      	pop	{r4, r5, r6, pc}

00402c58 <__aeabi_ddiv>:
  402c58:	b570      	push	{r4, r5, r6, lr}
  402c5a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402c5e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402c62:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  402c66:	bf1d      	ittte	ne
  402c68:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402c6c:	ea94 0f0c 	teqne	r4, ip
  402c70:	ea95 0f0c 	teqne	r5, ip
  402c74:	f000 f8a7 	bleq	402dc6 <__aeabi_ddiv+0x16e>
  402c78:	eba4 0405 	sub.w	r4, r4, r5
  402c7c:	ea81 0e03 	eor.w	lr, r1, r3
  402c80:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402c84:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402c88:	f000 8088 	beq.w	402d9c <__aeabi_ddiv+0x144>
  402c8c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402c90:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  402c94:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  402c98:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  402c9c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  402ca0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  402ca4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  402ca8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  402cac:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  402cb0:	429d      	cmp	r5, r3
  402cb2:	bf08      	it	eq
  402cb4:	4296      	cmpeq	r6, r2
  402cb6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  402cba:	f504 7440 	add.w	r4, r4, #768	; 0x300
  402cbe:	d202      	bcs.n	402cc6 <__aeabi_ddiv+0x6e>
  402cc0:	085b      	lsrs	r3, r3, #1
  402cc2:	ea4f 0232 	mov.w	r2, r2, rrx
  402cc6:	1ab6      	subs	r6, r6, r2
  402cc8:	eb65 0503 	sbc.w	r5, r5, r3
  402ccc:	085b      	lsrs	r3, r3, #1
  402cce:	ea4f 0232 	mov.w	r2, r2, rrx
  402cd2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  402cd6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  402cda:	ebb6 0e02 	subs.w	lr, r6, r2
  402cde:	eb75 0e03 	sbcs.w	lr, r5, r3
  402ce2:	bf22      	ittt	cs
  402ce4:	1ab6      	subcs	r6, r6, r2
  402ce6:	4675      	movcs	r5, lr
  402ce8:	ea40 000c 	orrcs.w	r0, r0, ip
  402cec:	085b      	lsrs	r3, r3, #1
  402cee:	ea4f 0232 	mov.w	r2, r2, rrx
  402cf2:	ebb6 0e02 	subs.w	lr, r6, r2
  402cf6:	eb75 0e03 	sbcs.w	lr, r5, r3
  402cfa:	bf22      	ittt	cs
  402cfc:	1ab6      	subcs	r6, r6, r2
  402cfe:	4675      	movcs	r5, lr
  402d00:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402d04:	085b      	lsrs	r3, r3, #1
  402d06:	ea4f 0232 	mov.w	r2, r2, rrx
  402d0a:	ebb6 0e02 	subs.w	lr, r6, r2
  402d0e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402d12:	bf22      	ittt	cs
  402d14:	1ab6      	subcs	r6, r6, r2
  402d16:	4675      	movcs	r5, lr
  402d18:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402d1c:	085b      	lsrs	r3, r3, #1
  402d1e:	ea4f 0232 	mov.w	r2, r2, rrx
  402d22:	ebb6 0e02 	subs.w	lr, r6, r2
  402d26:	eb75 0e03 	sbcs.w	lr, r5, r3
  402d2a:	bf22      	ittt	cs
  402d2c:	1ab6      	subcs	r6, r6, r2
  402d2e:	4675      	movcs	r5, lr
  402d30:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402d34:	ea55 0e06 	orrs.w	lr, r5, r6
  402d38:	d018      	beq.n	402d6c <__aeabi_ddiv+0x114>
  402d3a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  402d3e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  402d42:	ea4f 1606 	mov.w	r6, r6, lsl #4
  402d46:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  402d4a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  402d4e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  402d52:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  402d56:	d1c0      	bne.n	402cda <__aeabi_ddiv+0x82>
  402d58:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402d5c:	d10b      	bne.n	402d76 <__aeabi_ddiv+0x11e>
  402d5e:	ea41 0100 	orr.w	r1, r1, r0
  402d62:	f04f 0000 	mov.w	r0, #0
  402d66:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  402d6a:	e7b6      	b.n	402cda <__aeabi_ddiv+0x82>
  402d6c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402d70:	bf04      	itt	eq
  402d72:	4301      	orreq	r1, r0
  402d74:	2000      	moveq	r0, #0
  402d76:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402d7a:	bf88      	it	hi
  402d7c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402d80:	f63f aeaf 	bhi.w	402ae2 <__aeabi_dmul+0xde>
  402d84:	ebb5 0c03 	subs.w	ip, r5, r3
  402d88:	bf04      	itt	eq
  402d8a:	ebb6 0c02 	subseq.w	ip, r6, r2
  402d8e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  402d92:	f150 0000 	adcs.w	r0, r0, #0
  402d96:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402d9a:	bd70      	pop	{r4, r5, r6, pc}
  402d9c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  402da0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  402da4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  402da8:	bfc2      	ittt	gt
  402daa:	ebd4 050c 	rsbsgt	r5, r4, ip
  402dae:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  402db2:	bd70      	popgt	{r4, r5, r6, pc}
  402db4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402db8:	f04f 0e00 	mov.w	lr, #0
  402dbc:	3c01      	subs	r4, #1
  402dbe:	e690      	b.n	402ae2 <__aeabi_dmul+0xde>
  402dc0:	ea45 0e06 	orr.w	lr, r5, r6
  402dc4:	e68d      	b.n	402ae2 <__aeabi_dmul+0xde>
  402dc6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402dca:	ea94 0f0c 	teq	r4, ip
  402dce:	bf08      	it	eq
  402dd0:	ea95 0f0c 	teqeq	r5, ip
  402dd4:	f43f af3b 	beq.w	402c4e <__aeabi_dmul+0x24a>
  402dd8:	ea94 0f0c 	teq	r4, ip
  402ddc:	d10a      	bne.n	402df4 <__aeabi_ddiv+0x19c>
  402dde:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  402de2:	f47f af34 	bne.w	402c4e <__aeabi_dmul+0x24a>
  402de6:	ea95 0f0c 	teq	r5, ip
  402dea:	f47f af25 	bne.w	402c38 <__aeabi_dmul+0x234>
  402dee:	4610      	mov	r0, r2
  402df0:	4619      	mov	r1, r3
  402df2:	e72c      	b.n	402c4e <__aeabi_dmul+0x24a>
  402df4:	ea95 0f0c 	teq	r5, ip
  402df8:	d106      	bne.n	402e08 <__aeabi_ddiv+0x1b0>
  402dfa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402dfe:	f43f aefd 	beq.w	402bfc <__aeabi_dmul+0x1f8>
  402e02:	4610      	mov	r0, r2
  402e04:	4619      	mov	r1, r3
  402e06:	e722      	b.n	402c4e <__aeabi_dmul+0x24a>
  402e08:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402e0c:	bf18      	it	ne
  402e0e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402e12:	f47f aec5 	bne.w	402ba0 <__aeabi_dmul+0x19c>
  402e16:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  402e1a:	f47f af0d 	bne.w	402c38 <__aeabi_dmul+0x234>
  402e1e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  402e22:	f47f aeeb 	bne.w	402bfc <__aeabi_dmul+0x1f8>
  402e26:	e712      	b.n	402c4e <__aeabi_dmul+0x24a>

00402e28 <__gedf2>:
  402e28:	f04f 3cff 	mov.w	ip, #4294967295
  402e2c:	e006      	b.n	402e3c <__cmpdf2+0x4>
  402e2e:	bf00      	nop

00402e30 <__ledf2>:
  402e30:	f04f 0c01 	mov.w	ip, #1
  402e34:	e002      	b.n	402e3c <__cmpdf2+0x4>
  402e36:	bf00      	nop

00402e38 <__cmpdf2>:
  402e38:	f04f 0c01 	mov.w	ip, #1
  402e3c:	f84d cd04 	str.w	ip, [sp, #-4]!
  402e40:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  402e44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  402e48:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  402e4c:	bf18      	it	ne
  402e4e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  402e52:	d01b      	beq.n	402e8c <__cmpdf2+0x54>
  402e54:	b001      	add	sp, #4
  402e56:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  402e5a:	bf0c      	ite	eq
  402e5c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  402e60:	ea91 0f03 	teqne	r1, r3
  402e64:	bf02      	ittt	eq
  402e66:	ea90 0f02 	teqeq	r0, r2
  402e6a:	2000      	moveq	r0, #0
  402e6c:	4770      	bxeq	lr
  402e6e:	f110 0f00 	cmn.w	r0, #0
  402e72:	ea91 0f03 	teq	r1, r3
  402e76:	bf58      	it	pl
  402e78:	4299      	cmppl	r1, r3
  402e7a:	bf08      	it	eq
  402e7c:	4290      	cmpeq	r0, r2
  402e7e:	bf2c      	ite	cs
  402e80:	17d8      	asrcs	r0, r3, #31
  402e82:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  402e86:	f040 0001 	orr.w	r0, r0, #1
  402e8a:	4770      	bx	lr
  402e8c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  402e90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  402e94:	d102      	bne.n	402e9c <__cmpdf2+0x64>
  402e96:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  402e9a:	d107      	bne.n	402eac <__cmpdf2+0x74>
  402e9c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  402ea0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  402ea4:	d1d6      	bne.n	402e54 <__cmpdf2+0x1c>
  402ea6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  402eaa:	d0d3      	beq.n	402e54 <__cmpdf2+0x1c>
  402eac:	f85d 0b04 	ldr.w	r0, [sp], #4
  402eb0:	4770      	bx	lr
  402eb2:	bf00      	nop

00402eb4 <__aeabi_cdrcmple>:
  402eb4:	4684      	mov	ip, r0
  402eb6:	4610      	mov	r0, r2
  402eb8:	4662      	mov	r2, ip
  402eba:	468c      	mov	ip, r1
  402ebc:	4619      	mov	r1, r3
  402ebe:	4663      	mov	r3, ip
  402ec0:	e000      	b.n	402ec4 <__aeabi_cdcmpeq>
  402ec2:	bf00      	nop

00402ec4 <__aeabi_cdcmpeq>:
  402ec4:	b501      	push	{r0, lr}
  402ec6:	f7ff ffb7 	bl	402e38 <__cmpdf2>
  402eca:	2800      	cmp	r0, #0
  402ecc:	bf48      	it	mi
  402ece:	f110 0f00 	cmnmi.w	r0, #0
  402ed2:	bd01      	pop	{r0, pc}

00402ed4 <__aeabi_dcmpeq>:
  402ed4:	f84d ed08 	str.w	lr, [sp, #-8]!
  402ed8:	f7ff fff4 	bl	402ec4 <__aeabi_cdcmpeq>
  402edc:	bf0c      	ite	eq
  402ede:	2001      	moveq	r0, #1
  402ee0:	2000      	movne	r0, #0
  402ee2:	f85d fb08 	ldr.w	pc, [sp], #8
  402ee6:	bf00      	nop

00402ee8 <__aeabi_dcmplt>:
  402ee8:	f84d ed08 	str.w	lr, [sp, #-8]!
  402eec:	f7ff ffea 	bl	402ec4 <__aeabi_cdcmpeq>
  402ef0:	bf34      	ite	cc
  402ef2:	2001      	movcc	r0, #1
  402ef4:	2000      	movcs	r0, #0
  402ef6:	f85d fb08 	ldr.w	pc, [sp], #8
  402efa:	bf00      	nop

00402efc <__aeabi_dcmple>:
  402efc:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f00:	f7ff ffe0 	bl	402ec4 <__aeabi_cdcmpeq>
  402f04:	bf94      	ite	ls
  402f06:	2001      	movls	r0, #1
  402f08:	2000      	movhi	r0, #0
  402f0a:	f85d fb08 	ldr.w	pc, [sp], #8
  402f0e:	bf00      	nop

00402f10 <__aeabi_dcmpge>:
  402f10:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f14:	f7ff ffce 	bl	402eb4 <__aeabi_cdrcmple>
  402f18:	bf94      	ite	ls
  402f1a:	2001      	movls	r0, #1
  402f1c:	2000      	movhi	r0, #0
  402f1e:	f85d fb08 	ldr.w	pc, [sp], #8
  402f22:	bf00      	nop

00402f24 <__aeabi_dcmpgt>:
  402f24:	f84d ed08 	str.w	lr, [sp, #-8]!
  402f28:	f7ff ffc4 	bl	402eb4 <__aeabi_cdrcmple>
  402f2c:	bf34      	ite	cc
  402f2e:	2001      	movcc	r0, #1
  402f30:	2000      	movcs	r0, #0
  402f32:	f85d fb08 	ldr.w	pc, [sp], #8
  402f36:	bf00      	nop

00402f38 <__aeabi_dcmpun>:
  402f38:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  402f3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  402f40:	d102      	bne.n	402f48 <__aeabi_dcmpun+0x10>
  402f42:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  402f46:	d10a      	bne.n	402f5e <__aeabi_dcmpun+0x26>
  402f48:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  402f4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  402f50:	d102      	bne.n	402f58 <__aeabi_dcmpun+0x20>
  402f52:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  402f56:	d102      	bne.n	402f5e <__aeabi_dcmpun+0x26>
  402f58:	f04f 0000 	mov.w	r0, #0
  402f5c:	4770      	bx	lr
  402f5e:	f04f 0001 	mov.w	r0, #1
  402f62:	4770      	bx	lr

00402f64 <__aeabi_d2f>:
  402f64:	ea4f 0241 	mov.w	r2, r1, lsl #1
  402f68:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  402f6c:	bf24      	itt	cs
  402f6e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  402f72:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  402f76:	d90d      	bls.n	402f94 <__aeabi_d2f+0x30>
  402f78:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  402f7c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  402f80:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  402f84:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  402f88:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  402f8c:	bf08      	it	eq
  402f8e:	f020 0001 	biceq.w	r0, r0, #1
  402f92:	4770      	bx	lr
  402f94:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  402f98:	d121      	bne.n	402fde <__aeabi_d2f+0x7a>
  402f9a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  402f9e:	bfbc      	itt	lt
  402fa0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  402fa4:	4770      	bxlt	lr
  402fa6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402faa:	ea4f 5252 	mov.w	r2, r2, lsr #21
  402fae:	f1c2 0218 	rsb	r2, r2, #24
  402fb2:	f1c2 0c20 	rsb	ip, r2, #32
  402fb6:	fa10 f30c 	lsls.w	r3, r0, ip
  402fba:	fa20 f002 	lsr.w	r0, r0, r2
  402fbe:	bf18      	it	ne
  402fc0:	f040 0001 	orrne.w	r0, r0, #1
  402fc4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  402fc8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  402fcc:	fa03 fc0c 	lsl.w	ip, r3, ip
  402fd0:	ea40 000c 	orr.w	r0, r0, ip
  402fd4:	fa23 f302 	lsr.w	r3, r3, r2
  402fd8:	ea4f 0343 	mov.w	r3, r3, lsl #1
  402fdc:	e7cc      	b.n	402f78 <__aeabi_d2f+0x14>
  402fde:	ea7f 5362 	mvns.w	r3, r2, asr #21
  402fe2:	d107      	bne.n	402ff4 <__aeabi_d2f+0x90>
  402fe4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  402fe8:	bf1e      	ittt	ne
  402fea:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  402fee:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  402ff2:	4770      	bxne	lr
  402ff4:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  402ff8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  402ffc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403000:	4770      	bx	lr
  403002:	bf00      	nop

00403004 <__errno>:
  403004:	4b01      	ldr	r3, [pc, #4]	; (40300c <__errno+0x8>)
  403006:	6818      	ldr	r0, [r3, #0]
  403008:	4770      	bx	lr
  40300a:	bf00      	nop
  40300c:	2000000c 	.word	0x2000000c

00403010 <__libc_init_array>:
  403010:	b570      	push	{r4, r5, r6, lr}
  403012:	4e0f      	ldr	r6, [pc, #60]	; (403050 <__libc_init_array+0x40>)
  403014:	4d0f      	ldr	r5, [pc, #60]	; (403054 <__libc_init_array+0x44>)
  403016:	1b76      	subs	r6, r6, r5
  403018:	10b6      	asrs	r6, r6, #2
  40301a:	bf18      	it	ne
  40301c:	2400      	movne	r4, #0
  40301e:	d005      	beq.n	40302c <__libc_init_array+0x1c>
  403020:	3401      	adds	r4, #1
  403022:	f855 3b04 	ldr.w	r3, [r5], #4
  403026:	4798      	blx	r3
  403028:	42a6      	cmp	r6, r4
  40302a:	d1f9      	bne.n	403020 <__libc_init_array+0x10>
  40302c:	4e0a      	ldr	r6, [pc, #40]	; (403058 <__libc_init_array+0x48>)
  40302e:	4d0b      	ldr	r5, [pc, #44]	; (40305c <__libc_init_array+0x4c>)
  403030:	1b76      	subs	r6, r6, r5
  403032:	f003 f94f 	bl	4062d4 <_init>
  403036:	10b6      	asrs	r6, r6, #2
  403038:	bf18      	it	ne
  40303a:	2400      	movne	r4, #0
  40303c:	d006      	beq.n	40304c <__libc_init_array+0x3c>
  40303e:	3401      	adds	r4, #1
  403040:	f855 3b04 	ldr.w	r3, [r5], #4
  403044:	4798      	blx	r3
  403046:	42a6      	cmp	r6, r4
  403048:	d1f9      	bne.n	40303e <__libc_init_array+0x2e>
  40304a:	bd70      	pop	{r4, r5, r6, pc}
  40304c:	bd70      	pop	{r4, r5, r6, pc}
  40304e:	bf00      	nop
  403050:	004062e0 	.word	0x004062e0
  403054:	004062e0 	.word	0x004062e0
  403058:	004062e8 	.word	0x004062e8
  40305c:	004062e0 	.word	0x004062e0

00403060 <iprintf>:
  403060:	b40f      	push	{r0, r1, r2, r3}
  403062:	b500      	push	{lr}
  403064:	4907      	ldr	r1, [pc, #28]	; (403084 <iprintf+0x24>)
  403066:	b083      	sub	sp, #12
  403068:	ab04      	add	r3, sp, #16
  40306a:	6808      	ldr	r0, [r1, #0]
  40306c:	f853 2b04 	ldr.w	r2, [r3], #4
  403070:	6881      	ldr	r1, [r0, #8]
  403072:	9301      	str	r3, [sp, #4]
  403074:	f000 f966 	bl	403344 <_vfiprintf_r>
  403078:	b003      	add	sp, #12
  40307a:	f85d eb04 	ldr.w	lr, [sp], #4
  40307e:	b004      	add	sp, #16
  403080:	4770      	bx	lr
  403082:	bf00      	nop
  403084:	2000000c 	.word	0x2000000c

00403088 <memset>:
  403088:	b470      	push	{r4, r5, r6}
  40308a:	0786      	lsls	r6, r0, #30
  40308c:	d046      	beq.n	40311c <memset+0x94>
  40308e:	1e54      	subs	r4, r2, #1
  403090:	2a00      	cmp	r2, #0
  403092:	d041      	beq.n	403118 <memset+0x90>
  403094:	b2ca      	uxtb	r2, r1
  403096:	4603      	mov	r3, r0
  403098:	e002      	b.n	4030a0 <memset+0x18>
  40309a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40309e:	d33b      	bcc.n	403118 <memset+0x90>
  4030a0:	f803 2b01 	strb.w	r2, [r3], #1
  4030a4:	079d      	lsls	r5, r3, #30
  4030a6:	d1f8      	bne.n	40309a <memset+0x12>
  4030a8:	2c03      	cmp	r4, #3
  4030aa:	d92e      	bls.n	40310a <memset+0x82>
  4030ac:	b2cd      	uxtb	r5, r1
  4030ae:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4030b2:	2c0f      	cmp	r4, #15
  4030b4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4030b8:	d919      	bls.n	4030ee <memset+0x66>
  4030ba:	f103 0210 	add.w	r2, r3, #16
  4030be:	4626      	mov	r6, r4
  4030c0:	3e10      	subs	r6, #16
  4030c2:	2e0f      	cmp	r6, #15
  4030c4:	f842 5c10 	str.w	r5, [r2, #-16]
  4030c8:	f842 5c0c 	str.w	r5, [r2, #-12]
  4030cc:	f842 5c08 	str.w	r5, [r2, #-8]
  4030d0:	f842 5c04 	str.w	r5, [r2, #-4]
  4030d4:	f102 0210 	add.w	r2, r2, #16
  4030d8:	d8f2      	bhi.n	4030c0 <memset+0x38>
  4030da:	f1a4 0210 	sub.w	r2, r4, #16
  4030de:	f022 020f 	bic.w	r2, r2, #15
  4030e2:	f004 040f 	and.w	r4, r4, #15
  4030e6:	3210      	adds	r2, #16
  4030e8:	2c03      	cmp	r4, #3
  4030ea:	4413      	add	r3, r2
  4030ec:	d90d      	bls.n	40310a <memset+0x82>
  4030ee:	461e      	mov	r6, r3
  4030f0:	4622      	mov	r2, r4
  4030f2:	3a04      	subs	r2, #4
  4030f4:	2a03      	cmp	r2, #3
  4030f6:	f846 5b04 	str.w	r5, [r6], #4
  4030fa:	d8fa      	bhi.n	4030f2 <memset+0x6a>
  4030fc:	1f22      	subs	r2, r4, #4
  4030fe:	f022 0203 	bic.w	r2, r2, #3
  403102:	3204      	adds	r2, #4
  403104:	4413      	add	r3, r2
  403106:	f004 0403 	and.w	r4, r4, #3
  40310a:	b12c      	cbz	r4, 403118 <memset+0x90>
  40310c:	b2c9      	uxtb	r1, r1
  40310e:	441c      	add	r4, r3
  403110:	f803 1b01 	strb.w	r1, [r3], #1
  403114:	429c      	cmp	r4, r3
  403116:	d1fb      	bne.n	403110 <memset+0x88>
  403118:	bc70      	pop	{r4, r5, r6}
  40311a:	4770      	bx	lr
  40311c:	4614      	mov	r4, r2
  40311e:	4603      	mov	r3, r0
  403120:	e7c2      	b.n	4030a8 <memset+0x20>
  403122:	bf00      	nop

00403124 <setbuf>:
  403124:	2900      	cmp	r1, #0
  403126:	bf0c      	ite	eq
  403128:	2202      	moveq	r2, #2
  40312a:	2200      	movne	r2, #0
  40312c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403130:	f000 b800 	b.w	403134 <setvbuf>

00403134 <setvbuf>:
  403134:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  403138:	4c61      	ldr	r4, [pc, #388]	; (4032c0 <setvbuf+0x18c>)
  40313a:	6825      	ldr	r5, [r4, #0]
  40313c:	b083      	sub	sp, #12
  40313e:	4604      	mov	r4, r0
  403140:	460f      	mov	r7, r1
  403142:	4690      	mov	r8, r2
  403144:	461e      	mov	r6, r3
  403146:	b115      	cbz	r5, 40314e <setvbuf+0x1a>
  403148:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40314a:	2b00      	cmp	r3, #0
  40314c:	d064      	beq.n	403218 <setvbuf+0xe4>
  40314e:	f1b8 0f02 	cmp.w	r8, #2
  403152:	d006      	beq.n	403162 <setvbuf+0x2e>
  403154:	f1b8 0f01 	cmp.w	r8, #1
  403158:	f200 809f 	bhi.w	40329a <setvbuf+0x166>
  40315c:	2e00      	cmp	r6, #0
  40315e:	f2c0 809c 	blt.w	40329a <setvbuf+0x166>
  403162:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403164:	07d8      	lsls	r0, r3, #31
  403166:	d534      	bpl.n	4031d2 <setvbuf+0x9e>
  403168:	4621      	mov	r1, r4
  40316a:	4628      	mov	r0, r5
  40316c:	f001 f888 	bl	404280 <_fflush_r>
  403170:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403172:	b141      	cbz	r1, 403186 <setvbuf+0x52>
  403174:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403178:	4299      	cmp	r1, r3
  40317a:	d002      	beq.n	403182 <setvbuf+0x4e>
  40317c:	4628      	mov	r0, r5
  40317e:	f001 f9fd 	bl	40457c <_free_r>
  403182:	2300      	movs	r3, #0
  403184:	6323      	str	r3, [r4, #48]	; 0x30
  403186:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40318a:	2200      	movs	r2, #0
  40318c:	61a2      	str	r2, [r4, #24]
  40318e:	6062      	str	r2, [r4, #4]
  403190:	061a      	lsls	r2, r3, #24
  403192:	d43a      	bmi.n	40320a <setvbuf+0xd6>
  403194:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  403198:	f023 0303 	bic.w	r3, r3, #3
  40319c:	f1b8 0f02 	cmp.w	r8, #2
  4031a0:	81a3      	strh	r3, [r4, #12]
  4031a2:	d01d      	beq.n	4031e0 <setvbuf+0xac>
  4031a4:	ab01      	add	r3, sp, #4
  4031a6:	466a      	mov	r2, sp
  4031a8:	4621      	mov	r1, r4
  4031aa:	4628      	mov	r0, r5
  4031ac:	f001 fc84 	bl	404ab8 <__swhatbuf_r>
  4031b0:	89a3      	ldrh	r3, [r4, #12]
  4031b2:	4318      	orrs	r0, r3
  4031b4:	81a0      	strh	r0, [r4, #12]
  4031b6:	2e00      	cmp	r6, #0
  4031b8:	d132      	bne.n	403220 <setvbuf+0xec>
  4031ba:	9e00      	ldr	r6, [sp, #0]
  4031bc:	4630      	mov	r0, r6
  4031be:	f001 fcf3 	bl	404ba8 <malloc>
  4031c2:	4607      	mov	r7, r0
  4031c4:	2800      	cmp	r0, #0
  4031c6:	d06b      	beq.n	4032a0 <setvbuf+0x16c>
  4031c8:	89a3      	ldrh	r3, [r4, #12]
  4031ca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4031ce:	81a3      	strh	r3, [r4, #12]
  4031d0:	e028      	b.n	403224 <setvbuf+0xf0>
  4031d2:	89a3      	ldrh	r3, [r4, #12]
  4031d4:	0599      	lsls	r1, r3, #22
  4031d6:	d4c7      	bmi.n	403168 <setvbuf+0x34>
  4031d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4031da:	f001 fc69 	bl	404ab0 <__retarget_lock_acquire_recursive>
  4031de:	e7c3      	b.n	403168 <setvbuf+0x34>
  4031e0:	2500      	movs	r5, #0
  4031e2:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4031e4:	2600      	movs	r6, #0
  4031e6:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4031ea:	f043 0302 	orr.w	r3, r3, #2
  4031ee:	2001      	movs	r0, #1
  4031f0:	60a6      	str	r6, [r4, #8]
  4031f2:	07ce      	lsls	r6, r1, #31
  4031f4:	81a3      	strh	r3, [r4, #12]
  4031f6:	6022      	str	r2, [r4, #0]
  4031f8:	6122      	str	r2, [r4, #16]
  4031fa:	6160      	str	r0, [r4, #20]
  4031fc:	d401      	bmi.n	403202 <setvbuf+0xce>
  4031fe:	0598      	lsls	r0, r3, #22
  403200:	d53e      	bpl.n	403280 <setvbuf+0x14c>
  403202:	4628      	mov	r0, r5
  403204:	b003      	add	sp, #12
  403206:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40320a:	6921      	ldr	r1, [r4, #16]
  40320c:	4628      	mov	r0, r5
  40320e:	f001 f9b5 	bl	40457c <_free_r>
  403212:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403216:	e7bd      	b.n	403194 <setvbuf+0x60>
  403218:	4628      	mov	r0, r5
  40321a:	f001 f889 	bl	404330 <__sinit>
  40321e:	e796      	b.n	40314e <setvbuf+0x1a>
  403220:	2f00      	cmp	r7, #0
  403222:	d0cb      	beq.n	4031bc <setvbuf+0x88>
  403224:	6bab      	ldr	r3, [r5, #56]	; 0x38
  403226:	2b00      	cmp	r3, #0
  403228:	d033      	beq.n	403292 <setvbuf+0x15e>
  40322a:	9b00      	ldr	r3, [sp, #0]
  40322c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403230:	6027      	str	r7, [r4, #0]
  403232:	429e      	cmp	r6, r3
  403234:	bf1c      	itt	ne
  403236:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40323a:	81a2      	strhne	r2, [r4, #12]
  40323c:	f1b8 0f01 	cmp.w	r8, #1
  403240:	bf04      	itt	eq
  403242:	f042 0201 	orreq.w	r2, r2, #1
  403246:	81a2      	strheq	r2, [r4, #12]
  403248:	b292      	uxth	r2, r2
  40324a:	f012 0308 	ands.w	r3, r2, #8
  40324e:	6127      	str	r7, [r4, #16]
  403250:	6166      	str	r6, [r4, #20]
  403252:	d00e      	beq.n	403272 <setvbuf+0x13e>
  403254:	07d1      	lsls	r1, r2, #31
  403256:	d51a      	bpl.n	40328e <setvbuf+0x15a>
  403258:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40325a:	4276      	negs	r6, r6
  40325c:	2300      	movs	r3, #0
  40325e:	f015 0501 	ands.w	r5, r5, #1
  403262:	61a6      	str	r6, [r4, #24]
  403264:	60a3      	str	r3, [r4, #8]
  403266:	d009      	beq.n	40327c <setvbuf+0x148>
  403268:	2500      	movs	r5, #0
  40326a:	4628      	mov	r0, r5
  40326c:	b003      	add	sp, #12
  40326e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403272:	60a3      	str	r3, [r4, #8]
  403274:	6e65      	ldr	r5, [r4, #100]	; 0x64
  403276:	f015 0501 	ands.w	r5, r5, #1
  40327a:	d1f5      	bne.n	403268 <setvbuf+0x134>
  40327c:	0593      	lsls	r3, r2, #22
  40327e:	d4c0      	bmi.n	403202 <setvbuf+0xce>
  403280:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403282:	f001 fc17 	bl	404ab4 <__retarget_lock_release_recursive>
  403286:	4628      	mov	r0, r5
  403288:	b003      	add	sp, #12
  40328a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40328e:	60a6      	str	r6, [r4, #8]
  403290:	e7f0      	b.n	403274 <setvbuf+0x140>
  403292:	4628      	mov	r0, r5
  403294:	f001 f84c 	bl	404330 <__sinit>
  403298:	e7c7      	b.n	40322a <setvbuf+0xf6>
  40329a:	f04f 35ff 	mov.w	r5, #4294967295
  40329e:	e7b0      	b.n	403202 <setvbuf+0xce>
  4032a0:	f8dd 9000 	ldr.w	r9, [sp]
  4032a4:	45b1      	cmp	r9, r6
  4032a6:	d004      	beq.n	4032b2 <setvbuf+0x17e>
  4032a8:	4648      	mov	r0, r9
  4032aa:	f001 fc7d 	bl	404ba8 <malloc>
  4032ae:	4607      	mov	r7, r0
  4032b0:	b920      	cbnz	r0, 4032bc <setvbuf+0x188>
  4032b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4032b6:	f04f 35ff 	mov.w	r5, #4294967295
  4032ba:	e792      	b.n	4031e2 <setvbuf+0xae>
  4032bc:	464e      	mov	r6, r9
  4032be:	e783      	b.n	4031c8 <setvbuf+0x94>
  4032c0:	2000000c 	.word	0x2000000c

004032c4 <__sprint_r.part.0>:
  4032c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4032c8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4032ca:	049c      	lsls	r4, r3, #18
  4032cc:	4693      	mov	fp, r2
  4032ce:	d52f      	bpl.n	403330 <__sprint_r.part.0+0x6c>
  4032d0:	6893      	ldr	r3, [r2, #8]
  4032d2:	6812      	ldr	r2, [r2, #0]
  4032d4:	b353      	cbz	r3, 40332c <__sprint_r.part.0+0x68>
  4032d6:	460e      	mov	r6, r1
  4032d8:	4607      	mov	r7, r0
  4032da:	f102 0908 	add.w	r9, r2, #8
  4032de:	e919 0420 	ldmdb	r9, {r5, sl}
  4032e2:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4032e6:	d017      	beq.n	403318 <__sprint_r.part.0+0x54>
  4032e8:	3d04      	subs	r5, #4
  4032ea:	2400      	movs	r4, #0
  4032ec:	e001      	b.n	4032f2 <__sprint_r.part.0+0x2e>
  4032ee:	45a0      	cmp	r8, r4
  4032f0:	d010      	beq.n	403314 <__sprint_r.part.0+0x50>
  4032f2:	4632      	mov	r2, r6
  4032f4:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4032f8:	4638      	mov	r0, r7
  4032fa:	f001 f8bb 	bl	404474 <_fputwc_r>
  4032fe:	1c43      	adds	r3, r0, #1
  403300:	f104 0401 	add.w	r4, r4, #1
  403304:	d1f3      	bne.n	4032ee <__sprint_r.part.0+0x2a>
  403306:	2300      	movs	r3, #0
  403308:	f8cb 3008 	str.w	r3, [fp, #8]
  40330c:	f8cb 3004 	str.w	r3, [fp, #4]
  403310:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403314:	f8db 3008 	ldr.w	r3, [fp, #8]
  403318:	f02a 0a03 	bic.w	sl, sl, #3
  40331c:	eba3 030a 	sub.w	r3, r3, sl
  403320:	f8cb 3008 	str.w	r3, [fp, #8]
  403324:	f109 0908 	add.w	r9, r9, #8
  403328:	2b00      	cmp	r3, #0
  40332a:	d1d8      	bne.n	4032de <__sprint_r.part.0+0x1a>
  40332c:	2000      	movs	r0, #0
  40332e:	e7ea      	b.n	403306 <__sprint_r.part.0+0x42>
  403330:	f001 fa0a 	bl	404748 <__sfvwrite_r>
  403334:	2300      	movs	r3, #0
  403336:	f8cb 3008 	str.w	r3, [fp, #8]
  40333a:	f8cb 3004 	str.w	r3, [fp, #4]
  40333e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403342:	bf00      	nop

00403344 <_vfiprintf_r>:
  403344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403348:	b0ad      	sub	sp, #180	; 0xb4
  40334a:	461d      	mov	r5, r3
  40334c:	468b      	mov	fp, r1
  40334e:	4690      	mov	r8, r2
  403350:	9307      	str	r3, [sp, #28]
  403352:	9006      	str	r0, [sp, #24]
  403354:	b118      	cbz	r0, 40335e <_vfiprintf_r+0x1a>
  403356:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403358:	2b00      	cmp	r3, #0
  40335a:	f000 80f3 	beq.w	403544 <_vfiprintf_r+0x200>
  40335e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403362:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  403366:	07df      	lsls	r7, r3, #31
  403368:	b281      	uxth	r1, r0
  40336a:	d402      	bmi.n	403372 <_vfiprintf_r+0x2e>
  40336c:	058e      	lsls	r6, r1, #22
  40336e:	f140 80fc 	bpl.w	40356a <_vfiprintf_r+0x226>
  403372:	048c      	lsls	r4, r1, #18
  403374:	d40a      	bmi.n	40338c <_vfiprintf_r+0x48>
  403376:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40337a:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  40337e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  403382:	f8ab 100c 	strh.w	r1, [fp, #12]
  403386:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  40338a:	b289      	uxth	r1, r1
  40338c:	0708      	lsls	r0, r1, #28
  40338e:	f140 80b3 	bpl.w	4034f8 <_vfiprintf_r+0x1b4>
  403392:	f8db 3010 	ldr.w	r3, [fp, #16]
  403396:	2b00      	cmp	r3, #0
  403398:	f000 80ae 	beq.w	4034f8 <_vfiprintf_r+0x1b4>
  40339c:	f001 031a 	and.w	r3, r1, #26
  4033a0:	2b0a      	cmp	r3, #10
  4033a2:	f000 80b5 	beq.w	403510 <_vfiprintf_r+0x1cc>
  4033a6:	2300      	movs	r3, #0
  4033a8:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4033ac:	930b      	str	r3, [sp, #44]	; 0x2c
  4033ae:	9311      	str	r3, [sp, #68]	; 0x44
  4033b0:	9310      	str	r3, [sp, #64]	; 0x40
  4033b2:	9303      	str	r3, [sp, #12]
  4033b4:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4033b8:	46ca      	mov	sl, r9
  4033ba:	f8cd b010 	str.w	fp, [sp, #16]
  4033be:	f898 3000 	ldrb.w	r3, [r8]
  4033c2:	4644      	mov	r4, r8
  4033c4:	b1fb      	cbz	r3, 403406 <_vfiprintf_r+0xc2>
  4033c6:	2b25      	cmp	r3, #37	; 0x25
  4033c8:	d102      	bne.n	4033d0 <_vfiprintf_r+0x8c>
  4033ca:	e01c      	b.n	403406 <_vfiprintf_r+0xc2>
  4033cc:	2b25      	cmp	r3, #37	; 0x25
  4033ce:	d003      	beq.n	4033d8 <_vfiprintf_r+0x94>
  4033d0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4033d4:	2b00      	cmp	r3, #0
  4033d6:	d1f9      	bne.n	4033cc <_vfiprintf_r+0x88>
  4033d8:	eba4 0508 	sub.w	r5, r4, r8
  4033dc:	b19d      	cbz	r5, 403406 <_vfiprintf_r+0xc2>
  4033de:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4033e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4033e2:	f8ca 8000 	str.w	r8, [sl]
  4033e6:	3301      	adds	r3, #1
  4033e8:	442a      	add	r2, r5
  4033ea:	2b07      	cmp	r3, #7
  4033ec:	f8ca 5004 	str.w	r5, [sl, #4]
  4033f0:	9211      	str	r2, [sp, #68]	; 0x44
  4033f2:	9310      	str	r3, [sp, #64]	; 0x40
  4033f4:	dd7a      	ble.n	4034ec <_vfiprintf_r+0x1a8>
  4033f6:	2a00      	cmp	r2, #0
  4033f8:	f040 84b0 	bne.w	403d5c <_vfiprintf_r+0xa18>
  4033fc:	9b03      	ldr	r3, [sp, #12]
  4033fe:	9210      	str	r2, [sp, #64]	; 0x40
  403400:	442b      	add	r3, r5
  403402:	46ca      	mov	sl, r9
  403404:	9303      	str	r3, [sp, #12]
  403406:	7823      	ldrb	r3, [r4, #0]
  403408:	2b00      	cmp	r3, #0
  40340a:	f000 83e0 	beq.w	403bce <_vfiprintf_r+0x88a>
  40340e:	2000      	movs	r0, #0
  403410:	f04f 0300 	mov.w	r3, #0
  403414:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  403418:	f104 0801 	add.w	r8, r4, #1
  40341c:	7862      	ldrb	r2, [r4, #1]
  40341e:	4605      	mov	r5, r0
  403420:	4606      	mov	r6, r0
  403422:	4603      	mov	r3, r0
  403424:	f04f 34ff 	mov.w	r4, #4294967295
  403428:	f108 0801 	add.w	r8, r8, #1
  40342c:	f1a2 0120 	sub.w	r1, r2, #32
  403430:	2958      	cmp	r1, #88	; 0x58
  403432:	f200 82de 	bhi.w	4039f2 <_vfiprintf_r+0x6ae>
  403436:	e8df f011 	tbh	[pc, r1, lsl #1]
  40343a:	0221      	.short	0x0221
  40343c:	02dc02dc 	.word	0x02dc02dc
  403440:	02dc0229 	.word	0x02dc0229
  403444:	02dc02dc 	.word	0x02dc02dc
  403448:	02dc02dc 	.word	0x02dc02dc
  40344c:	028902dc 	.word	0x028902dc
  403450:	02dc0295 	.word	0x02dc0295
  403454:	02bd00a2 	.word	0x02bd00a2
  403458:	019f02dc 	.word	0x019f02dc
  40345c:	01a401a4 	.word	0x01a401a4
  403460:	01a401a4 	.word	0x01a401a4
  403464:	01a401a4 	.word	0x01a401a4
  403468:	01a401a4 	.word	0x01a401a4
  40346c:	02dc01a4 	.word	0x02dc01a4
  403470:	02dc02dc 	.word	0x02dc02dc
  403474:	02dc02dc 	.word	0x02dc02dc
  403478:	02dc02dc 	.word	0x02dc02dc
  40347c:	02dc02dc 	.word	0x02dc02dc
  403480:	01b202dc 	.word	0x01b202dc
  403484:	02dc02dc 	.word	0x02dc02dc
  403488:	02dc02dc 	.word	0x02dc02dc
  40348c:	02dc02dc 	.word	0x02dc02dc
  403490:	02dc02dc 	.word	0x02dc02dc
  403494:	02dc02dc 	.word	0x02dc02dc
  403498:	02dc0197 	.word	0x02dc0197
  40349c:	02dc02dc 	.word	0x02dc02dc
  4034a0:	02dc02dc 	.word	0x02dc02dc
  4034a4:	02dc019b 	.word	0x02dc019b
  4034a8:	025302dc 	.word	0x025302dc
  4034ac:	02dc02dc 	.word	0x02dc02dc
  4034b0:	02dc02dc 	.word	0x02dc02dc
  4034b4:	02dc02dc 	.word	0x02dc02dc
  4034b8:	02dc02dc 	.word	0x02dc02dc
  4034bc:	02dc02dc 	.word	0x02dc02dc
  4034c0:	021b025a 	.word	0x021b025a
  4034c4:	02dc02dc 	.word	0x02dc02dc
  4034c8:	026e02dc 	.word	0x026e02dc
  4034cc:	02dc021b 	.word	0x02dc021b
  4034d0:	027302dc 	.word	0x027302dc
  4034d4:	01f502dc 	.word	0x01f502dc
  4034d8:	02090182 	.word	0x02090182
  4034dc:	02dc02d7 	.word	0x02dc02d7
  4034e0:	02dc029a 	.word	0x02dc029a
  4034e4:	02dc00a7 	.word	0x02dc00a7
  4034e8:	022e02dc 	.word	0x022e02dc
  4034ec:	f10a 0a08 	add.w	sl, sl, #8
  4034f0:	9b03      	ldr	r3, [sp, #12]
  4034f2:	442b      	add	r3, r5
  4034f4:	9303      	str	r3, [sp, #12]
  4034f6:	e786      	b.n	403406 <_vfiprintf_r+0xc2>
  4034f8:	4659      	mov	r1, fp
  4034fa:	9806      	ldr	r0, [sp, #24]
  4034fc:	f000 fdac 	bl	404058 <__swsetup_r>
  403500:	bb18      	cbnz	r0, 40354a <_vfiprintf_r+0x206>
  403502:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  403506:	f001 031a 	and.w	r3, r1, #26
  40350a:	2b0a      	cmp	r3, #10
  40350c:	f47f af4b 	bne.w	4033a6 <_vfiprintf_r+0x62>
  403510:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  403514:	2b00      	cmp	r3, #0
  403516:	f6ff af46 	blt.w	4033a6 <_vfiprintf_r+0x62>
  40351a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40351e:	07db      	lsls	r3, r3, #31
  403520:	d405      	bmi.n	40352e <_vfiprintf_r+0x1ea>
  403522:	058f      	lsls	r7, r1, #22
  403524:	d403      	bmi.n	40352e <_vfiprintf_r+0x1ea>
  403526:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40352a:	f001 fac3 	bl	404ab4 <__retarget_lock_release_recursive>
  40352e:	462b      	mov	r3, r5
  403530:	4642      	mov	r2, r8
  403532:	4659      	mov	r1, fp
  403534:	9806      	ldr	r0, [sp, #24]
  403536:	f000 fd4d 	bl	403fd4 <__sbprintf>
  40353a:	9003      	str	r0, [sp, #12]
  40353c:	9803      	ldr	r0, [sp, #12]
  40353e:	b02d      	add	sp, #180	; 0xb4
  403540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403544:	f000 fef4 	bl	404330 <__sinit>
  403548:	e709      	b.n	40335e <_vfiprintf_r+0x1a>
  40354a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40354e:	07d9      	lsls	r1, r3, #31
  403550:	d404      	bmi.n	40355c <_vfiprintf_r+0x218>
  403552:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  403556:	059a      	lsls	r2, r3, #22
  403558:	f140 84aa 	bpl.w	403eb0 <_vfiprintf_r+0xb6c>
  40355c:	f04f 33ff 	mov.w	r3, #4294967295
  403560:	9303      	str	r3, [sp, #12]
  403562:	9803      	ldr	r0, [sp, #12]
  403564:	b02d      	add	sp, #180	; 0xb4
  403566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40356a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40356e:	f001 fa9f 	bl	404ab0 <__retarget_lock_acquire_recursive>
  403572:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  403576:	b281      	uxth	r1, r0
  403578:	e6fb      	b.n	403372 <_vfiprintf_r+0x2e>
  40357a:	4276      	negs	r6, r6
  40357c:	9207      	str	r2, [sp, #28]
  40357e:	f043 0304 	orr.w	r3, r3, #4
  403582:	f898 2000 	ldrb.w	r2, [r8]
  403586:	e74f      	b.n	403428 <_vfiprintf_r+0xe4>
  403588:	9608      	str	r6, [sp, #32]
  40358a:	069e      	lsls	r6, r3, #26
  40358c:	f100 8450 	bmi.w	403e30 <_vfiprintf_r+0xaec>
  403590:	9907      	ldr	r1, [sp, #28]
  403592:	06dd      	lsls	r5, r3, #27
  403594:	460a      	mov	r2, r1
  403596:	f100 83ef 	bmi.w	403d78 <_vfiprintf_r+0xa34>
  40359a:	0658      	lsls	r0, r3, #25
  40359c:	f140 83ec 	bpl.w	403d78 <_vfiprintf_r+0xa34>
  4035a0:	880e      	ldrh	r6, [r1, #0]
  4035a2:	3104      	adds	r1, #4
  4035a4:	2700      	movs	r7, #0
  4035a6:	2201      	movs	r2, #1
  4035a8:	9107      	str	r1, [sp, #28]
  4035aa:	f04f 0100 	mov.w	r1, #0
  4035ae:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  4035b2:	2500      	movs	r5, #0
  4035b4:	1c61      	adds	r1, r4, #1
  4035b6:	f000 8116 	beq.w	4037e6 <_vfiprintf_r+0x4a2>
  4035ba:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  4035be:	9102      	str	r1, [sp, #8]
  4035c0:	ea56 0107 	orrs.w	r1, r6, r7
  4035c4:	f040 8114 	bne.w	4037f0 <_vfiprintf_r+0x4ac>
  4035c8:	2c00      	cmp	r4, #0
  4035ca:	f040 835c 	bne.w	403c86 <_vfiprintf_r+0x942>
  4035ce:	2a00      	cmp	r2, #0
  4035d0:	f040 83b7 	bne.w	403d42 <_vfiprintf_r+0x9fe>
  4035d4:	f013 0301 	ands.w	r3, r3, #1
  4035d8:	9305      	str	r3, [sp, #20]
  4035da:	f000 8457 	beq.w	403e8c <_vfiprintf_r+0xb48>
  4035de:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  4035e2:	2330      	movs	r3, #48	; 0x30
  4035e4:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  4035e8:	9b05      	ldr	r3, [sp, #20]
  4035ea:	42a3      	cmp	r3, r4
  4035ec:	bfb8      	it	lt
  4035ee:	4623      	movlt	r3, r4
  4035f0:	9301      	str	r3, [sp, #4]
  4035f2:	b10d      	cbz	r5, 4035f8 <_vfiprintf_r+0x2b4>
  4035f4:	3301      	adds	r3, #1
  4035f6:	9301      	str	r3, [sp, #4]
  4035f8:	9b02      	ldr	r3, [sp, #8]
  4035fa:	f013 0302 	ands.w	r3, r3, #2
  4035fe:	9309      	str	r3, [sp, #36]	; 0x24
  403600:	d002      	beq.n	403608 <_vfiprintf_r+0x2c4>
  403602:	9b01      	ldr	r3, [sp, #4]
  403604:	3302      	adds	r3, #2
  403606:	9301      	str	r3, [sp, #4]
  403608:	9b02      	ldr	r3, [sp, #8]
  40360a:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  40360e:	930a      	str	r3, [sp, #40]	; 0x28
  403610:	f040 8217 	bne.w	403a42 <_vfiprintf_r+0x6fe>
  403614:	9b08      	ldr	r3, [sp, #32]
  403616:	9a01      	ldr	r2, [sp, #4]
  403618:	1a9d      	subs	r5, r3, r2
  40361a:	2d00      	cmp	r5, #0
  40361c:	f340 8211 	ble.w	403a42 <_vfiprintf_r+0x6fe>
  403620:	2d10      	cmp	r5, #16
  403622:	f340 8490 	ble.w	403f46 <_vfiprintf_r+0xc02>
  403626:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403628:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40362a:	4ec4      	ldr	r6, [pc, #784]	; (40393c <_vfiprintf_r+0x5f8>)
  40362c:	46d6      	mov	lr, sl
  40362e:	2710      	movs	r7, #16
  403630:	46a2      	mov	sl, r4
  403632:	4619      	mov	r1, r3
  403634:	9c06      	ldr	r4, [sp, #24]
  403636:	e007      	b.n	403648 <_vfiprintf_r+0x304>
  403638:	f101 0c02 	add.w	ip, r1, #2
  40363c:	f10e 0e08 	add.w	lr, lr, #8
  403640:	4601      	mov	r1, r0
  403642:	3d10      	subs	r5, #16
  403644:	2d10      	cmp	r5, #16
  403646:	dd11      	ble.n	40366c <_vfiprintf_r+0x328>
  403648:	1c48      	adds	r0, r1, #1
  40364a:	3210      	adds	r2, #16
  40364c:	2807      	cmp	r0, #7
  40364e:	9211      	str	r2, [sp, #68]	; 0x44
  403650:	e88e 00c0 	stmia.w	lr, {r6, r7}
  403654:	9010      	str	r0, [sp, #64]	; 0x40
  403656:	ddef      	ble.n	403638 <_vfiprintf_r+0x2f4>
  403658:	2a00      	cmp	r2, #0
  40365a:	f040 81e4 	bne.w	403a26 <_vfiprintf_r+0x6e2>
  40365e:	3d10      	subs	r5, #16
  403660:	2d10      	cmp	r5, #16
  403662:	4611      	mov	r1, r2
  403664:	f04f 0c01 	mov.w	ip, #1
  403668:	46ce      	mov	lr, r9
  40366a:	dced      	bgt.n	403648 <_vfiprintf_r+0x304>
  40366c:	4654      	mov	r4, sl
  40366e:	4661      	mov	r1, ip
  403670:	46f2      	mov	sl, lr
  403672:	442a      	add	r2, r5
  403674:	2907      	cmp	r1, #7
  403676:	9211      	str	r2, [sp, #68]	; 0x44
  403678:	f8ca 6000 	str.w	r6, [sl]
  40367c:	f8ca 5004 	str.w	r5, [sl, #4]
  403680:	9110      	str	r1, [sp, #64]	; 0x40
  403682:	f300 82ec 	bgt.w	403c5e <_vfiprintf_r+0x91a>
  403686:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40368a:	f10a 0a08 	add.w	sl, sl, #8
  40368e:	1c48      	adds	r0, r1, #1
  403690:	2d00      	cmp	r5, #0
  403692:	f040 81de 	bne.w	403a52 <_vfiprintf_r+0x70e>
  403696:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403698:	2b00      	cmp	r3, #0
  40369a:	f000 81f8 	beq.w	403a8e <_vfiprintf_r+0x74a>
  40369e:	3202      	adds	r2, #2
  4036a0:	a90e      	add	r1, sp, #56	; 0x38
  4036a2:	2302      	movs	r3, #2
  4036a4:	2807      	cmp	r0, #7
  4036a6:	9211      	str	r2, [sp, #68]	; 0x44
  4036a8:	9010      	str	r0, [sp, #64]	; 0x40
  4036aa:	e88a 000a 	stmia.w	sl, {r1, r3}
  4036ae:	f340 81ea 	ble.w	403a86 <_vfiprintf_r+0x742>
  4036b2:	2a00      	cmp	r2, #0
  4036b4:	f040 838c 	bne.w	403dd0 <_vfiprintf_r+0xa8c>
  4036b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036ba:	2b80      	cmp	r3, #128	; 0x80
  4036bc:	f04f 0001 	mov.w	r0, #1
  4036c0:	4611      	mov	r1, r2
  4036c2:	46ca      	mov	sl, r9
  4036c4:	f040 81e7 	bne.w	403a96 <_vfiprintf_r+0x752>
  4036c8:	9b08      	ldr	r3, [sp, #32]
  4036ca:	9d01      	ldr	r5, [sp, #4]
  4036cc:	1b5e      	subs	r6, r3, r5
  4036ce:	2e00      	cmp	r6, #0
  4036d0:	f340 81e1 	ble.w	403a96 <_vfiprintf_r+0x752>
  4036d4:	2e10      	cmp	r6, #16
  4036d6:	4d9a      	ldr	r5, [pc, #616]	; (403940 <_vfiprintf_r+0x5fc>)
  4036d8:	f340 8450 	ble.w	403f7c <_vfiprintf_r+0xc38>
  4036dc:	46d4      	mov	ip, sl
  4036de:	2710      	movs	r7, #16
  4036e0:	46a2      	mov	sl, r4
  4036e2:	9c06      	ldr	r4, [sp, #24]
  4036e4:	e007      	b.n	4036f6 <_vfiprintf_r+0x3b2>
  4036e6:	f101 0e02 	add.w	lr, r1, #2
  4036ea:	f10c 0c08 	add.w	ip, ip, #8
  4036ee:	4601      	mov	r1, r0
  4036f0:	3e10      	subs	r6, #16
  4036f2:	2e10      	cmp	r6, #16
  4036f4:	dd11      	ble.n	40371a <_vfiprintf_r+0x3d6>
  4036f6:	1c48      	adds	r0, r1, #1
  4036f8:	3210      	adds	r2, #16
  4036fa:	2807      	cmp	r0, #7
  4036fc:	9211      	str	r2, [sp, #68]	; 0x44
  4036fe:	e88c 00a0 	stmia.w	ip, {r5, r7}
  403702:	9010      	str	r0, [sp, #64]	; 0x40
  403704:	ddef      	ble.n	4036e6 <_vfiprintf_r+0x3a2>
  403706:	2a00      	cmp	r2, #0
  403708:	f040 829d 	bne.w	403c46 <_vfiprintf_r+0x902>
  40370c:	3e10      	subs	r6, #16
  40370e:	2e10      	cmp	r6, #16
  403710:	f04f 0e01 	mov.w	lr, #1
  403714:	4611      	mov	r1, r2
  403716:	46cc      	mov	ip, r9
  403718:	dced      	bgt.n	4036f6 <_vfiprintf_r+0x3b2>
  40371a:	4654      	mov	r4, sl
  40371c:	46e2      	mov	sl, ip
  40371e:	4432      	add	r2, r6
  403720:	f1be 0f07 	cmp.w	lr, #7
  403724:	9211      	str	r2, [sp, #68]	; 0x44
  403726:	e88a 0060 	stmia.w	sl, {r5, r6}
  40372a:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  40372e:	f300 8369 	bgt.w	403e04 <_vfiprintf_r+0xac0>
  403732:	f10a 0a08 	add.w	sl, sl, #8
  403736:	f10e 0001 	add.w	r0, lr, #1
  40373a:	4671      	mov	r1, lr
  40373c:	e1ab      	b.n	403a96 <_vfiprintf_r+0x752>
  40373e:	9608      	str	r6, [sp, #32]
  403740:	f013 0220 	ands.w	r2, r3, #32
  403744:	f040 838c 	bne.w	403e60 <_vfiprintf_r+0xb1c>
  403748:	f013 0110 	ands.w	r1, r3, #16
  40374c:	f040 831a 	bne.w	403d84 <_vfiprintf_r+0xa40>
  403750:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  403754:	f000 8316 	beq.w	403d84 <_vfiprintf_r+0xa40>
  403758:	9807      	ldr	r0, [sp, #28]
  40375a:	460a      	mov	r2, r1
  40375c:	4601      	mov	r1, r0
  40375e:	3104      	adds	r1, #4
  403760:	8806      	ldrh	r6, [r0, #0]
  403762:	9107      	str	r1, [sp, #28]
  403764:	2700      	movs	r7, #0
  403766:	e720      	b.n	4035aa <_vfiprintf_r+0x266>
  403768:	9608      	str	r6, [sp, #32]
  40376a:	f043 0310 	orr.w	r3, r3, #16
  40376e:	e7e7      	b.n	403740 <_vfiprintf_r+0x3fc>
  403770:	9608      	str	r6, [sp, #32]
  403772:	f043 0310 	orr.w	r3, r3, #16
  403776:	e708      	b.n	40358a <_vfiprintf_r+0x246>
  403778:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40377c:	f898 2000 	ldrb.w	r2, [r8]
  403780:	e652      	b.n	403428 <_vfiprintf_r+0xe4>
  403782:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  403786:	2600      	movs	r6, #0
  403788:	f818 2b01 	ldrb.w	r2, [r8], #1
  40378c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  403790:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  403794:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  403798:	2909      	cmp	r1, #9
  40379a:	d9f5      	bls.n	403788 <_vfiprintf_r+0x444>
  40379c:	e646      	b.n	40342c <_vfiprintf_r+0xe8>
  40379e:	9608      	str	r6, [sp, #32]
  4037a0:	2800      	cmp	r0, #0
  4037a2:	f040 8408 	bne.w	403fb6 <_vfiprintf_r+0xc72>
  4037a6:	f043 0310 	orr.w	r3, r3, #16
  4037aa:	069e      	lsls	r6, r3, #26
  4037ac:	f100 834c 	bmi.w	403e48 <_vfiprintf_r+0xb04>
  4037b0:	06dd      	lsls	r5, r3, #27
  4037b2:	f100 82f3 	bmi.w	403d9c <_vfiprintf_r+0xa58>
  4037b6:	0658      	lsls	r0, r3, #25
  4037b8:	f140 82f0 	bpl.w	403d9c <_vfiprintf_r+0xa58>
  4037bc:	9d07      	ldr	r5, [sp, #28]
  4037be:	f9b5 6000 	ldrsh.w	r6, [r5]
  4037c2:	462a      	mov	r2, r5
  4037c4:	17f7      	asrs	r7, r6, #31
  4037c6:	3204      	adds	r2, #4
  4037c8:	4630      	mov	r0, r6
  4037ca:	4639      	mov	r1, r7
  4037cc:	9207      	str	r2, [sp, #28]
  4037ce:	2800      	cmp	r0, #0
  4037d0:	f171 0200 	sbcs.w	r2, r1, #0
  4037d4:	f2c0 835d 	blt.w	403e92 <_vfiprintf_r+0xb4e>
  4037d8:	1c61      	adds	r1, r4, #1
  4037da:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4037de:	f04f 0201 	mov.w	r2, #1
  4037e2:	f47f aeea 	bne.w	4035ba <_vfiprintf_r+0x276>
  4037e6:	ea56 0107 	orrs.w	r1, r6, r7
  4037ea:	f000 824d 	beq.w	403c88 <_vfiprintf_r+0x944>
  4037ee:	9302      	str	r3, [sp, #8]
  4037f0:	2a01      	cmp	r2, #1
  4037f2:	f000 828c 	beq.w	403d0e <_vfiprintf_r+0x9ca>
  4037f6:	2a02      	cmp	r2, #2
  4037f8:	f040 825c 	bne.w	403cb4 <_vfiprintf_r+0x970>
  4037fc:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4037fe:	46cb      	mov	fp, r9
  403800:	0933      	lsrs	r3, r6, #4
  403802:	f006 010f 	and.w	r1, r6, #15
  403806:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  40380a:	093a      	lsrs	r2, r7, #4
  40380c:	461e      	mov	r6, r3
  40380e:	4617      	mov	r7, r2
  403810:	5c43      	ldrb	r3, [r0, r1]
  403812:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  403816:	ea56 0307 	orrs.w	r3, r6, r7
  40381a:	d1f1      	bne.n	403800 <_vfiprintf_r+0x4bc>
  40381c:	eba9 030b 	sub.w	r3, r9, fp
  403820:	9305      	str	r3, [sp, #20]
  403822:	e6e1      	b.n	4035e8 <_vfiprintf_r+0x2a4>
  403824:	2800      	cmp	r0, #0
  403826:	f040 83c0 	bne.w	403faa <_vfiprintf_r+0xc66>
  40382a:	0699      	lsls	r1, r3, #26
  40382c:	f100 8367 	bmi.w	403efe <_vfiprintf_r+0xbba>
  403830:	06da      	lsls	r2, r3, #27
  403832:	f100 80f1 	bmi.w	403a18 <_vfiprintf_r+0x6d4>
  403836:	065b      	lsls	r3, r3, #25
  403838:	f140 80ee 	bpl.w	403a18 <_vfiprintf_r+0x6d4>
  40383c:	9a07      	ldr	r2, [sp, #28]
  40383e:	6813      	ldr	r3, [r2, #0]
  403840:	3204      	adds	r2, #4
  403842:	9207      	str	r2, [sp, #28]
  403844:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  403848:	801a      	strh	r2, [r3, #0]
  40384a:	e5b8      	b.n	4033be <_vfiprintf_r+0x7a>
  40384c:	9807      	ldr	r0, [sp, #28]
  40384e:	4a3d      	ldr	r2, [pc, #244]	; (403944 <_vfiprintf_r+0x600>)
  403850:	9608      	str	r6, [sp, #32]
  403852:	920b      	str	r2, [sp, #44]	; 0x2c
  403854:	6806      	ldr	r6, [r0, #0]
  403856:	2278      	movs	r2, #120	; 0x78
  403858:	2130      	movs	r1, #48	; 0x30
  40385a:	3004      	adds	r0, #4
  40385c:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  403860:	f043 0302 	orr.w	r3, r3, #2
  403864:	9007      	str	r0, [sp, #28]
  403866:	2700      	movs	r7, #0
  403868:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  40386c:	2202      	movs	r2, #2
  40386e:	e69c      	b.n	4035aa <_vfiprintf_r+0x266>
  403870:	9608      	str	r6, [sp, #32]
  403872:	2800      	cmp	r0, #0
  403874:	d099      	beq.n	4037aa <_vfiprintf_r+0x466>
  403876:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40387a:	e796      	b.n	4037aa <_vfiprintf_r+0x466>
  40387c:	f898 2000 	ldrb.w	r2, [r8]
  403880:	2d00      	cmp	r5, #0
  403882:	f47f add1 	bne.w	403428 <_vfiprintf_r+0xe4>
  403886:	2001      	movs	r0, #1
  403888:	2520      	movs	r5, #32
  40388a:	e5cd      	b.n	403428 <_vfiprintf_r+0xe4>
  40388c:	f043 0301 	orr.w	r3, r3, #1
  403890:	f898 2000 	ldrb.w	r2, [r8]
  403894:	e5c8      	b.n	403428 <_vfiprintf_r+0xe4>
  403896:	9608      	str	r6, [sp, #32]
  403898:	2800      	cmp	r0, #0
  40389a:	f040 8393 	bne.w	403fc4 <_vfiprintf_r+0xc80>
  40389e:	4929      	ldr	r1, [pc, #164]	; (403944 <_vfiprintf_r+0x600>)
  4038a0:	910b      	str	r1, [sp, #44]	; 0x2c
  4038a2:	069f      	lsls	r7, r3, #26
  4038a4:	f100 82e8 	bmi.w	403e78 <_vfiprintf_r+0xb34>
  4038a8:	9807      	ldr	r0, [sp, #28]
  4038aa:	06de      	lsls	r6, r3, #27
  4038ac:	4601      	mov	r1, r0
  4038ae:	f100 8270 	bmi.w	403d92 <_vfiprintf_r+0xa4e>
  4038b2:	065d      	lsls	r5, r3, #25
  4038b4:	f140 826d 	bpl.w	403d92 <_vfiprintf_r+0xa4e>
  4038b8:	3104      	adds	r1, #4
  4038ba:	8806      	ldrh	r6, [r0, #0]
  4038bc:	9107      	str	r1, [sp, #28]
  4038be:	2700      	movs	r7, #0
  4038c0:	07d8      	lsls	r0, r3, #31
  4038c2:	f140 8222 	bpl.w	403d0a <_vfiprintf_r+0x9c6>
  4038c6:	ea56 0107 	orrs.w	r1, r6, r7
  4038ca:	f000 821e 	beq.w	403d0a <_vfiprintf_r+0x9c6>
  4038ce:	2130      	movs	r1, #48	; 0x30
  4038d0:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4038d4:	f043 0302 	orr.w	r3, r3, #2
  4038d8:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4038dc:	2202      	movs	r2, #2
  4038de:	e664      	b.n	4035aa <_vfiprintf_r+0x266>
  4038e0:	9608      	str	r6, [sp, #32]
  4038e2:	2800      	cmp	r0, #0
  4038e4:	f040 836b 	bne.w	403fbe <_vfiprintf_r+0xc7a>
  4038e8:	4917      	ldr	r1, [pc, #92]	; (403948 <_vfiprintf_r+0x604>)
  4038ea:	910b      	str	r1, [sp, #44]	; 0x2c
  4038ec:	e7d9      	b.n	4038a2 <_vfiprintf_r+0x55e>
  4038ee:	9907      	ldr	r1, [sp, #28]
  4038f0:	9608      	str	r6, [sp, #32]
  4038f2:	680a      	ldr	r2, [r1, #0]
  4038f4:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4038f8:	f04f 0000 	mov.w	r0, #0
  4038fc:	460a      	mov	r2, r1
  4038fe:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  403902:	3204      	adds	r2, #4
  403904:	2001      	movs	r0, #1
  403906:	9001      	str	r0, [sp, #4]
  403908:	9207      	str	r2, [sp, #28]
  40390a:	9005      	str	r0, [sp, #20]
  40390c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  403910:	9302      	str	r3, [sp, #8]
  403912:	2400      	movs	r4, #0
  403914:	e670      	b.n	4035f8 <_vfiprintf_r+0x2b4>
  403916:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40391a:	f898 2000 	ldrb.w	r2, [r8]
  40391e:	e583      	b.n	403428 <_vfiprintf_r+0xe4>
  403920:	f898 2000 	ldrb.w	r2, [r8]
  403924:	2a6c      	cmp	r2, #108	; 0x6c
  403926:	bf03      	ittte	eq
  403928:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  40392c:	f043 0320 	orreq.w	r3, r3, #32
  403930:	f108 0801 	addeq.w	r8, r8, #1
  403934:	f043 0310 	orrne.w	r3, r3, #16
  403938:	e576      	b.n	403428 <_vfiprintf_r+0xe4>
  40393a:	bf00      	nop
  40393c:	004061a4 	.word	0x004061a4
  403940:	004061b4 	.word	0x004061b4
  403944:	00406188 	.word	0x00406188
  403948:	00406174 	.word	0x00406174
  40394c:	9907      	ldr	r1, [sp, #28]
  40394e:	680e      	ldr	r6, [r1, #0]
  403950:	460a      	mov	r2, r1
  403952:	2e00      	cmp	r6, #0
  403954:	f102 0204 	add.w	r2, r2, #4
  403958:	f6ff ae0f 	blt.w	40357a <_vfiprintf_r+0x236>
  40395c:	9207      	str	r2, [sp, #28]
  40395e:	f898 2000 	ldrb.w	r2, [r8]
  403962:	e561      	b.n	403428 <_vfiprintf_r+0xe4>
  403964:	f898 2000 	ldrb.w	r2, [r8]
  403968:	2001      	movs	r0, #1
  40396a:	252b      	movs	r5, #43	; 0x2b
  40396c:	e55c      	b.n	403428 <_vfiprintf_r+0xe4>
  40396e:	9907      	ldr	r1, [sp, #28]
  403970:	9608      	str	r6, [sp, #32]
  403972:	f8d1 b000 	ldr.w	fp, [r1]
  403976:	f04f 0200 	mov.w	r2, #0
  40397a:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  40397e:	1d0e      	adds	r6, r1, #4
  403980:	f1bb 0f00 	cmp.w	fp, #0
  403984:	f000 82e5 	beq.w	403f52 <_vfiprintf_r+0xc0e>
  403988:	1c67      	adds	r7, r4, #1
  40398a:	f000 82c4 	beq.w	403f16 <_vfiprintf_r+0xbd2>
  40398e:	4622      	mov	r2, r4
  403990:	2100      	movs	r1, #0
  403992:	4658      	mov	r0, fp
  403994:	9301      	str	r3, [sp, #4]
  403996:	f001 fbdb 	bl	405150 <memchr>
  40399a:	9b01      	ldr	r3, [sp, #4]
  40399c:	2800      	cmp	r0, #0
  40399e:	f000 82e5 	beq.w	403f6c <_vfiprintf_r+0xc28>
  4039a2:	eba0 020b 	sub.w	r2, r0, fp
  4039a6:	9205      	str	r2, [sp, #20]
  4039a8:	9607      	str	r6, [sp, #28]
  4039aa:	9302      	str	r3, [sp, #8]
  4039ac:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4039b0:	2400      	movs	r4, #0
  4039b2:	e619      	b.n	4035e8 <_vfiprintf_r+0x2a4>
  4039b4:	f898 2000 	ldrb.w	r2, [r8]
  4039b8:	2a2a      	cmp	r2, #42	; 0x2a
  4039ba:	f108 0701 	add.w	r7, r8, #1
  4039be:	f000 82e9 	beq.w	403f94 <_vfiprintf_r+0xc50>
  4039c2:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4039c6:	2909      	cmp	r1, #9
  4039c8:	46b8      	mov	r8, r7
  4039ca:	f04f 0400 	mov.w	r4, #0
  4039ce:	f63f ad2d 	bhi.w	40342c <_vfiprintf_r+0xe8>
  4039d2:	f818 2b01 	ldrb.w	r2, [r8], #1
  4039d6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4039da:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  4039de:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4039e2:	2909      	cmp	r1, #9
  4039e4:	d9f5      	bls.n	4039d2 <_vfiprintf_r+0x68e>
  4039e6:	e521      	b.n	40342c <_vfiprintf_r+0xe8>
  4039e8:	f043 0320 	orr.w	r3, r3, #32
  4039ec:	f898 2000 	ldrb.w	r2, [r8]
  4039f0:	e51a      	b.n	403428 <_vfiprintf_r+0xe4>
  4039f2:	9608      	str	r6, [sp, #32]
  4039f4:	2800      	cmp	r0, #0
  4039f6:	f040 82db 	bne.w	403fb0 <_vfiprintf_r+0xc6c>
  4039fa:	2a00      	cmp	r2, #0
  4039fc:	f000 80e7 	beq.w	403bce <_vfiprintf_r+0x88a>
  403a00:	2101      	movs	r1, #1
  403a02:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  403a06:	f04f 0200 	mov.w	r2, #0
  403a0a:	9101      	str	r1, [sp, #4]
  403a0c:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  403a10:	9105      	str	r1, [sp, #20]
  403a12:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  403a16:	e77b      	b.n	403910 <_vfiprintf_r+0x5cc>
  403a18:	9a07      	ldr	r2, [sp, #28]
  403a1a:	6813      	ldr	r3, [r2, #0]
  403a1c:	3204      	adds	r2, #4
  403a1e:	9207      	str	r2, [sp, #28]
  403a20:	9a03      	ldr	r2, [sp, #12]
  403a22:	601a      	str	r2, [r3, #0]
  403a24:	e4cb      	b.n	4033be <_vfiprintf_r+0x7a>
  403a26:	aa0f      	add	r2, sp, #60	; 0x3c
  403a28:	9904      	ldr	r1, [sp, #16]
  403a2a:	4620      	mov	r0, r4
  403a2c:	f7ff fc4a 	bl	4032c4 <__sprint_r.part.0>
  403a30:	2800      	cmp	r0, #0
  403a32:	f040 8139 	bne.w	403ca8 <_vfiprintf_r+0x964>
  403a36:	9910      	ldr	r1, [sp, #64]	; 0x40
  403a38:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403a3a:	f101 0c01 	add.w	ip, r1, #1
  403a3e:	46ce      	mov	lr, r9
  403a40:	e5ff      	b.n	403642 <_vfiprintf_r+0x2fe>
  403a42:	9910      	ldr	r1, [sp, #64]	; 0x40
  403a44:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403a46:	1c48      	adds	r0, r1, #1
  403a48:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403a4c:	2d00      	cmp	r5, #0
  403a4e:	f43f ae22 	beq.w	403696 <_vfiprintf_r+0x352>
  403a52:	3201      	adds	r2, #1
  403a54:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  403a58:	2101      	movs	r1, #1
  403a5a:	2807      	cmp	r0, #7
  403a5c:	9211      	str	r2, [sp, #68]	; 0x44
  403a5e:	9010      	str	r0, [sp, #64]	; 0x40
  403a60:	f8ca 5000 	str.w	r5, [sl]
  403a64:	f8ca 1004 	str.w	r1, [sl, #4]
  403a68:	f340 8108 	ble.w	403c7c <_vfiprintf_r+0x938>
  403a6c:	2a00      	cmp	r2, #0
  403a6e:	f040 81bc 	bne.w	403dea <_vfiprintf_r+0xaa6>
  403a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403a74:	2b00      	cmp	r3, #0
  403a76:	f43f ae1f 	beq.w	4036b8 <_vfiprintf_r+0x374>
  403a7a:	ab0e      	add	r3, sp, #56	; 0x38
  403a7c:	2202      	movs	r2, #2
  403a7e:	4608      	mov	r0, r1
  403a80:	931c      	str	r3, [sp, #112]	; 0x70
  403a82:	921d      	str	r2, [sp, #116]	; 0x74
  403a84:	46ca      	mov	sl, r9
  403a86:	4601      	mov	r1, r0
  403a88:	f10a 0a08 	add.w	sl, sl, #8
  403a8c:	3001      	adds	r0, #1
  403a8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a90:	2b80      	cmp	r3, #128	; 0x80
  403a92:	f43f ae19 	beq.w	4036c8 <_vfiprintf_r+0x384>
  403a96:	9b05      	ldr	r3, [sp, #20]
  403a98:	1ae4      	subs	r4, r4, r3
  403a9a:	2c00      	cmp	r4, #0
  403a9c:	dd2e      	ble.n	403afc <_vfiprintf_r+0x7b8>
  403a9e:	2c10      	cmp	r4, #16
  403aa0:	4db3      	ldr	r5, [pc, #716]	; (403d70 <_vfiprintf_r+0xa2c>)
  403aa2:	dd1e      	ble.n	403ae2 <_vfiprintf_r+0x79e>
  403aa4:	46d6      	mov	lr, sl
  403aa6:	2610      	movs	r6, #16
  403aa8:	9f06      	ldr	r7, [sp, #24]
  403aaa:	f8dd a010 	ldr.w	sl, [sp, #16]
  403aae:	e006      	b.n	403abe <_vfiprintf_r+0x77a>
  403ab0:	1c88      	adds	r0, r1, #2
  403ab2:	f10e 0e08 	add.w	lr, lr, #8
  403ab6:	4619      	mov	r1, r3
  403ab8:	3c10      	subs	r4, #16
  403aba:	2c10      	cmp	r4, #16
  403abc:	dd10      	ble.n	403ae0 <_vfiprintf_r+0x79c>
  403abe:	1c4b      	adds	r3, r1, #1
  403ac0:	3210      	adds	r2, #16
  403ac2:	2b07      	cmp	r3, #7
  403ac4:	9211      	str	r2, [sp, #68]	; 0x44
  403ac6:	e88e 0060 	stmia.w	lr, {r5, r6}
  403aca:	9310      	str	r3, [sp, #64]	; 0x40
  403acc:	ddf0      	ble.n	403ab0 <_vfiprintf_r+0x76c>
  403ace:	2a00      	cmp	r2, #0
  403ad0:	d165      	bne.n	403b9e <_vfiprintf_r+0x85a>
  403ad2:	3c10      	subs	r4, #16
  403ad4:	2c10      	cmp	r4, #16
  403ad6:	f04f 0001 	mov.w	r0, #1
  403ada:	4611      	mov	r1, r2
  403adc:	46ce      	mov	lr, r9
  403ade:	dcee      	bgt.n	403abe <_vfiprintf_r+0x77a>
  403ae0:	46f2      	mov	sl, lr
  403ae2:	4422      	add	r2, r4
  403ae4:	2807      	cmp	r0, #7
  403ae6:	9211      	str	r2, [sp, #68]	; 0x44
  403ae8:	f8ca 5000 	str.w	r5, [sl]
  403aec:	f8ca 4004 	str.w	r4, [sl, #4]
  403af0:	9010      	str	r0, [sp, #64]	; 0x40
  403af2:	f300 8085 	bgt.w	403c00 <_vfiprintf_r+0x8bc>
  403af6:	f10a 0a08 	add.w	sl, sl, #8
  403afa:	3001      	adds	r0, #1
  403afc:	9905      	ldr	r1, [sp, #20]
  403afe:	f8ca b000 	str.w	fp, [sl]
  403b02:	440a      	add	r2, r1
  403b04:	2807      	cmp	r0, #7
  403b06:	9211      	str	r2, [sp, #68]	; 0x44
  403b08:	f8ca 1004 	str.w	r1, [sl, #4]
  403b0c:	9010      	str	r0, [sp, #64]	; 0x40
  403b0e:	f340 8082 	ble.w	403c16 <_vfiprintf_r+0x8d2>
  403b12:	2a00      	cmp	r2, #0
  403b14:	f040 8118 	bne.w	403d48 <_vfiprintf_r+0xa04>
  403b18:	9b02      	ldr	r3, [sp, #8]
  403b1a:	9210      	str	r2, [sp, #64]	; 0x40
  403b1c:	0758      	lsls	r0, r3, #29
  403b1e:	d535      	bpl.n	403b8c <_vfiprintf_r+0x848>
  403b20:	9b08      	ldr	r3, [sp, #32]
  403b22:	9901      	ldr	r1, [sp, #4]
  403b24:	1a5c      	subs	r4, r3, r1
  403b26:	2c00      	cmp	r4, #0
  403b28:	f340 80e7 	ble.w	403cfa <_vfiprintf_r+0x9b6>
  403b2c:	46ca      	mov	sl, r9
  403b2e:	2c10      	cmp	r4, #16
  403b30:	f340 8218 	ble.w	403f64 <_vfiprintf_r+0xc20>
  403b34:	9910      	ldr	r1, [sp, #64]	; 0x40
  403b36:	4e8f      	ldr	r6, [pc, #572]	; (403d74 <_vfiprintf_r+0xa30>)
  403b38:	9f06      	ldr	r7, [sp, #24]
  403b3a:	f8dd b010 	ldr.w	fp, [sp, #16]
  403b3e:	2510      	movs	r5, #16
  403b40:	e006      	b.n	403b50 <_vfiprintf_r+0x80c>
  403b42:	1c88      	adds	r0, r1, #2
  403b44:	f10a 0a08 	add.w	sl, sl, #8
  403b48:	4619      	mov	r1, r3
  403b4a:	3c10      	subs	r4, #16
  403b4c:	2c10      	cmp	r4, #16
  403b4e:	dd11      	ble.n	403b74 <_vfiprintf_r+0x830>
  403b50:	1c4b      	adds	r3, r1, #1
  403b52:	3210      	adds	r2, #16
  403b54:	2b07      	cmp	r3, #7
  403b56:	9211      	str	r2, [sp, #68]	; 0x44
  403b58:	f8ca 6000 	str.w	r6, [sl]
  403b5c:	f8ca 5004 	str.w	r5, [sl, #4]
  403b60:	9310      	str	r3, [sp, #64]	; 0x40
  403b62:	ddee      	ble.n	403b42 <_vfiprintf_r+0x7fe>
  403b64:	bb42      	cbnz	r2, 403bb8 <_vfiprintf_r+0x874>
  403b66:	3c10      	subs	r4, #16
  403b68:	2c10      	cmp	r4, #16
  403b6a:	f04f 0001 	mov.w	r0, #1
  403b6e:	4611      	mov	r1, r2
  403b70:	46ca      	mov	sl, r9
  403b72:	dced      	bgt.n	403b50 <_vfiprintf_r+0x80c>
  403b74:	4422      	add	r2, r4
  403b76:	2807      	cmp	r0, #7
  403b78:	9211      	str	r2, [sp, #68]	; 0x44
  403b7a:	f8ca 6000 	str.w	r6, [sl]
  403b7e:	f8ca 4004 	str.w	r4, [sl, #4]
  403b82:	9010      	str	r0, [sp, #64]	; 0x40
  403b84:	dd51      	ble.n	403c2a <_vfiprintf_r+0x8e6>
  403b86:	2a00      	cmp	r2, #0
  403b88:	f040 819b 	bne.w	403ec2 <_vfiprintf_r+0xb7e>
  403b8c:	9b03      	ldr	r3, [sp, #12]
  403b8e:	9a08      	ldr	r2, [sp, #32]
  403b90:	9901      	ldr	r1, [sp, #4]
  403b92:	428a      	cmp	r2, r1
  403b94:	bfac      	ite	ge
  403b96:	189b      	addge	r3, r3, r2
  403b98:	185b      	addlt	r3, r3, r1
  403b9a:	9303      	str	r3, [sp, #12]
  403b9c:	e04e      	b.n	403c3c <_vfiprintf_r+0x8f8>
  403b9e:	aa0f      	add	r2, sp, #60	; 0x3c
  403ba0:	4651      	mov	r1, sl
  403ba2:	4638      	mov	r0, r7
  403ba4:	f7ff fb8e 	bl	4032c4 <__sprint_r.part.0>
  403ba8:	2800      	cmp	r0, #0
  403baa:	f040 813f 	bne.w	403e2c <_vfiprintf_r+0xae8>
  403bae:	9910      	ldr	r1, [sp, #64]	; 0x40
  403bb0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403bb2:	1c48      	adds	r0, r1, #1
  403bb4:	46ce      	mov	lr, r9
  403bb6:	e77f      	b.n	403ab8 <_vfiprintf_r+0x774>
  403bb8:	aa0f      	add	r2, sp, #60	; 0x3c
  403bba:	4659      	mov	r1, fp
  403bbc:	4638      	mov	r0, r7
  403bbe:	f7ff fb81 	bl	4032c4 <__sprint_r.part.0>
  403bc2:	b960      	cbnz	r0, 403bde <_vfiprintf_r+0x89a>
  403bc4:	9910      	ldr	r1, [sp, #64]	; 0x40
  403bc6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403bc8:	1c48      	adds	r0, r1, #1
  403bca:	46ca      	mov	sl, r9
  403bcc:	e7bd      	b.n	403b4a <_vfiprintf_r+0x806>
  403bce:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403bd0:	f8dd b010 	ldr.w	fp, [sp, #16]
  403bd4:	2b00      	cmp	r3, #0
  403bd6:	f040 81d4 	bne.w	403f82 <_vfiprintf_r+0xc3e>
  403bda:	2300      	movs	r3, #0
  403bdc:	9310      	str	r3, [sp, #64]	; 0x40
  403bde:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403be2:	f013 0f01 	tst.w	r3, #1
  403be6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  403bea:	d102      	bne.n	403bf2 <_vfiprintf_r+0x8ae>
  403bec:	059a      	lsls	r2, r3, #22
  403bee:	f140 80de 	bpl.w	403dae <_vfiprintf_r+0xa6a>
  403bf2:	065b      	lsls	r3, r3, #25
  403bf4:	f53f acb2 	bmi.w	40355c <_vfiprintf_r+0x218>
  403bf8:	9803      	ldr	r0, [sp, #12]
  403bfa:	b02d      	add	sp, #180	; 0xb4
  403bfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403c00:	2a00      	cmp	r2, #0
  403c02:	f040 8106 	bne.w	403e12 <_vfiprintf_r+0xace>
  403c06:	9a05      	ldr	r2, [sp, #20]
  403c08:	921d      	str	r2, [sp, #116]	; 0x74
  403c0a:	2301      	movs	r3, #1
  403c0c:	9211      	str	r2, [sp, #68]	; 0x44
  403c0e:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  403c12:	9310      	str	r3, [sp, #64]	; 0x40
  403c14:	46ca      	mov	sl, r9
  403c16:	f10a 0a08 	add.w	sl, sl, #8
  403c1a:	9b02      	ldr	r3, [sp, #8]
  403c1c:	0759      	lsls	r1, r3, #29
  403c1e:	d504      	bpl.n	403c2a <_vfiprintf_r+0x8e6>
  403c20:	9b08      	ldr	r3, [sp, #32]
  403c22:	9901      	ldr	r1, [sp, #4]
  403c24:	1a5c      	subs	r4, r3, r1
  403c26:	2c00      	cmp	r4, #0
  403c28:	dc81      	bgt.n	403b2e <_vfiprintf_r+0x7ea>
  403c2a:	9b03      	ldr	r3, [sp, #12]
  403c2c:	9908      	ldr	r1, [sp, #32]
  403c2e:	9801      	ldr	r0, [sp, #4]
  403c30:	4281      	cmp	r1, r0
  403c32:	bfac      	ite	ge
  403c34:	185b      	addge	r3, r3, r1
  403c36:	181b      	addlt	r3, r3, r0
  403c38:	9303      	str	r3, [sp, #12]
  403c3a:	bb72      	cbnz	r2, 403c9a <_vfiprintf_r+0x956>
  403c3c:	2300      	movs	r3, #0
  403c3e:	9310      	str	r3, [sp, #64]	; 0x40
  403c40:	46ca      	mov	sl, r9
  403c42:	f7ff bbbc 	b.w	4033be <_vfiprintf_r+0x7a>
  403c46:	aa0f      	add	r2, sp, #60	; 0x3c
  403c48:	9904      	ldr	r1, [sp, #16]
  403c4a:	4620      	mov	r0, r4
  403c4c:	f7ff fb3a 	bl	4032c4 <__sprint_r.part.0>
  403c50:	bb50      	cbnz	r0, 403ca8 <_vfiprintf_r+0x964>
  403c52:	9910      	ldr	r1, [sp, #64]	; 0x40
  403c54:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403c56:	f101 0e01 	add.w	lr, r1, #1
  403c5a:	46cc      	mov	ip, r9
  403c5c:	e548      	b.n	4036f0 <_vfiprintf_r+0x3ac>
  403c5e:	2a00      	cmp	r2, #0
  403c60:	f040 8140 	bne.w	403ee4 <_vfiprintf_r+0xba0>
  403c64:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  403c68:	2900      	cmp	r1, #0
  403c6a:	f000 811b 	beq.w	403ea4 <_vfiprintf_r+0xb60>
  403c6e:	2201      	movs	r2, #1
  403c70:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  403c74:	4610      	mov	r0, r2
  403c76:	921d      	str	r2, [sp, #116]	; 0x74
  403c78:	911c      	str	r1, [sp, #112]	; 0x70
  403c7a:	46ca      	mov	sl, r9
  403c7c:	4601      	mov	r1, r0
  403c7e:	f10a 0a08 	add.w	sl, sl, #8
  403c82:	3001      	adds	r0, #1
  403c84:	e507      	b.n	403696 <_vfiprintf_r+0x352>
  403c86:	9b02      	ldr	r3, [sp, #8]
  403c88:	2a01      	cmp	r2, #1
  403c8a:	f000 8098 	beq.w	403dbe <_vfiprintf_r+0xa7a>
  403c8e:	2a02      	cmp	r2, #2
  403c90:	d10d      	bne.n	403cae <_vfiprintf_r+0x96a>
  403c92:	9302      	str	r3, [sp, #8]
  403c94:	2600      	movs	r6, #0
  403c96:	2700      	movs	r7, #0
  403c98:	e5b0      	b.n	4037fc <_vfiprintf_r+0x4b8>
  403c9a:	aa0f      	add	r2, sp, #60	; 0x3c
  403c9c:	9904      	ldr	r1, [sp, #16]
  403c9e:	9806      	ldr	r0, [sp, #24]
  403ca0:	f7ff fb10 	bl	4032c4 <__sprint_r.part.0>
  403ca4:	2800      	cmp	r0, #0
  403ca6:	d0c9      	beq.n	403c3c <_vfiprintf_r+0x8f8>
  403ca8:	f8dd b010 	ldr.w	fp, [sp, #16]
  403cac:	e797      	b.n	403bde <_vfiprintf_r+0x89a>
  403cae:	9302      	str	r3, [sp, #8]
  403cb0:	2600      	movs	r6, #0
  403cb2:	2700      	movs	r7, #0
  403cb4:	4649      	mov	r1, r9
  403cb6:	e000      	b.n	403cba <_vfiprintf_r+0x976>
  403cb8:	4659      	mov	r1, fp
  403cba:	08f2      	lsrs	r2, r6, #3
  403cbc:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  403cc0:	08f8      	lsrs	r0, r7, #3
  403cc2:	f006 0307 	and.w	r3, r6, #7
  403cc6:	4607      	mov	r7, r0
  403cc8:	4616      	mov	r6, r2
  403cca:	3330      	adds	r3, #48	; 0x30
  403ccc:	ea56 0207 	orrs.w	r2, r6, r7
  403cd0:	f801 3c01 	strb.w	r3, [r1, #-1]
  403cd4:	f101 3bff 	add.w	fp, r1, #4294967295
  403cd8:	d1ee      	bne.n	403cb8 <_vfiprintf_r+0x974>
  403cda:	9a02      	ldr	r2, [sp, #8]
  403cdc:	07d6      	lsls	r6, r2, #31
  403cde:	f57f ad9d 	bpl.w	40381c <_vfiprintf_r+0x4d8>
  403ce2:	2b30      	cmp	r3, #48	; 0x30
  403ce4:	f43f ad9a 	beq.w	40381c <_vfiprintf_r+0x4d8>
  403ce8:	3902      	subs	r1, #2
  403cea:	2330      	movs	r3, #48	; 0x30
  403cec:	f80b 3c01 	strb.w	r3, [fp, #-1]
  403cf0:	eba9 0301 	sub.w	r3, r9, r1
  403cf4:	9305      	str	r3, [sp, #20]
  403cf6:	468b      	mov	fp, r1
  403cf8:	e476      	b.n	4035e8 <_vfiprintf_r+0x2a4>
  403cfa:	9b03      	ldr	r3, [sp, #12]
  403cfc:	9a08      	ldr	r2, [sp, #32]
  403cfe:	428a      	cmp	r2, r1
  403d00:	bfac      	ite	ge
  403d02:	189b      	addge	r3, r3, r2
  403d04:	185b      	addlt	r3, r3, r1
  403d06:	9303      	str	r3, [sp, #12]
  403d08:	e798      	b.n	403c3c <_vfiprintf_r+0x8f8>
  403d0a:	2202      	movs	r2, #2
  403d0c:	e44d      	b.n	4035aa <_vfiprintf_r+0x266>
  403d0e:	2f00      	cmp	r7, #0
  403d10:	bf08      	it	eq
  403d12:	2e0a      	cmpeq	r6, #10
  403d14:	d352      	bcc.n	403dbc <_vfiprintf_r+0xa78>
  403d16:	46cb      	mov	fp, r9
  403d18:	4630      	mov	r0, r6
  403d1a:	4639      	mov	r1, r7
  403d1c:	220a      	movs	r2, #10
  403d1e:	2300      	movs	r3, #0
  403d20:	f001 ffaa 	bl	405c78 <__aeabi_uldivmod>
  403d24:	3230      	adds	r2, #48	; 0x30
  403d26:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  403d2a:	4630      	mov	r0, r6
  403d2c:	4639      	mov	r1, r7
  403d2e:	2300      	movs	r3, #0
  403d30:	220a      	movs	r2, #10
  403d32:	f001 ffa1 	bl	405c78 <__aeabi_uldivmod>
  403d36:	4606      	mov	r6, r0
  403d38:	460f      	mov	r7, r1
  403d3a:	ea56 0307 	orrs.w	r3, r6, r7
  403d3e:	d1eb      	bne.n	403d18 <_vfiprintf_r+0x9d4>
  403d40:	e56c      	b.n	40381c <_vfiprintf_r+0x4d8>
  403d42:	9405      	str	r4, [sp, #20]
  403d44:	46cb      	mov	fp, r9
  403d46:	e44f      	b.n	4035e8 <_vfiprintf_r+0x2a4>
  403d48:	aa0f      	add	r2, sp, #60	; 0x3c
  403d4a:	9904      	ldr	r1, [sp, #16]
  403d4c:	9806      	ldr	r0, [sp, #24]
  403d4e:	f7ff fab9 	bl	4032c4 <__sprint_r.part.0>
  403d52:	2800      	cmp	r0, #0
  403d54:	d1a8      	bne.n	403ca8 <_vfiprintf_r+0x964>
  403d56:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403d58:	46ca      	mov	sl, r9
  403d5a:	e75e      	b.n	403c1a <_vfiprintf_r+0x8d6>
  403d5c:	aa0f      	add	r2, sp, #60	; 0x3c
  403d5e:	9904      	ldr	r1, [sp, #16]
  403d60:	9806      	ldr	r0, [sp, #24]
  403d62:	f7ff faaf 	bl	4032c4 <__sprint_r.part.0>
  403d66:	2800      	cmp	r0, #0
  403d68:	d19e      	bne.n	403ca8 <_vfiprintf_r+0x964>
  403d6a:	46ca      	mov	sl, r9
  403d6c:	f7ff bbc0 	b.w	4034f0 <_vfiprintf_r+0x1ac>
  403d70:	004061b4 	.word	0x004061b4
  403d74:	004061a4 	.word	0x004061a4
  403d78:	3104      	adds	r1, #4
  403d7a:	6816      	ldr	r6, [r2, #0]
  403d7c:	9107      	str	r1, [sp, #28]
  403d7e:	2201      	movs	r2, #1
  403d80:	2700      	movs	r7, #0
  403d82:	e412      	b.n	4035aa <_vfiprintf_r+0x266>
  403d84:	9807      	ldr	r0, [sp, #28]
  403d86:	4601      	mov	r1, r0
  403d88:	3104      	adds	r1, #4
  403d8a:	6806      	ldr	r6, [r0, #0]
  403d8c:	9107      	str	r1, [sp, #28]
  403d8e:	2700      	movs	r7, #0
  403d90:	e40b      	b.n	4035aa <_vfiprintf_r+0x266>
  403d92:	680e      	ldr	r6, [r1, #0]
  403d94:	3104      	adds	r1, #4
  403d96:	9107      	str	r1, [sp, #28]
  403d98:	2700      	movs	r7, #0
  403d9a:	e591      	b.n	4038c0 <_vfiprintf_r+0x57c>
  403d9c:	9907      	ldr	r1, [sp, #28]
  403d9e:	680e      	ldr	r6, [r1, #0]
  403da0:	460a      	mov	r2, r1
  403da2:	17f7      	asrs	r7, r6, #31
  403da4:	3204      	adds	r2, #4
  403da6:	9207      	str	r2, [sp, #28]
  403da8:	4630      	mov	r0, r6
  403daa:	4639      	mov	r1, r7
  403dac:	e50f      	b.n	4037ce <_vfiprintf_r+0x48a>
  403dae:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403db2:	f000 fe7f 	bl	404ab4 <__retarget_lock_release_recursive>
  403db6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  403dba:	e71a      	b.n	403bf2 <_vfiprintf_r+0x8ae>
  403dbc:	9b02      	ldr	r3, [sp, #8]
  403dbe:	9302      	str	r3, [sp, #8]
  403dc0:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  403dc4:	3630      	adds	r6, #48	; 0x30
  403dc6:	2301      	movs	r3, #1
  403dc8:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  403dcc:	9305      	str	r3, [sp, #20]
  403dce:	e40b      	b.n	4035e8 <_vfiprintf_r+0x2a4>
  403dd0:	aa0f      	add	r2, sp, #60	; 0x3c
  403dd2:	9904      	ldr	r1, [sp, #16]
  403dd4:	9806      	ldr	r0, [sp, #24]
  403dd6:	f7ff fa75 	bl	4032c4 <__sprint_r.part.0>
  403dda:	2800      	cmp	r0, #0
  403ddc:	f47f af64 	bne.w	403ca8 <_vfiprintf_r+0x964>
  403de0:	9910      	ldr	r1, [sp, #64]	; 0x40
  403de2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403de4:	1c48      	adds	r0, r1, #1
  403de6:	46ca      	mov	sl, r9
  403de8:	e651      	b.n	403a8e <_vfiprintf_r+0x74a>
  403dea:	aa0f      	add	r2, sp, #60	; 0x3c
  403dec:	9904      	ldr	r1, [sp, #16]
  403dee:	9806      	ldr	r0, [sp, #24]
  403df0:	f7ff fa68 	bl	4032c4 <__sprint_r.part.0>
  403df4:	2800      	cmp	r0, #0
  403df6:	f47f af57 	bne.w	403ca8 <_vfiprintf_r+0x964>
  403dfa:	9910      	ldr	r1, [sp, #64]	; 0x40
  403dfc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403dfe:	1c48      	adds	r0, r1, #1
  403e00:	46ca      	mov	sl, r9
  403e02:	e448      	b.n	403696 <_vfiprintf_r+0x352>
  403e04:	2a00      	cmp	r2, #0
  403e06:	f040 8091 	bne.w	403f2c <_vfiprintf_r+0xbe8>
  403e0a:	2001      	movs	r0, #1
  403e0c:	4611      	mov	r1, r2
  403e0e:	46ca      	mov	sl, r9
  403e10:	e641      	b.n	403a96 <_vfiprintf_r+0x752>
  403e12:	aa0f      	add	r2, sp, #60	; 0x3c
  403e14:	9904      	ldr	r1, [sp, #16]
  403e16:	9806      	ldr	r0, [sp, #24]
  403e18:	f7ff fa54 	bl	4032c4 <__sprint_r.part.0>
  403e1c:	2800      	cmp	r0, #0
  403e1e:	f47f af43 	bne.w	403ca8 <_vfiprintf_r+0x964>
  403e22:	9810      	ldr	r0, [sp, #64]	; 0x40
  403e24:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403e26:	3001      	adds	r0, #1
  403e28:	46ca      	mov	sl, r9
  403e2a:	e667      	b.n	403afc <_vfiprintf_r+0x7b8>
  403e2c:	46d3      	mov	fp, sl
  403e2e:	e6d6      	b.n	403bde <_vfiprintf_r+0x89a>
  403e30:	9e07      	ldr	r6, [sp, #28]
  403e32:	3607      	adds	r6, #7
  403e34:	f026 0207 	bic.w	r2, r6, #7
  403e38:	f102 0108 	add.w	r1, r2, #8
  403e3c:	e9d2 6700 	ldrd	r6, r7, [r2]
  403e40:	9107      	str	r1, [sp, #28]
  403e42:	2201      	movs	r2, #1
  403e44:	f7ff bbb1 	b.w	4035aa <_vfiprintf_r+0x266>
  403e48:	9e07      	ldr	r6, [sp, #28]
  403e4a:	3607      	adds	r6, #7
  403e4c:	f026 0607 	bic.w	r6, r6, #7
  403e50:	e9d6 0100 	ldrd	r0, r1, [r6]
  403e54:	f106 0208 	add.w	r2, r6, #8
  403e58:	9207      	str	r2, [sp, #28]
  403e5a:	4606      	mov	r6, r0
  403e5c:	460f      	mov	r7, r1
  403e5e:	e4b6      	b.n	4037ce <_vfiprintf_r+0x48a>
  403e60:	9e07      	ldr	r6, [sp, #28]
  403e62:	3607      	adds	r6, #7
  403e64:	f026 0207 	bic.w	r2, r6, #7
  403e68:	f102 0108 	add.w	r1, r2, #8
  403e6c:	e9d2 6700 	ldrd	r6, r7, [r2]
  403e70:	9107      	str	r1, [sp, #28]
  403e72:	2200      	movs	r2, #0
  403e74:	f7ff bb99 	b.w	4035aa <_vfiprintf_r+0x266>
  403e78:	9e07      	ldr	r6, [sp, #28]
  403e7a:	3607      	adds	r6, #7
  403e7c:	f026 0107 	bic.w	r1, r6, #7
  403e80:	f101 0008 	add.w	r0, r1, #8
  403e84:	9007      	str	r0, [sp, #28]
  403e86:	e9d1 6700 	ldrd	r6, r7, [r1]
  403e8a:	e519      	b.n	4038c0 <_vfiprintf_r+0x57c>
  403e8c:	46cb      	mov	fp, r9
  403e8e:	f7ff bbab 	b.w	4035e8 <_vfiprintf_r+0x2a4>
  403e92:	252d      	movs	r5, #45	; 0x2d
  403e94:	4276      	negs	r6, r6
  403e96:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  403e9a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403e9e:	2201      	movs	r2, #1
  403ea0:	f7ff bb88 	b.w	4035b4 <_vfiprintf_r+0x270>
  403ea4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403ea6:	b9b3      	cbnz	r3, 403ed6 <_vfiprintf_r+0xb92>
  403ea8:	4611      	mov	r1, r2
  403eaa:	2001      	movs	r0, #1
  403eac:	46ca      	mov	sl, r9
  403eae:	e5f2      	b.n	403a96 <_vfiprintf_r+0x752>
  403eb0:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403eb4:	f000 fdfe 	bl	404ab4 <__retarget_lock_release_recursive>
  403eb8:	f04f 33ff 	mov.w	r3, #4294967295
  403ebc:	9303      	str	r3, [sp, #12]
  403ebe:	f7ff bb50 	b.w	403562 <_vfiprintf_r+0x21e>
  403ec2:	aa0f      	add	r2, sp, #60	; 0x3c
  403ec4:	9904      	ldr	r1, [sp, #16]
  403ec6:	9806      	ldr	r0, [sp, #24]
  403ec8:	f7ff f9fc 	bl	4032c4 <__sprint_r.part.0>
  403ecc:	2800      	cmp	r0, #0
  403ece:	f47f aeeb 	bne.w	403ca8 <_vfiprintf_r+0x964>
  403ed2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403ed4:	e6a9      	b.n	403c2a <_vfiprintf_r+0x8e6>
  403ed6:	ab0e      	add	r3, sp, #56	; 0x38
  403ed8:	2202      	movs	r2, #2
  403eda:	931c      	str	r3, [sp, #112]	; 0x70
  403edc:	921d      	str	r2, [sp, #116]	; 0x74
  403ede:	2001      	movs	r0, #1
  403ee0:	46ca      	mov	sl, r9
  403ee2:	e5d0      	b.n	403a86 <_vfiprintf_r+0x742>
  403ee4:	aa0f      	add	r2, sp, #60	; 0x3c
  403ee6:	9904      	ldr	r1, [sp, #16]
  403ee8:	9806      	ldr	r0, [sp, #24]
  403eea:	f7ff f9eb 	bl	4032c4 <__sprint_r.part.0>
  403eee:	2800      	cmp	r0, #0
  403ef0:	f47f aeda 	bne.w	403ca8 <_vfiprintf_r+0x964>
  403ef4:	9910      	ldr	r1, [sp, #64]	; 0x40
  403ef6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403ef8:	1c48      	adds	r0, r1, #1
  403efa:	46ca      	mov	sl, r9
  403efc:	e5a4      	b.n	403a48 <_vfiprintf_r+0x704>
  403efe:	9a07      	ldr	r2, [sp, #28]
  403f00:	9903      	ldr	r1, [sp, #12]
  403f02:	6813      	ldr	r3, [r2, #0]
  403f04:	17cd      	asrs	r5, r1, #31
  403f06:	4608      	mov	r0, r1
  403f08:	3204      	adds	r2, #4
  403f0a:	4629      	mov	r1, r5
  403f0c:	9207      	str	r2, [sp, #28]
  403f0e:	e9c3 0100 	strd	r0, r1, [r3]
  403f12:	f7ff ba54 	b.w	4033be <_vfiprintf_r+0x7a>
  403f16:	4658      	mov	r0, fp
  403f18:	9607      	str	r6, [sp, #28]
  403f1a:	9302      	str	r3, [sp, #8]
  403f1c:	f001 fc70 	bl	405800 <strlen>
  403f20:	2400      	movs	r4, #0
  403f22:	9005      	str	r0, [sp, #20]
  403f24:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403f28:	f7ff bb5e 	b.w	4035e8 <_vfiprintf_r+0x2a4>
  403f2c:	aa0f      	add	r2, sp, #60	; 0x3c
  403f2e:	9904      	ldr	r1, [sp, #16]
  403f30:	9806      	ldr	r0, [sp, #24]
  403f32:	f7ff f9c7 	bl	4032c4 <__sprint_r.part.0>
  403f36:	2800      	cmp	r0, #0
  403f38:	f47f aeb6 	bne.w	403ca8 <_vfiprintf_r+0x964>
  403f3c:	9910      	ldr	r1, [sp, #64]	; 0x40
  403f3e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403f40:	1c48      	adds	r0, r1, #1
  403f42:	46ca      	mov	sl, r9
  403f44:	e5a7      	b.n	403a96 <_vfiprintf_r+0x752>
  403f46:	9910      	ldr	r1, [sp, #64]	; 0x40
  403f48:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403f4a:	4e20      	ldr	r6, [pc, #128]	; (403fcc <_vfiprintf_r+0xc88>)
  403f4c:	3101      	adds	r1, #1
  403f4e:	f7ff bb90 	b.w	403672 <_vfiprintf_r+0x32e>
  403f52:	2c06      	cmp	r4, #6
  403f54:	bf28      	it	cs
  403f56:	2406      	movcs	r4, #6
  403f58:	9405      	str	r4, [sp, #20]
  403f5a:	9607      	str	r6, [sp, #28]
  403f5c:	9401      	str	r4, [sp, #4]
  403f5e:	f8df b070 	ldr.w	fp, [pc, #112]	; 403fd0 <_vfiprintf_r+0xc8c>
  403f62:	e4d5      	b.n	403910 <_vfiprintf_r+0x5cc>
  403f64:	9810      	ldr	r0, [sp, #64]	; 0x40
  403f66:	4e19      	ldr	r6, [pc, #100]	; (403fcc <_vfiprintf_r+0xc88>)
  403f68:	3001      	adds	r0, #1
  403f6a:	e603      	b.n	403b74 <_vfiprintf_r+0x830>
  403f6c:	9405      	str	r4, [sp, #20]
  403f6e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  403f72:	9607      	str	r6, [sp, #28]
  403f74:	9302      	str	r3, [sp, #8]
  403f76:	4604      	mov	r4, r0
  403f78:	f7ff bb36 	b.w	4035e8 <_vfiprintf_r+0x2a4>
  403f7c:	4686      	mov	lr, r0
  403f7e:	f7ff bbce 	b.w	40371e <_vfiprintf_r+0x3da>
  403f82:	9806      	ldr	r0, [sp, #24]
  403f84:	aa0f      	add	r2, sp, #60	; 0x3c
  403f86:	4659      	mov	r1, fp
  403f88:	f7ff f99c 	bl	4032c4 <__sprint_r.part.0>
  403f8c:	2800      	cmp	r0, #0
  403f8e:	f43f ae24 	beq.w	403bda <_vfiprintf_r+0x896>
  403f92:	e624      	b.n	403bde <_vfiprintf_r+0x89a>
  403f94:	9907      	ldr	r1, [sp, #28]
  403f96:	f898 2001 	ldrb.w	r2, [r8, #1]
  403f9a:	680c      	ldr	r4, [r1, #0]
  403f9c:	3104      	adds	r1, #4
  403f9e:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  403fa2:	46b8      	mov	r8, r7
  403fa4:	9107      	str	r1, [sp, #28]
  403fa6:	f7ff ba3f 	b.w	403428 <_vfiprintf_r+0xe4>
  403faa:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403fae:	e43c      	b.n	40382a <_vfiprintf_r+0x4e6>
  403fb0:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403fb4:	e521      	b.n	4039fa <_vfiprintf_r+0x6b6>
  403fb6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403fba:	f7ff bbf4 	b.w	4037a6 <_vfiprintf_r+0x462>
  403fbe:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403fc2:	e491      	b.n	4038e8 <_vfiprintf_r+0x5a4>
  403fc4:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  403fc8:	e469      	b.n	40389e <_vfiprintf_r+0x55a>
  403fca:	bf00      	nop
  403fcc:	004061a4 	.word	0x004061a4
  403fd0:	0040619c 	.word	0x0040619c

00403fd4 <__sbprintf>:
  403fd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403fd8:	460c      	mov	r4, r1
  403fda:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  403fde:	8989      	ldrh	r1, [r1, #12]
  403fe0:	6e66      	ldr	r6, [r4, #100]	; 0x64
  403fe2:	89e5      	ldrh	r5, [r4, #14]
  403fe4:	9619      	str	r6, [sp, #100]	; 0x64
  403fe6:	f021 0102 	bic.w	r1, r1, #2
  403fea:	4606      	mov	r6, r0
  403fec:	69e0      	ldr	r0, [r4, #28]
  403fee:	f8ad 100c 	strh.w	r1, [sp, #12]
  403ff2:	4617      	mov	r7, r2
  403ff4:	f44f 6180 	mov.w	r1, #1024	; 0x400
  403ff8:	6a62      	ldr	r2, [r4, #36]	; 0x24
  403ffa:	f8ad 500e 	strh.w	r5, [sp, #14]
  403ffe:	4698      	mov	r8, r3
  404000:	ad1a      	add	r5, sp, #104	; 0x68
  404002:	2300      	movs	r3, #0
  404004:	9007      	str	r0, [sp, #28]
  404006:	a816      	add	r0, sp, #88	; 0x58
  404008:	9209      	str	r2, [sp, #36]	; 0x24
  40400a:	9306      	str	r3, [sp, #24]
  40400c:	9500      	str	r5, [sp, #0]
  40400e:	9504      	str	r5, [sp, #16]
  404010:	9102      	str	r1, [sp, #8]
  404012:	9105      	str	r1, [sp, #20]
  404014:	f000 fd48 	bl	404aa8 <__retarget_lock_init_recursive>
  404018:	4643      	mov	r3, r8
  40401a:	463a      	mov	r2, r7
  40401c:	4669      	mov	r1, sp
  40401e:	4630      	mov	r0, r6
  404020:	f7ff f990 	bl	403344 <_vfiprintf_r>
  404024:	1e05      	subs	r5, r0, #0
  404026:	db07      	blt.n	404038 <__sbprintf+0x64>
  404028:	4630      	mov	r0, r6
  40402a:	4669      	mov	r1, sp
  40402c:	f000 f928 	bl	404280 <_fflush_r>
  404030:	2800      	cmp	r0, #0
  404032:	bf18      	it	ne
  404034:	f04f 35ff 	movne.w	r5, #4294967295
  404038:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  40403c:	065b      	lsls	r3, r3, #25
  40403e:	d503      	bpl.n	404048 <__sbprintf+0x74>
  404040:	89a3      	ldrh	r3, [r4, #12]
  404042:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404046:	81a3      	strh	r3, [r4, #12]
  404048:	9816      	ldr	r0, [sp, #88]	; 0x58
  40404a:	f000 fd2f 	bl	404aac <__retarget_lock_close_recursive>
  40404e:	4628      	mov	r0, r5
  404050:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  404054:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404058 <__swsetup_r>:
  404058:	b538      	push	{r3, r4, r5, lr}
  40405a:	4b30      	ldr	r3, [pc, #192]	; (40411c <__swsetup_r+0xc4>)
  40405c:	681b      	ldr	r3, [r3, #0]
  40405e:	4605      	mov	r5, r0
  404060:	460c      	mov	r4, r1
  404062:	b113      	cbz	r3, 40406a <__swsetup_r+0x12>
  404064:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  404066:	2a00      	cmp	r2, #0
  404068:	d038      	beq.n	4040dc <__swsetup_r+0x84>
  40406a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40406e:	b293      	uxth	r3, r2
  404070:	0718      	lsls	r0, r3, #28
  404072:	d50c      	bpl.n	40408e <__swsetup_r+0x36>
  404074:	6920      	ldr	r0, [r4, #16]
  404076:	b1a8      	cbz	r0, 4040a4 <__swsetup_r+0x4c>
  404078:	f013 0201 	ands.w	r2, r3, #1
  40407c:	d01e      	beq.n	4040bc <__swsetup_r+0x64>
  40407e:	6963      	ldr	r3, [r4, #20]
  404080:	2200      	movs	r2, #0
  404082:	425b      	negs	r3, r3
  404084:	61a3      	str	r3, [r4, #24]
  404086:	60a2      	str	r2, [r4, #8]
  404088:	b1f0      	cbz	r0, 4040c8 <__swsetup_r+0x70>
  40408a:	2000      	movs	r0, #0
  40408c:	bd38      	pop	{r3, r4, r5, pc}
  40408e:	06d9      	lsls	r1, r3, #27
  404090:	d53c      	bpl.n	40410c <__swsetup_r+0xb4>
  404092:	0758      	lsls	r0, r3, #29
  404094:	d426      	bmi.n	4040e4 <__swsetup_r+0x8c>
  404096:	6920      	ldr	r0, [r4, #16]
  404098:	f042 0308 	orr.w	r3, r2, #8
  40409c:	81a3      	strh	r3, [r4, #12]
  40409e:	b29b      	uxth	r3, r3
  4040a0:	2800      	cmp	r0, #0
  4040a2:	d1e9      	bne.n	404078 <__swsetup_r+0x20>
  4040a4:	f403 7220 	and.w	r2, r3, #640	; 0x280
  4040a8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  4040ac:	d0e4      	beq.n	404078 <__swsetup_r+0x20>
  4040ae:	4628      	mov	r0, r5
  4040b0:	4621      	mov	r1, r4
  4040b2:	f000 fd2f 	bl	404b14 <__smakebuf_r>
  4040b6:	89a3      	ldrh	r3, [r4, #12]
  4040b8:	6920      	ldr	r0, [r4, #16]
  4040ba:	e7dd      	b.n	404078 <__swsetup_r+0x20>
  4040bc:	0799      	lsls	r1, r3, #30
  4040be:	bf58      	it	pl
  4040c0:	6962      	ldrpl	r2, [r4, #20]
  4040c2:	60a2      	str	r2, [r4, #8]
  4040c4:	2800      	cmp	r0, #0
  4040c6:	d1e0      	bne.n	40408a <__swsetup_r+0x32>
  4040c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4040cc:	061a      	lsls	r2, r3, #24
  4040ce:	d5dd      	bpl.n	40408c <__swsetup_r+0x34>
  4040d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4040d4:	81a3      	strh	r3, [r4, #12]
  4040d6:	f04f 30ff 	mov.w	r0, #4294967295
  4040da:	bd38      	pop	{r3, r4, r5, pc}
  4040dc:	4618      	mov	r0, r3
  4040de:	f000 f927 	bl	404330 <__sinit>
  4040e2:	e7c2      	b.n	40406a <__swsetup_r+0x12>
  4040e4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4040e6:	b151      	cbz	r1, 4040fe <__swsetup_r+0xa6>
  4040e8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4040ec:	4299      	cmp	r1, r3
  4040ee:	d004      	beq.n	4040fa <__swsetup_r+0xa2>
  4040f0:	4628      	mov	r0, r5
  4040f2:	f000 fa43 	bl	40457c <_free_r>
  4040f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4040fa:	2300      	movs	r3, #0
  4040fc:	6323      	str	r3, [r4, #48]	; 0x30
  4040fe:	2300      	movs	r3, #0
  404100:	6920      	ldr	r0, [r4, #16]
  404102:	6063      	str	r3, [r4, #4]
  404104:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  404108:	6020      	str	r0, [r4, #0]
  40410a:	e7c5      	b.n	404098 <__swsetup_r+0x40>
  40410c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  404110:	2309      	movs	r3, #9
  404112:	602b      	str	r3, [r5, #0]
  404114:	f04f 30ff 	mov.w	r0, #4294967295
  404118:	81a2      	strh	r2, [r4, #12]
  40411a:	bd38      	pop	{r3, r4, r5, pc}
  40411c:	2000000c 	.word	0x2000000c

00404120 <register_fini>:
  404120:	4b02      	ldr	r3, [pc, #8]	; (40412c <register_fini+0xc>)
  404122:	b113      	cbz	r3, 40412a <register_fini+0xa>
  404124:	4802      	ldr	r0, [pc, #8]	; (404130 <register_fini+0x10>)
  404126:	f000 b805 	b.w	404134 <atexit>
  40412a:	4770      	bx	lr
  40412c:	00000000 	.word	0x00000000
  404130:	004043a1 	.word	0x004043a1

00404134 <atexit>:
  404134:	2300      	movs	r3, #0
  404136:	4601      	mov	r1, r0
  404138:	461a      	mov	r2, r3
  40413a:	4618      	mov	r0, r3
  40413c:	f001 bc74 	b.w	405a28 <__register_exitproc>

00404140 <__sflush_r>:
  404140:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404144:	b29a      	uxth	r2, r3
  404146:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40414a:	460d      	mov	r5, r1
  40414c:	0711      	lsls	r1, r2, #28
  40414e:	4680      	mov	r8, r0
  404150:	d43a      	bmi.n	4041c8 <__sflush_r+0x88>
  404152:	686a      	ldr	r2, [r5, #4]
  404154:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  404158:	2a00      	cmp	r2, #0
  40415a:	81ab      	strh	r3, [r5, #12]
  40415c:	dd6f      	ble.n	40423e <__sflush_r+0xfe>
  40415e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404160:	2c00      	cmp	r4, #0
  404162:	d049      	beq.n	4041f8 <__sflush_r+0xb8>
  404164:	2200      	movs	r2, #0
  404166:	b29b      	uxth	r3, r3
  404168:	f8d8 6000 	ldr.w	r6, [r8]
  40416c:	f8c8 2000 	str.w	r2, [r8]
  404170:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  404174:	d067      	beq.n	404246 <__sflush_r+0x106>
  404176:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  404178:	075f      	lsls	r7, r3, #29
  40417a:	d505      	bpl.n	404188 <__sflush_r+0x48>
  40417c:	6869      	ldr	r1, [r5, #4]
  40417e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  404180:	1a52      	subs	r2, r2, r1
  404182:	b10b      	cbz	r3, 404188 <__sflush_r+0x48>
  404184:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  404186:	1ad2      	subs	r2, r2, r3
  404188:	2300      	movs	r3, #0
  40418a:	69e9      	ldr	r1, [r5, #28]
  40418c:	4640      	mov	r0, r8
  40418e:	47a0      	blx	r4
  404190:	1c44      	adds	r4, r0, #1
  404192:	d03c      	beq.n	40420e <__sflush_r+0xce>
  404194:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  404198:	692a      	ldr	r2, [r5, #16]
  40419a:	602a      	str	r2, [r5, #0]
  40419c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4041a0:	2200      	movs	r2, #0
  4041a2:	81ab      	strh	r3, [r5, #12]
  4041a4:	04db      	lsls	r3, r3, #19
  4041a6:	606a      	str	r2, [r5, #4]
  4041a8:	d447      	bmi.n	40423a <__sflush_r+0xfa>
  4041aa:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4041ac:	f8c8 6000 	str.w	r6, [r8]
  4041b0:	b311      	cbz	r1, 4041f8 <__sflush_r+0xb8>
  4041b2:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4041b6:	4299      	cmp	r1, r3
  4041b8:	d002      	beq.n	4041c0 <__sflush_r+0x80>
  4041ba:	4640      	mov	r0, r8
  4041bc:	f000 f9de 	bl	40457c <_free_r>
  4041c0:	2000      	movs	r0, #0
  4041c2:	6328      	str	r0, [r5, #48]	; 0x30
  4041c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4041c8:	692e      	ldr	r6, [r5, #16]
  4041ca:	b1ae      	cbz	r6, 4041f8 <__sflush_r+0xb8>
  4041cc:	682c      	ldr	r4, [r5, #0]
  4041ce:	602e      	str	r6, [r5, #0]
  4041d0:	0791      	lsls	r1, r2, #30
  4041d2:	bf0c      	ite	eq
  4041d4:	696b      	ldreq	r3, [r5, #20]
  4041d6:	2300      	movne	r3, #0
  4041d8:	1ba4      	subs	r4, r4, r6
  4041da:	60ab      	str	r3, [r5, #8]
  4041dc:	e00a      	b.n	4041f4 <__sflush_r+0xb4>
  4041de:	4623      	mov	r3, r4
  4041e0:	4632      	mov	r2, r6
  4041e2:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4041e4:	69e9      	ldr	r1, [r5, #28]
  4041e6:	4640      	mov	r0, r8
  4041e8:	47b8      	blx	r7
  4041ea:	2800      	cmp	r0, #0
  4041ec:	eba4 0400 	sub.w	r4, r4, r0
  4041f0:	4406      	add	r6, r0
  4041f2:	dd04      	ble.n	4041fe <__sflush_r+0xbe>
  4041f4:	2c00      	cmp	r4, #0
  4041f6:	dcf2      	bgt.n	4041de <__sflush_r+0x9e>
  4041f8:	2000      	movs	r0, #0
  4041fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4041fe:	89ab      	ldrh	r3, [r5, #12]
  404200:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404204:	81ab      	strh	r3, [r5, #12]
  404206:	f04f 30ff 	mov.w	r0, #4294967295
  40420a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40420e:	f8d8 4000 	ldr.w	r4, [r8]
  404212:	2c1d      	cmp	r4, #29
  404214:	d8f3      	bhi.n	4041fe <__sflush_r+0xbe>
  404216:	4b19      	ldr	r3, [pc, #100]	; (40427c <__sflush_r+0x13c>)
  404218:	40e3      	lsrs	r3, r4
  40421a:	43db      	mvns	r3, r3
  40421c:	f013 0301 	ands.w	r3, r3, #1
  404220:	d1ed      	bne.n	4041fe <__sflush_r+0xbe>
  404222:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  404226:	606b      	str	r3, [r5, #4]
  404228:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  40422c:	6929      	ldr	r1, [r5, #16]
  40422e:	81ab      	strh	r3, [r5, #12]
  404230:	04da      	lsls	r2, r3, #19
  404232:	6029      	str	r1, [r5, #0]
  404234:	d5b9      	bpl.n	4041aa <__sflush_r+0x6a>
  404236:	2c00      	cmp	r4, #0
  404238:	d1b7      	bne.n	4041aa <__sflush_r+0x6a>
  40423a:	6528      	str	r0, [r5, #80]	; 0x50
  40423c:	e7b5      	b.n	4041aa <__sflush_r+0x6a>
  40423e:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404240:	2a00      	cmp	r2, #0
  404242:	dc8c      	bgt.n	40415e <__sflush_r+0x1e>
  404244:	e7d8      	b.n	4041f8 <__sflush_r+0xb8>
  404246:	2301      	movs	r3, #1
  404248:	69e9      	ldr	r1, [r5, #28]
  40424a:	4640      	mov	r0, r8
  40424c:	47a0      	blx	r4
  40424e:	1c43      	adds	r3, r0, #1
  404250:	4602      	mov	r2, r0
  404252:	d002      	beq.n	40425a <__sflush_r+0x11a>
  404254:	89ab      	ldrh	r3, [r5, #12]
  404256:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404258:	e78e      	b.n	404178 <__sflush_r+0x38>
  40425a:	f8d8 3000 	ldr.w	r3, [r8]
  40425e:	2b00      	cmp	r3, #0
  404260:	d0f8      	beq.n	404254 <__sflush_r+0x114>
  404262:	2b1d      	cmp	r3, #29
  404264:	d001      	beq.n	40426a <__sflush_r+0x12a>
  404266:	2b16      	cmp	r3, #22
  404268:	d102      	bne.n	404270 <__sflush_r+0x130>
  40426a:	f8c8 6000 	str.w	r6, [r8]
  40426e:	e7c3      	b.n	4041f8 <__sflush_r+0xb8>
  404270:	89ab      	ldrh	r3, [r5, #12]
  404272:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404276:	81ab      	strh	r3, [r5, #12]
  404278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40427c:	20400001 	.word	0x20400001

00404280 <_fflush_r>:
  404280:	b538      	push	{r3, r4, r5, lr}
  404282:	460d      	mov	r5, r1
  404284:	4604      	mov	r4, r0
  404286:	b108      	cbz	r0, 40428c <_fflush_r+0xc>
  404288:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40428a:	b1bb      	cbz	r3, 4042bc <_fflush_r+0x3c>
  40428c:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  404290:	b188      	cbz	r0, 4042b6 <_fflush_r+0x36>
  404292:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404294:	07db      	lsls	r3, r3, #31
  404296:	d401      	bmi.n	40429c <_fflush_r+0x1c>
  404298:	0581      	lsls	r1, r0, #22
  40429a:	d517      	bpl.n	4042cc <_fflush_r+0x4c>
  40429c:	4620      	mov	r0, r4
  40429e:	4629      	mov	r1, r5
  4042a0:	f7ff ff4e 	bl	404140 <__sflush_r>
  4042a4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4042a6:	07da      	lsls	r2, r3, #31
  4042a8:	4604      	mov	r4, r0
  4042aa:	d402      	bmi.n	4042b2 <_fflush_r+0x32>
  4042ac:	89ab      	ldrh	r3, [r5, #12]
  4042ae:	059b      	lsls	r3, r3, #22
  4042b0:	d507      	bpl.n	4042c2 <_fflush_r+0x42>
  4042b2:	4620      	mov	r0, r4
  4042b4:	bd38      	pop	{r3, r4, r5, pc}
  4042b6:	4604      	mov	r4, r0
  4042b8:	4620      	mov	r0, r4
  4042ba:	bd38      	pop	{r3, r4, r5, pc}
  4042bc:	f000 f838 	bl	404330 <__sinit>
  4042c0:	e7e4      	b.n	40428c <_fflush_r+0xc>
  4042c2:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4042c4:	f000 fbf6 	bl	404ab4 <__retarget_lock_release_recursive>
  4042c8:	4620      	mov	r0, r4
  4042ca:	bd38      	pop	{r3, r4, r5, pc}
  4042cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4042ce:	f000 fbef 	bl	404ab0 <__retarget_lock_acquire_recursive>
  4042d2:	e7e3      	b.n	40429c <_fflush_r+0x1c>

004042d4 <_cleanup_r>:
  4042d4:	4901      	ldr	r1, [pc, #4]	; (4042dc <_cleanup_r+0x8>)
  4042d6:	f000 bbaf 	b.w	404a38 <_fwalk_reent>
  4042da:	bf00      	nop
  4042dc:	00405b11 	.word	0x00405b11

004042e0 <std.isra.0>:
  4042e0:	b510      	push	{r4, lr}
  4042e2:	2300      	movs	r3, #0
  4042e4:	4604      	mov	r4, r0
  4042e6:	8181      	strh	r1, [r0, #12]
  4042e8:	81c2      	strh	r2, [r0, #14]
  4042ea:	6003      	str	r3, [r0, #0]
  4042ec:	6043      	str	r3, [r0, #4]
  4042ee:	6083      	str	r3, [r0, #8]
  4042f0:	6643      	str	r3, [r0, #100]	; 0x64
  4042f2:	6103      	str	r3, [r0, #16]
  4042f4:	6143      	str	r3, [r0, #20]
  4042f6:	6183      	str	r3, [r0, #24]
  4042f8:	4619      	mov	r1, r3
  4042fa:	2208      	movs	r2, #8
  4042fc:	305c      	adds	r0, #92	; 0x5c
  4042fe:	f7fe fec3 	bl	403088 <memset>
  404302:	4807      	ldr	r0, [pc, #28]	; (404320 <std.isra.0+0x40>)
  404304:	4907      	ldr	r1, [pc, #28]	; (404324 <std.isra.0+0x44>)
  404306:	4a08      	ldr	r2, [pc, #32]	; (404328 <std.isra.0+0x48>)
  404308:	4b08      	ldr	r3, [pc, #32]	; (40432c <std.isra.0+0x4c>)
  40430a:	6220      	str	r0, [r4, #32]
  40430c:	61e4      	str	r4, [r4, #28]
  40430e:	6261      	str	r1, [r4, #36]	; 0x24
  404310:	62a2      	str	r2, [r4, #40]	; 0x28
  404312:	62e3      	str	r3, [r4, #44]	; 0x2c
  404314:	f104 0058 	add.w	r0, r4, #88	; 0x58
  404318:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40431c:	f000 bbc4 	b.w	404aa8 <__retarget_lock_init_recursive>
  404320:	00405775 	.word	0x00405775
  404324:	00405799 	.word	0x00405799
  404328:	004057d5 	.word	0x004057d5
  40432c:	004057f5 	.word	0x004057f5

00404330 <__sinit>:
  404330:	b510      	push	{r4, lr}
  404332:	4604      	mov	r4, r0
  404334:	4812      	ldr	r0, [pc, #72]	; (404380 <__sinit+0x50>)
  404336:	f000 fbbb 	bl	404ab0 <__retarget_lock_acquire_recursive>
  40433a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  40433c:	b9d2      	cbnz	r2, 404374 <__sinit+0x44>
  40433e:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  404342:	4810      	ldr	r0, [pc, #64]	; (404384 <__sinit+0x54>)
  404344:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  404348:	2103      	movs	r1, #3
  40434a:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  40434e:	63e0      	str	r0, [r4, #60]	; 0x3c
  404350:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  404354:	6860      	ldr	r0, [r4, #4]
  404356:	2104      	movs	r1, #4
  404358:	f7ff ffc2 	bl	4042e0 <std.isra.0>
  40435c:	2201      	movs	r2, #1
  40435e:	2109      	movs	r1, #9
  404360:	68a0      	ldr	r0, [r4, #8]
  404362:	f7ff ffbd 	bl	4042e0 <std.isra.0>
  404366:	2202      	movs	r2, #2
  404368:	2112      	movs	r1, #18
  40436a:	68e0      	ldr	r0, [r4, #12]
  40436c:	f7ff ffb8 	bl	4042e0 <std.isra.0>
  404370:	2301      	movs	r3, #1
  404372:	63a3      	str	r3, [r4, #56]	; 0x38
  404374:	4802      	ldr	r0, [pc, #8]	; (404380 <__sinit+0x50>)
  404376:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40437a:	f000 bb9b 	b.w	404ab4 <__retarget_lock_release_recursive>
  40437e:	bf00      	nop
  404380:	20008de0 	.word	0x20008de0
  404384:	004042d5 	.word	0x004042d5

00404388 <__sfp_lock_acquire>:
  404388:	4801      	ldr	r0, [pc, #4]	; (404390 <__sfp_lock_acquire+0x8>)
  40438a:	f000 bb91 	b.w	404ab0 <__retarget_lock_acquire_recursive>
  40438e:	bf00      	nop
  404390:	20008df4 	.word	0x20008df4

00404394 <__sfp_lock_release>:
  404394:	4801      	ldr	r0, [pc, #4]	; (40439c <__sfp_lock_release+0x8>)
  404396:	f000 bb8d 	b.w	404ab4 <__retarget_lock_release_recursive>
  40439a:	bf00      	nop
  40439c:	20008df4 	.word	0x20008df4

004043a0 <__libc_fini_array>:
  4043a0:	b538      	push	{r3, r4, r5, lr}
  4043a2:	4c0a      	ldr	r4, [pc, #40]	; (4043cc <__libc_fini_array+0x2c>)
  4043a4:	4d0a      	ldr	r5, [pc, #40]	; (4043d0 <__libc_fini_array+0x30>)
  4043a6:	1b64      	subs	r4, r4, r5
  4043a8:	10a4      	asrs	r4, r4, #2
  4043aa:	d00a      	beq.n	4043c2 <__libc_fini_array+0x22>
  4043ac:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4043b0:	3b01      	subs	r3, #1
  4043b2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4043b6:	3c01      	subs	r4, #1
  4043b8:	f855 3904 	ldr.w	r3, [r5], #-4
  4043bc:	4798      	blx	r3
  4043be:	2c00      	cmp	r4, #0
  4043c0:	d1f9      	bne.n	4043b6 <__libc_fini_array+0x16>
  4043c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4043c6:	f001 bf8f 	b.w	4062e8 <_fini>
  4043ca:	bf00      	nop
  4043cc:	004062f8 	.word	0x004062f8
  4043d0:	004062f4 	.word	0x004062f4

004043d4 <__fputwc>:
  4043d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4043d8:	b082      	sub	sp, #8
  4043da:	4680      	mov	r8, r0
  4043dc:	4689      	mov	r9, r1
  4043de:	4614      	mov	r4, r2
  4043e0:	f000 fb54 	bl	404a8c <__locale_mb_cur_max>
  4043e4:	2801      	cmp	r0, #1
  4043e6:	d036      	beq.n	404456 <__fputwc+0x82>
  4043e8:	464a      	mov	r2, r9
  4043ea:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  4043ee:	a901      	add	r1, sp, #4
  4043f0:	4640      	mov	r0, r8
  4043f2:	f001 facb 	bl	40598c <_wcrtomb_r>
  4043f6:	1c42      	adds	r2, r0, #1
  4043f8:	4606      	mov	r6, r0
  4043fa:	d025      	beq.n	404448 <__fputwc+0x74>
  4043fc:	b3a8      	cbz	r0, 40446a <__fputwc+0x96>
  4043fe:	f89d e004 	ldrb.w	lr, [sp, #4]
  404402:	2500      	movs	r5, #0
  404404:	f10d 0a04 	add.w	sl, sp, #4
  404408:	e009      	b.n	40441e <__fputwc+0x4a>
  40440a:	6823      	ldr	r3, [r4, #0]
  40440c:	1c5a      	adds	r2, r3, #1
  40440e:	6022      	str	r2, [r4, #0]
  404410:	f883 e000 	strb.w	lr, [r3]
  404414:	3501      	adds	r5, #1
  404416:	42b5      	cmp	r5, r6
  404418:	d227      	bcs.n	40446a <__fputwc+0x96>
  40441a:	f815 e00a 	ldrb.w	lr, [r5, sl]
  40441e:	68a3      	ldr	r3, [r4, #8]
  404420:	3b01      	subs	r3, #1
  404422:	2b00      	cmp	r3, #0
  404424:	60a3      	str	r3, [r4, #8]
  404426:	daf0      	bge.n	40440a <__fputwc+0x36>
  404428:	69a7      	ldr	r7, [r4, #24]
  40442a:	42bb      	cmp	r3, r7
  40442c:	4671      	mov	r1, lr
  40442e:	4622      	mov	r2, r4
  404430:	4640      	mov	r0, r8
  404432:	db02      	blt.n	40443a <__fputwc+0x66>
  404434:	f1be 0f0a 	cmp.w	lr, #10
  404438:	d1e7      	bne.n	40440a <__fputwc+0x36>
  40443a:	f001 fa4f 	bl	4058dc <__swbuf_r>
  40443e:	1c43      	adds	r3, r0, #1
  404440:	d1e8      	bne.n	404414 <__fputwc+0x40>
  404442:	b002      	add	sp, #8
  404444:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404448:	89a3      	ldrh	r3, [r4, #12]
  40444a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40444e:	81a3      	strh	r3, [r4, #12]
  404450:	b002      	add	sp, #8
  404452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404456:	f109 33ff 	add.w	r3, r9, #4294967295
  40445a:	2bfe      	cmp	r3, #254	; 0xfe
  40445c:	d8c4      	bhi.n	4043e8 <__fputwc+0x14>
  40445e:	fa5f fe89 	uxtb.w	lr, r9
  404462:	4606      	mov	r6, r0
  404464:	f88d e004 	strb.w	lr, [sp, #4]
  404468:	e7cb      	b.n	404402 <__fputwc+0x2e>
  40446a:	4648      	mov	r0, r9
  40446c:	b002      	add	sp, #8
  40446e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404472:	bf00      	nop

00404474 <_fputwc_r>:
  404474:	b530      	push	{r4, r5, lr}
  404476:	6e53      	ldr	r3, [r2, #100]	; 0x64
  404478:	f013 0f01 	tst.w	r3, #1
  40447c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  404480:	4614      	mov	r4, r2
  404482:	b083      	sub	sp, #12
  404484:	4605      	mov	r5, r0
  404486:	b29a      	uxth	r2, r3
  404488:	d101      	bne.n	40448e <_fputwc_r+0x1a>
  40448a:	0590      	lsls	r0, r2, #22
  40448c:	d51c      	bpl.n	4044c8 <_fputwc_r+0x54>
  40448e:	0490      	lsls	r0, r2, #18
  404490:	d406      	bmi.n	4044a0 <_fputwc_r+0x2c>
  404492:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404494:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404498:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40449c:	81a3      	strh	r3, [r4, #12]
  40449e:	6662      	str	r2, [r4, #100]	; 0x64
  4044a0:	4628      	mov	r0, r5
  4044a2:	4622      	mov	r2, r4
  4044a4:	f7ff ff96 	bl	4043d4 <__fputwc>
  4044a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4044aa:	07da      	lsls	r2, r3, #31
  4044ac:	4605      	mov	r5, r0
  4044ae:	d402      	bmi.n	4044b6 <_fputwc_r+0x42>
  4044b0:	89a3      	ldrh	r3, [r4, #12]
  4044b2:	059b      	lsls	r3, r3, #22
  4044b4:	d502      	bpl.n	4044bc <_fputwc_r+0x48>
  4044b6:	4628      	mov	r0, r5
  4044b8:	b003      	add	sp, #12
  4044ba:	bd30      	pop	{r4, r5, pc}
  4044bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4044be:	f000 faf9 	bl	404ab4 <__retarget_lock_release_recursive>
  4044c2:	4628      	mov	r0, r5
  4044c4:	b003      	add	sp, #12
  4044c6:	bd30      	pop	{r4, r5, pc}
  4044c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4044ca:	9101      	str	r1, [sp, #4]
  4044cc:	f000 faf0 	bl	404ab0 <__retarget_lock_acquire_recursive>
  4044d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4044d4:	9901      	ldr	r1, [sp, #4]
  4044d6:	b29a      	uxth	r2, r3
  4044d8:	e7d9      	b.n	40448e <_fputwc_r+0x1a>
  4044da:	bf00      	nop

004044dc <_malloc_trim_r>:
  4044dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4044de:	4f24      	ldr	r7, [pc, #144]	; (404570 <_malloc_trim_r+0x94>)
  4044e0:	460c      	mov	r4, r1
  4044e2:	4606      	mov	r6, r0
  4044e4:	f000 ff82 	bl	4053ec <__malloc_lock>
  4044e8:	68bb      	ldr	r3, [r7, #8]
  4044ea:	685d      	ldr	r5, [r3, #4]
  4044ec:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4044f0:	310f      	adds	r1, #15
  4044f2:	f025 0503 	bic.w	r5, r5, #3
  4044f6:	4429      	add	r1, r5
  4044f8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4044fc:	f021 010f 	bic.w	r1, r1, #15
  404500:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404504:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404508:	db07      	blt.n	40451a <_malloc_trim_r+0x3e>
  40450a:	2100      	movs	r1, #0
  40450c:	4630      	mov	r0, r6
  40450e:	f001 f91f 	bl	405750 <_sbrk_r>
  404512:	68bb      	ldr	r3, [r7, #8]
  404514:	442b      	add	r3, r5
  404516:	4298      	cmp	r0, r3
  404518:	d004      	beq.n	404524 <_malloc_trim_r+0x48>
  40451a:	4630      	mov	r0, r6
  40451c:	f000 ff6c 	bl	4053f8 <__malloc_unlock>
  404520:	2000      	movs	r0, #0
  404522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404524:	4261      	negs	r1, r4
  404526:	4630      	mov	r0, r6
  404528:	f001 f912 	bl	405750 <_sbrk_r>
  40452c:	3001      	adds	r0, #1
  40452e:	d00d      	beq.n	40454c <_malloc_trim_r+0x70>
  404530:	4b10      	ldr	r3, [pc, #64]	; (404574 <_malloc_trim_r+0x98>)
  404532:	68ba      	ldr	r2, [r7, #8]
  404534:	6819      	ldr	r1, [r3, #0]
  404536:	1b2d      	subs	r5, r5, r4
  404538:	f045 0501 	orr.w	r5, r5, #1
  40453c:	4630      	mov	r0, r6
  40453e:	1b09      	subs	r1, r1, r4
  404540:	6055      	str	r5, [r2, #4]
  404542:	6019      	str	r1, [r3, #0]
  404544:	f000 ff58 	bl	4053f8 <__malloc_unlock>
  404548:	2001      	movs	r0, #1
  40454a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40454c:	2100      	movs	r1, #0
  40454e:	4630      	mov	r0, r6
  404550:	f001 f8fe 	bl	405750 <_sbrk_r>
  404554:	68ba      	ldr	r2, [r7, #8]
  404556:	1a83      	subs	r3, r0, r2
  404558:	2b0f      	cmp	r3, #15
  40455a:	ddde      	ble.n	40451a <_malloc_trim_r+0x3e>
  40455c:	4c06      	ldr	r4, [pc, #24]	; (404578 <_malloc_trim_r+0x9c>)
  40455e:	4905      	ldr	r1, [pc, #20]	; (404574 <_malloc_trim_r+0x98>)
  404560:	6824      	ldr	r4, [r4, #0]
  404562:	f043 0301 	orr.w	r3, r3, #1
  404566:	1b00      	subs	r0, r0, r4
  404568:	6053      	str	r3, [r2, #4]
  40456a:	6008      	str	r0, [r1, #0]
  40456c:	e7d5      	b.n	40451a <_malloc_trim_r+0x3e>
  40456e:	bf00      	nop
  404570:	200005a8 	.word	0x200005a8
  404574:	20000a94 	.word	0x20000a94
  404578:	200009b0 	.word	0x200009b0

0040457c <_free_r>:
  40457c:	2900      	cmp	r1, #0
  40457e:	d044      	beq.n	40460a <_free_r+0x8e>
  404580:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404584:	460d      	mov	r5, r1
  404586:	4680      	mov	r8, r0
  404588:	f000 ff30 	bl	4053ec <__malloc_lock>
  40458c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404590:	4969      	ldr	r1, [pc, #420]	; (404738 <_free_r+0x1bc>)
  404592:	f027 0301 	bic.w	r3, r7, #1
  404596:	f1a5 0408 	sub.w	r4, r5, #8
  40459a:	18e2      	adds	r2, r4, r3
  40459c:	688e      	ldr	r6, [r1, #8]
  40459e:	6850      	ldr	r0, [r2, #4]
  4045a0:	42b2      	cmp	r2, r6
  4045a2:	f020 0003 	bic.w	r0, r0, #3
  4045a6:	d05e      	beq.n	404666 <_free_r+0xea>
  4045a8:	07fe      	lsls	r6, r7, #31
  4045aa:	6050      	str	r0, [r2, #4]
  4045ac:	d40b      	bmi.n	4045c6 <_free_r+0x4a>
  4045ae:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4045b2:	1be4      	subs	r4, r4, r7
  4045b4:	f101 0e08 	add.w	lr, r1, #8
  4045b8:	68a5      	ldr	r5, [r4, #8]
  4045ba:	4575      	cmp	r5, lr
  4045bc:	443b      	add	r3, r7
  4045be:	d06d      	beq.n	40469c <_free_r+0x120>
  4045c0:	68e7      	ldr	r7, [r4, #12]
  4045c2:	60ef      	str	r7, [r5, #12]
  4045c4:	60bd      	str	r5, [r7, #8]
  4045c6:	1815      	adds	r5, r2, r0
  4045c8:	686d      	ldr	r5, [r5, #4]
  4045ca:	07ed      	lsls	r5, r5, #31
  4045cc:	d53e      	bpl.n	40464c <_free_r+0xd0>
  4045ce:	f043 0201 	orr.w	r2, r3, #1
  4045d2:	6062      	str	r2, [r4, #4]
  4045d4:	50e3      	str	r3, [r4, r3]
  4045d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4045da:	d217      	bcs.n	40460c <_free_r+0x90>
  4045dc:	08db      	lsrs	r3, r3, #3
  4045de:	1c58      	adds	r0, r3, #1
  4045e0:	109a      	asrs	r2, r3, #2
  4045e2:	684d      	ldr	r5, [r1, #4]
  4045e4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4045e8:	60a7      	str	r7, [r4, #8]
  4045ea:	2301      	movs	r3, #1
  4045ec:	4093      	lsls	r3, r2
  4045ee:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4045f2:	432b      	orrs	r3, r5
  4045f4:	3a08      	subs	r2, #8
  4045f6:	60e2      	str	r2, [r4, #12]
  4045f8:	604b      	str	r3, [r1, #4]
  4045fa:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4045fe:	60fc      	str	r4, [r7, #12]
  404600:	4640      	mov	r0, r8
  404602:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404606:	f000 bef7 	b.w	4053f8 <__malloc_unlock>
  40460a:	4770      	bx	lr
  40460c:	0a5a      	lsrs	r2, r3, #9
  40460e:	2a04      	cmp	r2, #4
  404610:	d852      	bhi.n	4046b8 <_free_r+0x13c>
  404612:	099a      	lsrs	r2, r3, #6
  404614:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404618:	00ff      	lsls	r7, r7, #3
  40461a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40461e:	19c8      	adds	r0, r1, r7
  404620:	59ca      	ldr	r2, [r1, r7]
  404622:	3808      	subs	r0, #8
  404624:	4290      	cmp	r0, r2
  404626:	d04f      	beq.n	4046c8 <_free_r+0x14c>
  404628:	6851      	ldr	r1, [r2, #4]
  40462a:	f021 0103 	bic.w	r1, r1, #3
  40462e:	428b      	cmp	r3, r1
  404630:	d232      	bcs.n	404698 <_free_r+0x11c>
  404632:	6892      	ldr	r2, [r2, #8]
  404634:	4290      	cmp	r0, r2
  404636:	d1f7      	bne.n	404628 <_free_r+0xac>
  404638:	68c3      	ldr	r3, [r0, #12]
  40463a:	60a0      	str	r0, [r4, #8]
  40463c:	60e3      	str	r3, [r4, #12]
  40463e:	609c      	str	r4, [r3, #8]
  404640:	60c4      	str	r4, [r0, #12]
  404642:	4640      	mov	r0, r8
  404644:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404648:	f000 bed6 	b.w	4053f8 <__malloc_unlock>
  40464c:	6895      	ldr	r5, [r2, #8]
  40464e:	4f3b      	ldr	r7, [pc, #236]	; (40473c <_free_r+0x1c0>)
  404650:	42bd      	cmp	r5, r7
  404652:	4403      	add	r3, r0
  404654:	d040      	beq.n	4046d8 <_free_r+0x15c>
  404656:	68d0      	ldr	r0, [r2, #12]
  404658:	60e8      	str	r0, [r5, #12]
  40465a:	f043 0201 	orr.w	r2, r3, #1
  40465e:	6085      	str	r5, [r0, #8]
  404660:	6062      	str	r2, [r4, #4]
  404662:	50e3      	str	r3, [r4, r3]
  404664:	e7b7      	b.n	4045d6 <_free_r+0x5a>
  404666:	07ff      	lsls	r7, r7, #31
  404668:	4403      	add	r3, r0
  40466a:	d407      	bmi.n	40467c <_free_r+0x100>
  40466c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404670:	1aa4      	subs	r4, r4, r2
  404672:	4413      	add	r3, r2
  404674:	68a0      	ldr	r0, [r4, #8]
  404676:	68e2      	ldr	r2, [r4, #12]
  404678:	60c2      	str	r2, [r0, #12]
  40467a:	6090      	str	r0, [r2, #8]
  40467c:	4a30      	ldr	r2, [pc, #192]	; (404740 <_free_r+0x1c4>)
  40467e:	6812      	ldr	r2, [r2, #0]
  404680:	f043 0001 	orr.w	r0, r3, #1
  404684:	4293      	cmp	r3, r2
  404686:	6060      	str	r0, [r4, #4]
  404688:	608c      	str	r4, [r1, #8]
  40468a:	d3b9      	bcc.n	404600 <_free_r+0x84>
  40468c:	4b2d      	ldr	r3, [pc, #180]	; (404744 <_free_r+0x1c8>)
  40468e:	4640      	mov	r0, r8
  404690:	6819      	ldr	r1, [r3, #0]
  404692:	f7ff ff23 	bl	4044dc <_malloc_trim_r>
  404696:	e7b3      	b.n	404600 <_free_r+0x84>
  404698:	4610      	mov	r0, r2
  40469a:	e7cd      	b.n	404638 <_free_r+0xbc>
  40469c:	1811      	adds	r1, r2, r0
  40469e:	6849      	ldr	r1, [r1, #4]
  4046a0:	07c9      	lsls	r1, r1, #31
  4046a2:	d444      	bmi.n	40472e <_free_r+0x1b2>
  4046a4:	6891      	ldr	r1, [r2, #8]
  4046a6:	68d2      	ldr	r2, [r2, #12]
  4046a8:	60ca      	str	r2, [r1, #12]
  4046aa:	4403      	add	r3, r0
  4046ac:	f043 0001 	orr.w	r0, r3, #1
  4046b0:	6091      	str	r1, [r2, #8]
  4046b2:	6060      	str	r0, [r4, #4]
  4046b4:	50e3      	str	r3, [r4, r3]
  4046b6:	e7a3      	b.n	404600 <_free_r+0x84>
  4046b8:	2a14      	cmp	r2, #20
  4046ba:	d816      	bhi.n	4046ea <_free_r+0x16e>
  4046bc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4046c0:	00ff      	lsls	r7, r7, #3
  4046c2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4046c6:	e7aa      	b.n	40461e <_free_r+0xa2>
  4046c8:	10aa      	asrs	r2, r5, #2
  4046ca:	2301      	movs	r3, #1
  4046cc:	684d      	ldr	r5, [r1, #4]
  4046ce:	4093      	lsls	r3, r2
  4046d0:	432b      	orrs	r3, r5
  4046d2:	604b      	str	r3, [r1, #4]
  4046d4:	4603      	mov	r3, r0
  4046d6:	e7b0      	b.n	40463a <_free_r+0xbe>
  4046d8:	f043 0201 	orr.w	r2, r3, #1
  4046dc:	614c      	str	r4, [r1, #20]
  4046de:	610c      	str	r4, [r1, #16]
  4046e0:	60e5      	str	r5, [r4, #12]
  4046e2:	60a5      	str	r5, [r4, #8]
  4046e4:	6062      	str	r2, [r4, #4]
  4046e6:	50e3      	str	r3, [r4, r3]
  4046e8:	e78a      	b.n	404600 <_free_r+0x84>
  4046ea:	2a54      	cmp	r2, #84	; 0x54
  4046ec:	d806      	bhi.n	4046fc <_free_r+0x180>
  4046ee:	0b1a      	lsrs	r2, r3, #12
  4046f0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4046f4:	00ff      	lsls	r7, r7, #3
  4046f6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4046fa:	e790      	b.n	40461e <_free_r+0xa2>
  4046fc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404700:	d806      	bhi.n	404710 <_free_r+0x194>
  404702:	0bda      	lsrs	r2, r3, #15
  404704:	f102 0778 	add.w	r7, r2, #120	; 0x78
  404708:	00ff      	lsls	r7, r7, #3
  40470a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40470e:	e786      	b.n	40461e <_free_r+0xa2>
  404710:	f240 5054 	movw	r0, #1364	; 0x554
  404714:	4282      	cmp	r2, r0
  404716:	d806      	bhi.n	404726 <_free_r+0x1aa>
  404718:	0c9a      	lsrs	r2, r3, #18
  40471a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40471e:	00ff      	lsls	r7, r7, #3
  404720:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404724:	e77b      	b.n	40461e <_free_r+0xa2>
  404726:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40472a:	257e      	movs	r5, #126	; 0x7e
  40472c:	e777      	b.n	40461e <_free_r+0xa2>
  40472e:	f043 0101 	orr.w	r1, r3, #1
  404732:	6061      	str	r1, [r4, #4]
  404734:	6013      	str	r3, [r2, #0]
  404736:	e763      	b.n	404600 <_free_r+0x84>
  404738:	200005a8 	.word	0x200005a8
  40473c:	200005b0 	.word	0x200005b0
  404740:	200009b4 	.word	0x200009b4
  404744:	20000ac4 	.word	0x20000ac4

00404748 <__sfvwrite_r>:
  404748:	6893      	ldr	r3, [r2, #8]
  40474a:	2b00      	cmp	r3, #0
  40474c:	d073      	beq.n	404836 <__sfvwrite_r+0xee>
  40474e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404752:	898b      	ldrh	r3, [r1, #12]
  404754:	b083      	sub	sp, #12
  404756:	460c      	mov	r4, r1
  404758:	0719      	lsls	r1, r3, #28
  40475a:	9000      	str	r0, [sp, #0]
  40475c:	4616      	mov	r6, r2
  40475e:	d526      	bpl.n	4047ae <__sfvwrite_r+0x66>
  404760:	6922      	ldr	r2, [r4, #16]
  404762:	b322      	cbz	r2, 4047ae <__sfvwrite_r+0x66>
  404764:	f013 0002 	ands.w	r0, r3, #2
  404768:	6835      	ldr	r5, [r6, #0]
  40476a:	d02c      	beq.n	4047c6 <__sfvwrite_r+0x7e>
  40476c:	f04f 0900 	mov.w	r9, #0
  404770:	4fb0      	ldr	r7, [pc, #704]	; (404a34 <__sfvwrite_r+0x2ec>)
  404772:	46c8      	mov	r8, r9
  404774:	46b2      	mov	sl, r6
  404776:	45b8      	cmp	r8, r7
  404778:	4643      	mov	r3, r8
  40477a:	464a      	mov	r2, r9
  40477c:	bf28      	it	cs
  40477e:	463b      	movcs	r3, r7
  404780:	9800      	ldr	r0, [sp, #0]
  404782:	f1b8 0f00 	cmp.w	r8, #0
  404786:	d050      	beq.n	40482a <__sfvwrite_r+0xe2>
  404788:	69e1      	ldr	r1, [r4, #28]
  40478a:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40478c:	47b0      	blx	r6
  40478e:	2800      	cmp	r0, #0
  404790:	dd58      	ble.n	404844 <__sfvwrite_r+0xfc>
  404792:	f8da 3008 	ldr.w	r3, [sl, #8]
  404796:	1a1b      	subs	r3, r3, r0
  404798:	4481      	add	r9, r0
  40479a:	eba8 0800 	sub.w	r8, r8, r0
  40479e:	f8ca 3008 	str.w	r3, [sl, #8]
  4047a2:	2b00      	cmp	r3, #0
  4047a4:	d1e7      	bne.n	404776 <__sfvwrite_r+0x2e>
  4047a6:	2000      	movs	r0, #0
  4047a8:	b003      	add	sp, #12
  4047aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4047ae:	4621      	mov	r1, r4
  4047b0:	9800      	ldr	r0, [sp, #0]
  4047b2:	f7ff fc51 	bl	404058 <__swsetup_r>
  4047b6:	2800      	cmp	r0, #0
  4047b8:	f040 8133 	bne.w	404a22 <__sfvwrite_r+0x2da>
  4047bc:	89a3      	ldrh	r3, [r4, #12]
  4047be:	6835      	ldr	r5, [r6, #0]
  4047c0:	f013 0002 	ands.w	r0, r3, #2
  4047c4:	d1d2      	bne.n	40476c <__sfvwrite_r+0x24>
  4047c6:	f013 0901 	ands.w	r9, r3, #1
  4047ca:	d145      	bne.n	404858 <__sfvwrite_r+0x110>
  4047cc:	464f      	mov	r7, r9
  4047ce:	9601      	str	r6, [sp, #4]
  4047d0:	b337      	cbz	r7, 404820 <__sfvwrite_r+0xd8>
  4047d2:	059a      	lsls	r2, r3, #22
  4047d4:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4047d8:	f140 8083 	bpl.w	4048e2 <__sfvwrite_r+0x19a>
  4047dc:	4547      	cmp	r7, r8
  4047de:	46c3      	mov	fp, r8
  4047e0:	f0c0 80ab 	bcc.w	40493a <__sfvwrite_r+0x1f2>
  4047e4:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4047e8:	f040 80ac 	bne.w	404944 <__sfvwrite_r+0x1fc>
  4047ec:	6820      	ldr	r0, [r4, #0]
  4047ee:	46ba      	mov	sl, r7
  4047f0:	465a      	mov	r2, fp
  4047f2:	4649      	mov	r1, r9
  4047f4:	f000 fd96 	bl	405324 <memmove>
  4047f8:	68a2      	ldr	r2, [r4, #8]
  4047fa:	6823      	ldr	r3, [r4, #0]
  4047fc:	eba2 0208 	sub.w	r2, r2, r8
  404800:	445b      	add	r3, fp
  404802:	60a2      	str	r2, [r4, #8]
  404804:	6023      	str	r3, [r4, #0]
  404806:	9a01      	ldr	r2, [sp, #4]
  404808:	6893      	ldr	r3, [r2, #8]
  40480a:	eba3 030a 	sub.w	r3, r3, sl
  40480e:	44d1      	add	r9, sl
  404810:	eba7 070a 	sub.w	r7, r7, sl
  404814:	6093      	str	r3, [r2, #8]
  404816:	2b00      	cmp	r3, #0
  404818:	d0c5      	beq.n	4047a6 <__sfvwrite_r+0x5e>
  40481a:	89a3      	ldrh	r3, [r4, #12]
  40481c:	2f00      	cmp	r7, #0
  40481e:	d1d8      	bne.n	4047d2 <__sfvwrite_r+0x8a>
  404820:	f8d5 9000 	ldr.w	r9, [r5]
  404824:	686f      	ldr	r7, [r5, #4]
  404826:	3508      	adds	r5, #8
  404828:	e7d2      	b.n	4047d0 <__sfvwrite_r+0x88>
  40482a:	f8d5 9000 	ldr.w	r9, [r5]
  40482e:	f8d5 8004 	ldr.w	r8, [r5, #4]
  404832:	3508      	adds	r5, #8
  404834:	e79f      	b.n	404776 <__sfvwrite_r+0x2e>
  404836:	2000      	movs	r0, #0
  404838:	4770      	bx	lr
  40483a:	4621      	mov	r1, r4
  40483c:	9800      	ldr	r0, [sp, #0]
  40483e:	f7ff fd1f 	bl	404280 <_fflush_r>
  404842:	b370      	cbz	r0, 4048a2 <__sfvwrite_r+0x15a>
  404844:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404848:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40484c:	f04f 30ff 	mov.w	r0, #4294967295
  404850:	81a3      	strh	r3, [r4, #12]
  404852:	b003      	add	sp, #12
  404854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404858:	4681      	mov	r9, r0
  40485a:	4633      	mov	r3, r6
  40485c:	464e      	mov	r6, r9
  40485e:	46a8      	mov	r8, r5
  404860:	469a      	mov	sl, r3
  404862:	464d      	mov	r5, r9
  404864:	b34e      	cbz	r6, 4048ba <__sfvwrite_r+0x172>
  404866:	b380      	cbz	r0, 4048ca <__sfvwrite_r+0x182>
  404868:	6820      	ldr	r0, [r4, #0]
  40486a:	6923      	ldr	r3, [r4, #16]
  40486c:	6962      	ldr	r2, [r4, #20]
  40486e:	45b1      	cmp	r9, r6
  404870:	46cb      	mov	fp, r9
  404872:	bf28      	it	cs
  404874:	46b3      	movcs	fp, r6
  404876:	4298      	cmp	r0, r3
  404878:	465f      	mov	r7, fp
  40487a:	d904      	bls.n	404886 <__sfvwrite_r+0x13e>
  40487c:	68a3      	ldr	r3, [r4, #8]
  40487e:	4413      	add	r3, r2
  404880:	459b      	cmp	fp, r3
  404882:	f300 80a6 	bgt.w	4049d2 <__sfvwrite_r+0x28a>
  404886:	4593      	cmp	fp, r2
  404888:	db4b      	blt.n	404922 <__sfvwrite_r+0x1da>
  40488a:	4613      	mov	r3, r2
  40488c:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40488e:	69e1      	ldr	r1, [r4, #28]
  404890:	9800      	ldr	r0, [sp, #0]
  404892:	462a      	mov	r2, r5
  404894:	47b8      	blx	r7
  404896:	1e07      	subs	r7, r0, #0
  404898:	ddd4      	ble.n	404844 <__sfvwrite_r+0xfc>
  40489a:	ebb9 0907 	subs.w	r9, r9, r7
  40489e:	d0cc      	beq.n	40483a <__sfvwrite_r+0xf2>
  4048a0:	2001      	movs	r0, #1
  4048a2:	f8da 3008 	ldr.w	r3, [sl, #8]
  4048a6:	1bdb      	subs	r3, r3, r7
  4048a8:	443d      	add	r5, r7
  4048aa:	1bf6      	subs	r6, r6, r7
  4048ac:	f8ca 3008 	str.w	r3, [sl, #8]
  4048b0:	2b00      	cmp	r3, #0
  4048b2:	f43f af78 	beq.w	4047a6 <__sfvwrite_r+0x5e>
  4048b6:	2e00      	cmp	r6, #0
  4048b8:	d1d5      	bne.n	404866 <__sfvwrite_r+0x11e>
  4048ba:	f108 0308 	add.w	r3, r8, #8
  4048be:	e913 0060 	ldmdb	r3, {r5, r6}
  4048c2:	4698      	mov	r8, r3
  4048c4:	3308      	adds	r3, #8
  4048c6:	2e00      	cmp	r6, #0
  4048c8:	d0f9      	beq.n	4048be <__sfvwrite_r+0x176>
  4048ca:	4632      	mov	r2, r6
  4048cc:	210a      	movs	r1, #10
  4048ce:	4628      	mov	r0, r5
  4048d0:	f000 fc3e 	bl	405150 <memchr>
  4048d4:	2800      	cmp	r0, #0
  4048d6:	f000 80a1 	beq.w	404a1c <__sfvwrite_r+0x2d4>
  4048da:	3001      	adds	r0, #1
  4048dc:	eba0 0905 	sub.w	r9, r0, r5
  4048e0:	e7c2      	b.n	404868 <__sfvwrite_r+0x120>
  4048e2:	6820      	ldr	r0, [r4, #0]
  4048e4:	6923      	ldr	r3, [r4, #16]
  4048e6:	4298      	cmp	r0, r3
  4048e8:	d802      	bhi.n	4048f0 <__sfvwrite_r+0x1a8>
  4048ea:	6963      	ldr	r3, [r4, #20]
  4048ec:	429f      	cmp	r7, r3
  4048ee:	d25d      	bcs.n	4049ac <__sfvwrite_r+0x264>
  4048f0:	45b8      	cmp	r8, r7
  4048f2:	bf28      	it	cs
  4048f4:	46b8      	movcs	r8, r7
  4048f6:	4642      	mov	r2, r8
  4048f8:	4649      	mov	r1, r9
  4048fa:	f000 fd13 	bl	405324 <memmove>
  4048fe:	68a3      	ldr	r3, [r4, #8]
  404900:	6822      	ldr	r2, [r4, #0]
  404902:	eba3 0308 	sub.w	r3, r3, r8
  404906:	4442      	add	r2, r8
  404908:	60a3      	str	r3, [r4, #8]
  40490a:	6022      	str	r2, [r4, #0]
  40490c:	b10b      	cbz	r3, 404912 <__sfvwrite_r+0x1ca>
  40490e:	46c2      	mov	sl, r8
  404910:	e779      	b.n	404806 <__sfvwrite_r+0xbe>
  404912:	4621      	mov	r1, r4
  404914:	9800      	ldr	r0, [sp, #0]
  404916:	f7ff fcb3 	bl	404280 <_fflush_r>
  40491a:	2800      	cmp	r0, #0
  40491c:	d192      	bne.n	404844 <__sfvwrite_r+0xfc>
  40491e:	46c2      	mov	sl, r8
  404920:	e771      	b.n	404806 <__sfvwrite_r+0xbe>
  404922:	465a      	mov	r2, fp
  404924:	4629      	mov	r1, r5
  404926:	f000 fcfd 	bl	405324 <memmove>
  40492a:	68a2      	ldr	r2, [r4, #8]
  40492c:	6823      	ldr	r3, [r4, #0]
  40492e:	eba2 020b 	sub.w	r2, r2, fp
  404932:	445b      	add	r3, fp
  404934:	60a2      	str	r2, [r4, #8]
  404936:	6023      	str	r3, [r4, #0]
  404938:	e7af      	b.n	40489a <__sfvwrite_r+0x152>
  40493a:	6820      	ldr	r0, [r4, #0]
  40493c:	46b8      	mov	r8, r7
  40493e:	46ba      	mov	sl, r7
  404940:	46bb      	mov	fp, r7
  404942:	e755      	b.n	4047f0 <__sfvwrite_r+0xa8>
  404944:	6962      	ldr	r2, [r4, #20]
  404946:	6820      	ldr	r0, [r4, #0]
  404948:	6921      	ldr	r1, [r4, #16]
  40494a:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40494e:	eba0 0a01 	sub.w	sl, r0, r1
  404952:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  404956:	f10a 0001 	add.w	r0, sl, #1
  40495a:	ea4f 0868 	mov.w	r8, r8, asr #1
  40495e:	4438      	add	r0, r7
  404960:	4540      	cmp	r0, r8
  404962:	4642      	mov	r2, r8
  404964:	bf84      	itt	hi
  404966:	4680      	movhi	r8, r0
  404968:	4642      	movhi	r2, r8
  40496a:	055b      	lsls	r3, r3, #21
  40496c:	d544      	bpl.n	4049f8 <__sfvwrite_r+0x2b0>
  40496e:	4611      	mov	r1, r2
  404970:	9800      	ldr	r0, [sp, #0]
  404972:	f000 f921 	bl	404bb8 <_malloc_r>
  404976:	4683      	mov	fp, r0
  404978:	2800      	cmp	r0, #0
  40497a:	d055      	beq.n	404a28 <__sfvwrite_r+0x2e0>
  40497c:	4652      	mov	r2, sl
  40497e:	6921      	ldr	r1, [r4, #16]
  404980:	f000 fc36 	bl	4051f0 <memcpy>
  404984:	89a3      	ldrh	r3, [r4, #12]
  404986:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40498a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40498e:	81a3      	strh	r3, [r4, #12]
  404990:	eb0b 000a 	add.w	r0, fp, sl
  404994:	eba8 030a 	sub.w	r3, r8, sl
  404998:	f8c4 b010 	str.w	fp, [r4, #16]
  40499c:	f8c4 8014 	str.w	r8, [r4, #20]
  4049a0:	6020      	str	r0, [r4, #0]
  4049a2:	60a3      	str	r3, [r4, #8]
  4049a4:	46b8      	mov	r8, r7
  4049a6:	46ba      	mov	sl, r7
  4049a8:	46bb      	mov	fp, r7
  4049aa:	e721      	b.n	4047f0 <__sfvwrite_r+0xa8>
  4049ac:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  4049b0:	42b9      	cmp	r1, r7
  4049b2:	bf28      	it	cs
  4049b4:	4639      	movcs	r1, r7
  4049b6:	464a      	mov	r2, r9
  4049b8:	fb91 f1f3 	sdiv	r1, r1, r3
  4049bc:	9800      	ldr	r0, [sp, #0]
  4049be:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4049c0:	fb03 f301 	mul.w	r3, r3, r1
  4049c4:	69e1      	ldr	r1, [r4, #28]
  4049c6:	47b0      	blx	r6
  4049c8:	f1b0 0a00 	subs.w	sl, r0, #0
  4049cc:	f73f af1b 	bgt.w	404806 <__sfvwrite_r+0xbe>
  4049d0:	e738      	b.n	404844 <__sfvwrite_r+0xfc>
  4049d2:	461a      	mov	r2, r3
  4049d4:	4629      	mov	r1, r5
  4049d6:	9301      	str	r3, [sp, #4]
  4049d8:	f000 fca4 	bl	405324 <memmove>
  4049dc:	6822      	ldr	r2, [r4, #0]
  4049de:	9b01      	ldr	r3, [sp, #4]
  4049e0:	9800      	ldr	r0, [sp, #0]
  4049e2:	441a      	add	r2, r3
  4049e4:	6022      	str	r2, [r4, #0]
  4049e6:	4621      	mov	r1, r4
  4049e8:	f7ff fc4a 	bl	404280 <_fflush_r>
  4049ec:	9b01      	ldr	r3, [sp, #4]
  4049ee:	2800      	cmp	r0, #0
  4049f0:	f47f af28 	bne.w	404844 <__sfvwrite_r+0xfc>
  4049f4:	461f      	mov	r7, r3
  4049f6:	e750      	b.n	40489a <__sfvwrite_r+0x152>
  4049f8:	9800      	ldr	r0, [sp, #0]
  4049fa:	f000 fd03 	bl	405404 <_realloc_r>
  4049fe:	4683      	mov	fp, r0
  404a00:	2800      	cmp	r0, #0
  404a02:	d1c5      	bne.n	404990 <__sfvwrite_r+0x248>
  404a04:	9d00      	ldr	r5, [sp, #0]
  404a06:	6921      	ldr	r1, [r4, #16]
  404a08:	4628      	mov	r0, r5
  404a0a:	f7ff fdb7 	bl	40457c <_free_r>
  404a0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404a12:	220c      	movs	r2, #12
  404a14:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  404a18:	602a      	str	r2, [r5, #0]
  404a1a:	e715      	b.n	404848 <__sfvwrite_r+0x100>
  404a1c:	f106 0901 	add.w	r9, r6, #1
  404a20:	e722      	b.n	404868 <__sfvwrite_r+0x120>
  404a22:	f04f 30ff 	mov.w	r0, #4294967295
  404a26:	e6bf      	b.n	4047a8 <__sfvwrite_r+0x60>
  404a28:	9a00      	ldr	r2, [sp, #0]
  404a2a:	230c      	movs	r3, #12
  404a2c:	6013      	str	r3, [r2, #0]
  404a2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404a32:	e709      	b.n	404848 <__sfvwrite_r+0x100>
  404a34:	7ffffc00 	.word	0x7ffffc00

00404a38 <_fwalk_reent>:
  404a38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404a3c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  404a40:	d01f      	beq.n	404a82 <_fwalk_reent+0x4a>
  404a42:	4688      	mov	r8, r1
  404a44:	4606      	mov	r6, r0
  404a46:	f04f 0900 	mov.w	r9, #0
  404a4a:	687d      	ldr	r5, [r7, #4]
  404a4c:	68bc      	ldr	r4, [r7, #8]
  404a4e:	3d01      	subs	r5, #1
  404a50:	d411      	bmi.n	404a76 <_fwalk_reent+0x3e>
  404a52:	89a3      	ldrh	r3, [r4, #12]
  404a54:	2b01      	cmp	r3, #1
  404a56:	f105 35ff 	add.w	r5, r5, #4294967295
  404a5a:	d908      	bls.n	404a6e <_fwalk_reent+0x36>
  404a5c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  404a60:	3301      	adds	r3, #1
  404a62:	4621      	mov	r1, r4
  404a64:	4630      	mov	r0, r6
  404a66:	d002      	beq.n	404a6e <_fwalk_reent+0x36>
  404a68:	47c0      	blx	r8
  404a6a:	ea49 0900 	orr.w	r9, r9, r0
  404a6e:	1c6b      	adds	r3, r5, #1
  404a70:	f104 0468 	add.w	r4, r4, #104	; 0x68
  404a74:	d1ed      	bne.n	404a52 <_fwalk_reent+0x1a>
  404a76:	683f      	ldr	r7, [r7, #0]
  404a78:	2f00      	cmp	r7, #0
  404a7a:	d1e6      	bne.n	404a4a <_fwalk_reent+0x12>
  404a7c:	4648      	mov	r0, r9
  404a7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404a82:	46b9      	mov	r9, r7
  404a84:	4648      	mov	r0, r9
  404a86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404a8a:	bf00      	nop

00404a8c <__locale_mb_cur_max>:
  404a8c:	4b04      	ldr	r3, [pc, #16]	; (404aa0 <__locale_mb_cur_max+0x14>)
  404a8e:	4a05      	ldr	r2, [pc, #20]	; (404aa4 <__locale_mb_cur_max+0x18>)
  404a90:	681b      	ldr	r3, [r3, #0]
  404a92:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  404a94:	2b00      	cmp	r3, #0
  404a96:	bf08      	it	eq
  404a98:	4613      	moveq	r3, r2
  404a9a:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  404a9e:	4770      	bx	lr
  404aa0:	2000000c 	.word	0x2000000c
  404aa4:	2000043c 	.word	0x2000043c

00404aa8 <__retarget_lock_init_recursive>:
  404aa8:	4770      	bx	lr
  404aaa:	bf00      	nop

00404aac <__retarget_lock_close_recursive>:
  404aac:	4770      	bx	lr
  404aae:	bf00      	nop

00404ab0 <__retarget_lock_acquire_recursive>:
  404ab0:	4770      	bx	lr
  404ab2:	bf00      	nop

00404ab4 <__retarget_lock_release_recursive>:
  404ab4:	4770      	bx	lr
  404ab6:	bf00      	nop

00404ab8 <__swhatbuf_r>:
  404ab8:	b570      	push	{r4, r5, r6, lr}
  404aba:	460c      	mov	r4, r1
  404abc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404ac0:	2900      	cmp	r1, #0
  404ac2:	b090      	sub	sp, #64	; 0x40
  404ac4:	4615      	mov	r5, r2
  404ac6:	461e      	mov	r6, r3
  404ac8:	db14      	blt.n	404af4 <__swhatbuf_r+0x3c>
  404aca:	aa01      	add	r2, sp, #4
  404acc:	f001 f882 	bl	405bd4 <_fstat_r>
  404ad0:	2800      	cmp	r0, #0
  404ad2:	db0f      	blt.n	404af4 <__swhatbuf_r+0x3c>
  404ad4:	9a02      	ldr	r2, [sp, #8]
  404ad6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  404ada:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  404ade:	fab2 f282 	clz	r2, r2
  404ae2:	0952      	lsrs	r2, r2, #5
  404ae4:	f44f 6380 	mov.w	r3, #1024	; 0x400
  404ae8:	f44f 6000 	mov.w	r0, #2048	; 0x800
  404aec:	6032      	str	r2, [r6, #0]
  404aee:	602b      	str	r3, [r5, #0]
  404af0:	b010      	add	sp, #64	; 0x40
  404af2:	bd70      	pop	{r4, r5, r6, pc}
  404af4:	89a2      	ldrh	r2, [r4, #12]
  404af6:	2300      	movs	r3, #0
  404af8:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  404afc:	6033      	str	r3, [r6, #0]
  404afe:	d004      	beq.n	404b0a <__swhatbuf_r+0x52>
  404b00:	2240      	movs	r2, #64	; 0x40
  404b02:	4618      	mov	r0, r3
  404b04:	602a      	str	r2, [r5, #0]
  404b06:	b010      	add	sp, #64	; 0x40
  404b08:	bd70      	pop	{r4, r5, r6, pc}
  404b0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  404b0e:	602b      	str	r3, [r5, #0]
  404b10:	b010      	add	sp, #64	; 0x40
  404b12:	bd70      	pop	{r4, r5, r6, pc}

00404b14 <__smakebuf_r>:
  404b14:	898a      	ldrh	r2, [r1, #12]
  404b16:	0792      	lsls	r2, r2, #30
  404b18:	460b      	mov	r3, r1
  404b1a:	d506      	bpl.n	404b2a <__smakebuf_r+0x16>
  404b1c:	f101 0243 	add.w	r2, r1, #67	; 0x43
  404b20:	2101      	movs	r1, #1
  404b22:	601a      	str	r2, [r3, #0]
  404b24:	611a      	str	r2, [r3, #16]
  404b26:	6159      	str	r1, [r3, #20]
  404b28:	4770      	bx	lr
  404b2a:	b5f0      	push	{r4, r5, r6, r7, lr}
  404b2c:	b083      	sub	sp, #12
  404b2e:	ab01      	add	r3, sp, #4
  404b30:	466a      	mov	r2, sp
  404b32:	460c      	mov	r4, r1
  404b34:	4606      	mov	r6, r0
  404b36:	f7ff ffbf 	bl	404ab8 <__swhatbuf_r>
  404b3a:	9900      	ldr	r1, [sp, #0]
  404b3c:	4605      	mov	r5, r0
  404b3e:	4630      	mov	r0, r6
  404b40:	f000 f83a 	bl	404bb8 <_malloc_r>
  404b44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404b48:	b1d8      	cbz	r0, 404b82 <__smakebuf_r+0x6e>
  404b4a:	9a01      	ldr	r2, [sp, #4]
  404b4c:	4f15      	ldr	r7, [pc, #84]	; (404ba4 <__smakebuf_r+0x90>)
  404b4e:	9900      	ldr	r1, [sp, #0]
  404b50:	63f7      	str	r7, [r6, #60]	; 0x3c
  404b52:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  404b56:	81a3      	strh	r3, [r4, #12]
  404b58:	6020      	str	r0, [r4, #0]
  404b5a:	6120      	str	r0, [r4, #16]
  404b5c:	6161      	str	r1, [r4, #20]
  404b5e:	b91a      	cbnz	r2, 404b68 <__smakebuf_r+0x54>
  404b60:	432b      	orrs	r3, r5
  404b62:	81a3      	strh	r3, [r4, #12]
  404b64:	b003      	add	sp, #12
  404b66:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404b68:	4630      	mov	r0, r6
  404b6a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404b6e:	f001 f845 	bl	405bfc <_isatty_r>
  404b72:	b1a0      	cbz	r0, 404b9e <__smakebuf_r+0x8a>
  404b74:	89a3      	ldrh	r3, [r4, #12]
  404b76:	f023 0303 	bic.w	r3, r3, #3
  404b7a:	f043 0301 	orr.w	r3, r3, #1
  404b7e:	b21b      	sxth	r3, r3
  404b80:	e7ee      	b.n	404b60 <__smakebuf_r+0x4c>
  404b82:	059a      	lsls	r2, r3, #22
  404b84:	d4ee      	bmi.n	404b64 <__smakebuf_r+0x50>
  404b86:	f023 0303 	bic.w	r3, r3, #3
  404b8a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  404b8e:	f043 0302 	orr.w	r3, r3, #2
  404b92:	2101      	movs	r1, #1
  404b94:	81a3      	strh	r3, [r4, #12]
  404b96:	6022      	str	r2, [r4, #0]
  404b98:	6122      	str	r2, [r4, #16]
  404b9a:	6161      	str	r1, [r4, #20]
  404b9c:	e7e2      	b.n	404b64 <__smakebuf_r+0x50>
  404b9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404ba2:	e7dd      	b.n	404b60 <__smakebuf_r+0x4c>
  404ba4:	004042d5 	.word	0x004042d5

00404ba8 <malloc>:
  404ba8:	4b02      	ldr	r3, [pc, #8]	; (404bb4 <malloc+0xc>)
  404baa:	4601      	mov	r1, r0
  404bac:	6818      	ldr	r0, [r3, #0]
  404bae:	f000 b803 	b.w	404bb8 <_malloc_r>
  404bb2:	bf00      	nop
  404bb4:	2000000c 	.word	0x2000000c

00404bb8 <_malloc_r>:
  404bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404bbc:	f101 060b 	add.w	r6, r1, #11
  404bc0:	2e16      	cmp	r6, #22
  404bc2:	b083      	sub	sp, #12
  404bc4:	4605      	mov	r5, r0
  404bc6:	f240 809e 	bls.w	404d06 <_malloc_r+0x14e>
  404bca:	f036 0607 	bics.w	r6, r6, #7
  404bce:	f100 80bd 	bmi.w	404d4c <_malloc_r+0x194>
  404bd2:	42b1      	cmp	r1, r6
  404bd4:	f200 80ba 	bhi.w	404d4c <_malloc_r+0x194>
  404bd8:	f000 fc08 	bl	4053ec <__malloc_lock>
  404bdc:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404be0:	f0c0 8293 	bcc.w	40510a <_malloc_r+0x552>
  404be4:	0a73      	lsrs	r3, r6, #9
  404be6:	f000 80b8 	beq.w	404d5a <_malloc_r+0x1a2>
  404bea:	2b04      	cmp	r3, #4
  404bec:	f200 8179 	bhi.w	404ee2 <_malloc_r+0x32a>
  404bf0:	09b3      	lsrs	r3, r6, #6
  404bf2:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404bf6:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404bfa:	00c3      	lsls	r3, r0, #3
  404bfc:	4fbf      	ldr	r7, [pc, #764]	; (404efc <_malloc_r+0x344>)
  404bfe:	443b      	add	r3, r7
  404c00:	f1a3 0108 	sub.w	r1, r3, #8
  404c04:	685c      	ldr	r4, [r3, #4]
  404c06:	42a1      	cmp	r1, r4
  404c08:	d106      	bne.n	404c18 <_malloc_r+0x60>
  404c0a:	e00c      	b.n	404c26 <_malloc_r+0x6e>
  404c0c:	2a00      	cmp	r2, #0
  404c0e:	f280 80aa 	bge.w	404d66 <_malloc_r+0x1ae>
  404c12:	68e4      	ldr	r4, [r4, #12]
  404c14:	42a1      	cmp	r1, r4
  404c16:	d006      	beq.n	404c26 <_malloc_r+0x6e>
  404c18:	6863      	ldr	r3, [r4, #4]
  404c1a:	f023 0303 	bic.w	r3, r3, #3
  404c1e:	1b9a      	subs	r2, r3, r6
  404c20:	2a0f      	cmp	r2, #15
  404c22:	ddf3      	ble.n	404c0c <_malloc_r+0x54>
  404c24:	4670      	mov	r0, lr
  404c26:	693c      	ldr	r4, [r7, #16]
  404c28:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404f10 <_malloc_r+0x358>
  404c2c:	4574      	cmp	r4, lr
  404c2e:	f000 81ab 	beq.w	404f88 <_malloc_r+0x3d0>
  404c32:	6863      	ldr	r3, [r4, #4]
  404c34:	f023 0303 	bic.w	r3, r3, #3
  404c38:	1b9a      	subs	r2, r3, r6
  404c3a:	2a0f      	cmp	r2, #15
  404c3c:	f300 8190 	bgt.w	404f60 <_malloc_r+0x3a8>
  404c40:	2a00      	cmp	r2, #0
  404c42:	f8c7 e014 	str.w	lr, [r7, #20]
  404c46:	f8c7 e010 	str.w	lr, [r7, #16]
  404c4a:	f280 809d 	bge.w	404d88 <_malloc_r+0x1d0>
  404c4e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404c52:	f080 8161 	bcs.w	404f18 <_malloc_r+0x360>
  404c56:	08db      	lsrs	r3, r3, #3
  404c58:	f103 0c01 	add.w	ip, r3, #1
  404c5c:	1099      	asrs	r1, r3, #2
  404c5e:	687a      	ldr	r2, [r7, #4]
  404c60:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404c64:	f8c4 8008 	str.w	r8, [r4, #8]
  404c68:	2301      	movs	r3, #1
  404c6a:	408b      	lsls	r3, r1
  404c6c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404c70:	4313      	orrs	r3, r2
  404c72:	3908      	subs	r1, #8
  404c74:	60e1      	str	r1, [r4, #12]
  404c76:	607b      	str	r3, [r7, #4]
  404c78:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404c7c:	f8c8 400c 	str.w	r4, [r8, #12]
  404c80:	1082      	asrs	r2, r0, #2
  404c82:	2401      	movs	r4, #1
  404c84:	4094      	lsls	r4, r2
  404c86:	429c      	cmp	r4, r3
  404c88:	f200 808b 	bhi.w	404da2 <_malloc_r+0x1ea>
  404c8c:	421c      	tst	r4, r3
  404c8e:	d106      	bne.n	404c9e <_malloc_r+0xe6>
  404c90:	f020 0003 	bic.w	r0, r0, #3
  404c94:	0064      	lsls	r4, r4, #1
  404c96:	421c      	tst	r4, r3
  404c98:	f100 0004 	add.w	r0, r0, #4
  404c9c:	d0fa      	beq.n	404c94 <_malloc_r+0xdc>
  404c9e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404ca2:	46cc      	mov	ip, r9
  404ca4:	4680      	mov	r8, r0
  404ca6:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404caa:	459c      	cmp	ip, r3
  404cac:	d107      	bne.n	404cbe <_malloc_r+0x106>
  404cae:	e16d      	b.n	404f8c <_malloc_r+0x3d4>
  404cb0:	2a00      	cmp	r2, #0
  404cb2:	f280 817b 	bge.w	404fac <_malloc_r+0x3f4>
  404cb6:	68db      	ldr	r3, [r3, #12]
  404cb8:	459c      	cmp	ip, r3
  404cba:	f000 8167 	beq.w	404f8c <_malloc_r+0x3d4>
  404cbe:	6859      	ldr	r1, [r3, #4]
  404cc0:	f021 0103 	bic.w	r1, r1, #3
  404cc4:	1b8a      	subs	r2, r1, r6
  404cc6:	2a0f      	cmp	r2, #15
  404cc8:	ddf2      	ble.n	404cb0 <_malloc_r+0xf8>
  404cca:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404cce:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404cd2:	9300      	str	r3, [sp, #0]
  404cd4:	199c      	adds	r4, r3, r6
  404cd6:	4628      	mov	r0, r5
  404cd8:	f046 0601 	orr.w	r6, r6, #1
  404cdc:	f042 0501 	orr.w	r5, r2, #1
  404ce0:	605e      	str	r6, [r3, #4]
  404ce2:	f8c8 c00c 	str.w	ip, [r8, #12]
  404ce6:	f8cc 8008 	str.w	r8, [ip, #8]
  404cea:	617c      	str	r4, [r7, #20]
  404cec:	613c      	str	r4, [r7, #16]
  404cee:	f8c4 e00c 	str.w	lr, [r4, #12]
  404cf2:	f8c4 e008 	str.w	lr, [r4, #8]
  404cf6:	6065      	str	r5, [r4, #4]
  404cf8:	505a      	str	r2, [r3, r1]
  404cfa:	f000 fb7d 	bl	4053f8 <__malloc_unlock>
  404cfe:	9b00      	ldr	r3, [sp, #0]
  404d00:	f103 0408 	add.w	r4, r3, #8
  404d04:	e01e      	b.n	404d44 <_malloc_r+0x18c>
  404d06:	2910      	cmp	r1, #16
  404d08:	d820      	bhi.n	404d4c <_malloc_r+0x194>
  404d0a:	f000 fb6f 	bl	4053ec <__malloc_lock>
  404d0e:	2610      	movs	r6, #16
  404d10:	2318      	movs	r3, #24
  404d12:	2002      	movs	r0, #2
  404d14:	4f79      	ldr	r7, [pc, #484]	; (404efc <_malloc_r+0x344>)
  404d16:	443b      	add	r3, r7
  404d18:	f1a3 0208 	sub.w	r2, r3, #8
  404d1c:	685c      	ldr	r4, [r3, #4]
  404d1e:	4294      	cmp	r4, r2
  404d20:	f000 813d 	beq.w	404f9e <_malloc_r+0x3e6>
  404d24:	6863      	ldr	r3, [r4, #4]
  404d26:	68e1      	ldr	r1, [r4, #12]
  404d28:	68a6      	ldr	r6, [r4, #8]
  404d2a:	f023 0303 	bic.w	r3, r3, #3
  404d2e:	4423      	add	r3, r4
  404d30:	4628      	mov	r0, r5
  404d32:	685a      	ldr	r2, [r3, #4]
  404d34:	60f1      	str	r1, [r6, #12]
  404d36:	f042 0201 	orr.w	r2, r2, #1
  404d3a:	608e      	str	r6, [r1, #8]
  404d3c:	605a      	str	r2, [r3, #4]
  404d3e:	f000 fb5b 	bl	4053f8 <__malloc_unlock>
  404d42:	3408      	adds	r4, #8
  404d44:	4620      	mov	r0, r4
  404d46:	b003      	add	sp, #12
  404d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404d4c:	2400      	movs	r4, #0
  404d4e:	230c      	movs	r3, #12
  404d50:	4620      	mov	r0, r4
  404d52:	602b      	str	r3, [r5, #0]
  404d54:	b003      	add	sp, #12
  404d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404d5a:	2040      	movs	r0, #64	; 0x40
  404d5c:	f44f 7300 	mov.w	r3, #512	; 0x200
  404d60:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404d64:	e74a      	b.n	404bfc <_malloc_r+0x44>
  404d66:	4423      	add	r3, r4
  404d68:	68e1      	ldr	r1, [r4, #12]
  404d6a:	685a      	ldr	r2, [r3, #4]
  404d6c:	68a6      	ldr	r6, [r4, #8]
  404d6e:	f042 0201 	orr.w	r2, r2, #1
  404d72:	60f1      	str	r1, [r6, #12]
  404d74:	4628      	mov	r0, r5
  404d76:	608e      	str	r6, [r1, #8]
  404d78:	605a      	str	r2, [r3, #4]
  404d7a:	f000 fb3d 	bl	4053f8 <__malloc_unlock>
  404d7e:	3408      	adds	r4, #8
  404d80:	4620      	mov	r0, r4
  404d82:	b003      	add	sp, #12
  404d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404d88:	4423      	add	r3, r4
  404d8a:	4628      	mov	r0, r5
  404d8c:	685a      	ldr	r2, [r3, #4]
  404d8e:	f042 0201 	orr.w	r2, r2, #1
  404d92:	605a      	str	r2, [r3, #4]
  404d94:	f000 fb30 	bl	4053f8 <__malloc_unlock>
  404d98:	3408      	adds	r4, #8
  404d9a:	4620      	mov	r0, r4
  404d9c:	b003      	add	sp, #12
  404d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404da2:	68bc      	ldr	r4, [r7, #8]
  404da4:	6863      	ldr	r3, [r4, #4]
  404da6:	f023 0803 	bic.w	r8, r3, #3
  404daa:	45b0      	cmp	r8, r6
  404dac:	d304      	bcc.n	404db8 <_malloc_r+0x200>
  404dae:	eba8 0306 	sub.w	r3, r8, r6
  404db2:	2b0f      	cmp	r3, #15
  404db4:	f300 8085 	bgt.w	404ec2 <_malloc_r+0x30a>
  404db8:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404f14 <_malloc_r+0x35c>
  404dbc:	4b50      	ldr	r3, [pc, #320]	; (404f00 <_malloc_r+0x348>)
  404dbe:	f8d9 2000 	ldr.w	r2, [r9]
  404dc2:	681b      	ldr	r3, [r3, #0]
  404dc4:	3201      	adds	r2, #1
  404dc6:	4433      	add	r3, r6
  404dc8:	eb04 0a08 	add.w	sl, r4, r8
  404dcc:	f000 8155 	beq.w	40507a <_malloc_r+0x4c2>
  404dd0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404dd4:	330f      	adds	r3, #15
  404dd6:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404dda:	f02b 0b0f 	bic.w	fp, fp, #15
  404dde:	4659      	mov	r1, fp
  404de0:	4628      	mov	r0, r5
  404de2:	f000 fcb5 	bl	405750 <_sbrk_r>
  404de6:	1c41      	adds	r1, r0, #1
  404de8:	4602      	mov	r2, r0
  404dea:	f000 80fc 	beq.w	404fe6 <_malloc_r+0x42e>
  404dee:	4582      	cmp	sl, r0
  404df0:	f200 80f7 	bhi.w	404fe2 <_malloc_r+0x42a>
  404df4:	4b43      	ldr	r3, [pc, #268]	; (404f04 <_malloc_r+0x34c>)
  404df6:	6819      	ldr	r1, [r3, #0]
  404df8:	4459      	add	r1, fp
  404dfa:	6019      	str	r1, [r3, #0]
  404dfc:	f000 814d 	beq.w	40509a <_malloc_r+0x4e2>
  404e00:	f8d9 0000 	ldr.w	r0, [r9]
  404e04:	3001      	adds	r0, #1
  404e06:	bf1b      	ittet	ne
  404e08:	eba2 0a0a 	subne.w	sl, r2, sl
  404e0c:	4451      	addne	r1, sl
  404e0e:	f8c9 2000 	streq.w	r2, [r9]
  404e12:	6019      	strne	r1, [r3, #0]
  404e14:	f012 0107 	ands.w	r1, r2, #7
  404e18:	f000 8115 	beq.w	405046 <_malloc_r+0x48e>
  404e1c:	f1c1 0008 	rsb	r0, r1, #8
  404e20:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404e24:	4402      	add	r2, r0
  404e26:	3108      	adds	r1, #8
  404e28:	eb02 090b 	add.w	r9, r2, fp
  404e2c:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404e30:	eba1 0909 	sub.w	r9, r1, r9
  404e34:	4649      	mov	r1, r9
  404e36:	4628      	mov	r0, r5
  404e38:	9301      	str	r3, [sp, #4]
  404e3a:	9200      	str	r2, [sp, #0]
  404e3c:	f000 fc88 	bl	405750 <_sbrk_r>
  404e40:	1c43      	adds	r3, r0, #1
  404e42:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404e46:	f000 8143 	beq.w	4050d0 <_malloc_r+0x518>
  404e4a:	1a80      	subs	r0, r0, r2
  404e4c:	4448      	add	r0, r9
  404e4e:	f040 0001 	orr.w	r0, r0, #1
  404e52:	6819      	ldr	r1, [r3, #0]
  404e54:	60ba      	str	r2, [r7, #8]
  404e56:	4449      	add	r1, r9
  404e58:	42bc      	cmp	r4, r7
  404e5a:	6050      	str	r0, [r2, #4]
  404e5c:	6019      	str	r1, [r3, #0]
  404e5e:	d017      	beq.n	404e90 <_malloc_r+0x2d8>
  404e60:	f1b8 0f0f 	cmp.w	r8, #15
  404e64:	f240 80fb 	bls.w	40505e <_malloc_r+0x4a6>
  404e68:	6860      	ldr	r0, [r4, #4]
  404e6a:	f1a8 020c 	sub.w	r2, r8, #12
  404e6e:	f022 0207 	bic.w	r2, r2, #7
  404e72:	eb04 0e02 	add.w	lr, r4, r2
  404e76:	f000 0001 	and.w	r0, r0, #1
  404e7a:	f04f 0c05 	mov.w	ip, #5
  404e7e:	4310      	orrs	r0, r2
  404e80:	2a0f      	cmp	r2, #15
  404e82:	6060      	str	r0, [r4, #4]
  404e84:	f8ce c004 	str.w	ip, [lr, #4]
  404e88:	f8ce c008 	str.w	ip, [lr, #8]
  404e8c:	f200 8117 	bhi.w	4050be <_malloc_r+0x506>
  404e90:	4b1d      	ldr	r3, [pc, #116]	; (404f08 <_malloc_r+0x350>)
  404e92:	68bc      	ldr	r4, [r7, #8]
  404e94:	681a      	ldr	r2, [r3, #0]
  404e96:	4291      	cmp	r1, r2
  404e98:	bf88      	it	hi
  404e9a:	6019      	strhi	r1, [r3, #0]
  404e9c:	4b1b      	ldr	r3, [pc, #108]	; (404f0c <_malloc_r+0x354>)
  404e9e:	681a      	ldr	r2, [r3, #0]
  404ea0:	4291      	cmp	r1, r2
  404ea2:	6862      	ldr	r2, [r4, #4]
  404ea4:	bf88      	it	hi
  404ea6:	6019      	strhi	r1, [r3, #0]
  404ea8:	f022 0203 	bic.w	r2, r2, #3
  404eac:	4296      	cmp	r6, r2
  404eae:	eba2 0306 	sub.w	r3, r2, r6
  404eb2:	d801      	bhi.n	404eb8 <_malloc_r+0x300>
  404eb4:	2b0f      	cmp	r3, #15
  404eb6:	dc04      	bgt.n	404ec2 <_malloc_r+0x30a>
  404eb8:	4628      	mov	r0, r5
  404eba:	f000 fa9d 	bl	4053f8 <__malloc_unlock>
  404ebe:	2400      	movs	r4, #0
  404ec0:	e740      	b.n	404d44 <_malloc_r+0x18c>
  404ec2:	19a2      	adds	r2, r4, r6
  404ec4:	f043 0301 	orr.w	r3, r3, #1
  404ec8:	f046 0601 	orr.w	r6, r6, #1
  404ecc:	6066      	str	r6, [r4, #4]
  404ece:	4628      	mov	r0, r5
  404ed0:	60ba      	str	r2, [r7, #8]
  404ed2:	6053      	str	r3, [r2, #4]
  404ed4:	f000 fa90 	bl	4053f8 <__malloc_unlock>
  404ed8:	3408      	adds	r4, #8
  404eda:	4620      	mov	r0, r4
  404edc:	b003      	add	sp, #12
  404ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ee2:	2b14      	cmp	r3, #20
  404ee4:	d971      	bls.n	404fca <_malloc_r+0x412>
  404ee6:	2b54      	cmp	r3, #84	; 0x54
  404ee8:	f200 80a3 	bhi.w	405032 <_malloc_r+0x47a>
  404eec:	0b33      	lsrs	r3, r6, #12
  404eee:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404ef2:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404ef6:	00c3      	lsls	r3, r0, #3
  404ef8:	e680      	b.n	404bfc <_malloc_r+0x44>
  404efa:	bf00      	nop
  404efc:	200005a8 	.word	0x200005a8
  404f00:	20000ac4 	.word	0x20000ac4
  404f04:	20000a94 	.word	0x20000a94
  404f08:	20000abc 	.word	0x20000abc
  404f0c:	20000ac0 	.word	0x20000ac0
  404f10:	200005b0 	.word	0x200005b0
  404f14:	200009b0 	.word	0x200009b0
  404f18:	0a5a      	lsrs	r2, r3, #9
  404f1a:	2a04      	cmp	r2, #4
  404f1c:	d95b      	bls.n	404fd6 <_malloc_r+0x41e>
  404f1e:	2a14      	cmp	r2, #20
  404f20:	f200 80ae 	bhi.w	405080 <_malloc_r+0x4c8>
  404f24:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404f28:	00c9      	lsls	r1, r1, #3
  404f2a:	325b      	adds	r2, #91	; 0x5b
  404f2c:	eb07 0c01 	add.w	ip, r7, r1
  404f30:	5879      	ldr	r1, [r7, r1]
  404f32:	f1ac 0c08 	sub.w	ip, ip, #8
  404f36:	458c      	cmp	ip, r1
  404f38:	f000 8088 	beq.w	40504c <_malloc_r+0x494>
  404f3c:	684a      	ldr	r2, [r1, #4]
  404f3e:	f022 0203 	bic.w	r2, r2, #3
  404f42:	4293      	cmp	r3, r2
  404f44:	d273      	bcs.n	40502e <_malloc_r+0x476>
  404f46:	6889      	ldr	r1, [r1, #8]
  404f48:	458c      	cmp	ip, r1
  404f4a:	d1f7      	bne.n	404f3c <_malloc_r+0x384>
  404f4c:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404f50:	687b      	ldr	r3, [r7, #4]
  404f52:	60e2      	str	r2, [r4, #12]
  404f54:	f8c4 c008 	str.w	ip, [r4, #8]
  404f58:	6094      	str	r4, [r2, #8]
  404f5a:	f8cc 400c 	str.w	r4, [ip, #12]
  404f5e:	e68f      	b.n	404c80 <_malloc_r+0xc8>
  404f60:	19a1      	adds	r1, r4, r6
  404f62:	f046 0c01 	orr.w	ip, r6, #1
  404f66:	f042 0601 	orr.w	r6, r2, #1
  404f6a:	f8c4 c004 	str.w	ip, [r4, #4]
  404f6e:	4628      	mov	r0, r5
  404f70:	6179      	str	r1, [r7, #20]
  404f72:	6139      	str	r1, [r7, #16]
  404f74:	f8c1 e00c 	str.w	lr, [r1, #12]
  404f78:	f8c1 e008 	str.w	lr, [r1, #8]
  404f7c:	604e      	str	r6, [r1, #4]
  404f7e:	50e2      	str	r2, [r4, r3]
  404f80:	f000 fa3a 	bl	4053f8 <__malloc_unlock>
  404f84:	3408      	adds	r4, #8
  404f86:	e6dd      	b.n	404d44 <_malloc_r+0x18c>
  404f88:	687b      	ldr	r3, [r7, #4]
  404f8a:	e679      	b.n	404c80 <_malloc_r+0xc8>
  404f8c:	f108 0801 	add.w	r8, r8, #1
  404f90:	f018 0f03 	tst.w	r8, #3
  404f94:	f10c 0c08 	add.w	ip, ip, #8
  404f98:	f47f ae85 	bne.w	404ca6 <_malloc_r+0xee>
  404f9c:	e02d      	b.n	404ffa <_malloc_r+0x442>
  404f9e:	68dc      	ldr	r4, [r3, #12]
  404fa0:	42a3      	cmp	r3, r4
  404fa2:	bf08      	it	eq
  404fa4:	3002      	addeq	r0, #2
  404fa6:	f43f ae3e 	beq.w	404c26 <_malloc_r+0x6e>
  404faa:	e6bb      	b.n	404d24 <_malloc_r+0x16c>
  404fac:	4419      	add	r1, r3
  404fae:	461c      	mov	r4, r3
  404fb0:	684a      	ldr	r2, [r1, #4]
  404fb2:	68db      	ldr	r3, [r3, #12]
  404fb4:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404fb8:	f042 0201 	orr.w	r2, r2, #1
  404fbc:	604a      	str	r2, [r1, #4]
  404fbe:	4628      	mov	r0, r5
  404fc0:	60f3      	str	r3, [r6, #12]
  404fc2:	609e      	str	r6, [r3, #8]
  404fc4:	f000 fa18 	bl	4053f8 <__malloc_unlock>
  404fc8:	e6bc      	b.n	404d44 <_malloc_r+0x18c>
  404fca:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404fce:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404fd2:	00c3      	lsls	r3, r0, #3
  404fd4:	e612      	b.n	404bfc <_malloc_r+0x44>
  404fd6:	099a      	lsrs	r2, r3, #6
  404fd8:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404fdc:	00c9      	lsls	r1, r1, #3
  404fde:	3238      	adds	r2, #56	; 0x38
  404fe0:	e7a4      	b.n	404f2c <_malloc_r+0x374>
  404fe2:	42bc      	cmp	r4, r7
  404fe4:	d054      	beq.n	405090 <_malloc_r+0x4d8>
  404fe6:	68bc      	ldr	r4, [r7, #8]
  404fe8:	6862      	ldr	r2, [r4, #4]
  404fea:	f022 0203 	bic.w	r2, r2, #3
  404fee:	e75d      	b.n	404eac <_malloc_r+0x2f4>
  404ff0:	f859 3908 	ldr.w	r3, [r9], #-8
  404ff4:	4599      	cmp	r9, r3
  404ff6:	f040 8086 	bne.w	405106 <_malloc_r+0x54e>
  404ffa:	f010 0f03 	tst.w	r0, #3
  404ffe:	f100 30ff 	add.w	r0, r0, #4294967295
  405002:	d1f5      	bne.n	404ff0 <_malloc_r+0x438>
  405004:	687b      	ldr	r3, [r7, #4]
  405006:	ea23 0304 	bic.w	r3, r3, r4
  40500a:	607b      	str	r3, [r7, #4]
  40500c:	0064      	lsls	r4, r4, #1
  40500e:	429c      	cmp	r4, r3
  405010:	f63f aec7 	bhi.w	404da2 <_malloc_r+0x1ea>
  405014:	2c00      	cmp	r4, #0
  405016:	f43f aec4 	beq.w	404da2 <_malloc_r+0x1ea>
  40501a:	421c      	tst	r4, r3
  40501c:	4640      	mov	r0, r8
  40501e:	f47f ae3e 	bne.w	404c9e <_malloc_r+0xe6>
  405022:	0064      	lsls	r4, r4, #1
  405024:	421c      	tst	r4, r3
  405026:	f100 0004 	add.w	r0, r0, #4
  40502a:	d0fa      	beq.n	405022 <_malloc_r+0x46a>
  40502c:	e637      	b.n	404c9e <_malloc_r+0xe6>
  40502e:	468c      	mov	ip, r1
  405030:	e78c      	b.n	404f4c <_malloc_r+0x394>
  405032:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  405036:	d815      	bhi.n	405064 <_malloc_r+0x4ac>
  405038:	0bf3      	lsrs	r3, r6, #15
  40503a:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40503e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  405042:	00c3      	lsls	r3, r0, #3
  405044:	e5da      	b.n	404bfc <_malloc_r+0x44>
  405046:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40504a:	e6ed      	b.n	404e28 <_malloc_r+0x270>
  40504c:	687b      	ldr	r3, [r7, #4]
  40504e:	1092      	asrs	r2, r2, #2
  405050:	2101      	movs	r1, #1
  405052:	fa01 f202 	lsl.w	r2, r1, r2
  405056:	4313      	orrs	r3, r2
  405058:	607b      	str	r3, [r7, #4]
  40505a:	4662      	mov	r2, ip
  40505c:	e779      	b.n	404f52 <_malloc_r+0x39a>
  40505e:	2301      	movs	r3, #1
  405060:	6053      	str	r3, [r2, #4]
  405062:	e729      	b.n	404eb8 <_malloc_r+0x300>
  405064:	f240 5254 	movw	r2, #1364	; 0x554
  405068:	4293      	cmp	r3, r2
  40506a:	d822      	bhi.n	4050b2 <_malloc_r+0x4fa>
  40506c:	0cb3      	lsrs	r3, r6, #18
  40506e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  405072:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  405076:	00c3      	lsls	r3, r0, #3
  405078:	e5c0      	b.n	404bfc <_malloc_r+0x44>
  40507a:	f103 0b10 	add.w	fp, r3, #16
  40507e:	e6ae      	b.n	404dde <_malloc_r+0x226>
  405080:	2a54      	cmp	r2, #84	; 0x54
  405082:	d829      	bhi.n	4050d8 <_malloc_r+0x520>
  405084:	0b1a      	lsrs	r2, r3, #12
  405086:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40508a:	00c9      	lsls	r1, r1, #3
  40508c:	326e      	adds	r2, #110	; 0x6e
  40508e:	e74d      	b.n	404f2c <_malloc_r+0x374>
  405090:	4b20      	ldr	r3, [pc, #128]	; (405114 <_malloc_r+0x55c>)
  405092:	6819      	ldr	r1, [r3, #0]
  405094:	4459      	add	r1, fp
  405096:	6019      	str	r1, [r3, #0]
  405098:	e6b2      	b.n	404e00 <_malloc_r+0x248>
  40509a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40509e:	2800      	cmp	r0, #0
  4050a0:	f47f aeae 	bne.w	404e00 <_malloc_r+0x248>
  4050a4:	eb08 030b 	add.w	r3, r8, fp
  4050a8:	68ba      	ldr	r2, [r7, #8]
  4050aa:	f043 0301 	orr.w	r3, r3, #1
  4050ae:	6053      	str	r3, [r2, #4]
  4050b0:	e6ee      	b.n	404e90 <_malloc_r+0x2d8>
  4050b2:	207f      	movs	r0, #127	; 0x7f
  4050b4:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4050b8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4050bc:	e59e      	b.n	404bfc <_malloc_r+0x44>
  4050be:	f104 0108 	add.w	r1, r4, #8
  4050c2:	4628      	mov	r0, r5
  4050c4:	9300      	str	r3, [sp, #0]
  4050c6:	f7ff fa59 	bl	40457c <_free_r>
  4050ca:	9b00      	ldr	r3, [sp, #0]
  4050cc:	6819      	ldr	r1, [r3, #0]
  4050ce:	e6df      	b.n	404e90 <_malloc_r+0x2d8>
  4050d0:	2001      	movs	r0, #1
  4050d2:	f04f 0900 	mov.w	r9, #0
  4050d6:	e6bc      	b.n	404e52 <_malloc_r+0x29a>
  4050d8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4050dc:	d805      	bhi.n	4050ea <_malloc_r+0x532>
  4050de:	0bda      	lsrs	r2, r3, #15
  4050e0:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4050e4:	00c9      	lsls	r1, r1, #3
  4050e6:	3277      	adds	r2, #119	; 0x77
  4050e8:	e720      	b.n	404f2c <_malloc_r+0x374>
  4050ea:	f240 5154 	movw	r1, #1364	; 0x554
  4050ee:	428a      	cmp	r2, r1
  4050f0:	d805      	bhi.n	4050fe <_malloc_r+0x546>
  4050f2:	0c9a      	lsrs	r2, r3, #18
  4050f4:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4050f8:	00c9      	lsls	r1, r1, #3
  4050fa:	327c      	adds	r2, #124	; 0x7c
  4050fc:	e716      	b.n	404f2c <_malloc_r+0x374>
  4050fe:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  405102:	227e      	movs	r2, #126	; 0x7e
  405104:	e712      	b.n	404f2c <_malloc_r+0x374>
  405106:	687b      	ldr	r3, [r7, #4]
  405108:	e780      	b.n	40500c <_malloc_r+0x454>
  40510a:	08f0      	lsrs	r0, r6, #3
  40510c:	f106 0308 	add.w	r3, r6, #8
  405110:	e600      	b.n	404d14 <_malloc_r+0x15c>
  405112:	bf00      	nop
  405114:	20000a94 	.word	0x20000a94

00405118 <__ascii_mbtowc>:
  405118:	b082      	sub	sp, #8
  40511a:	b149      	cbz	r1, 405130 <__ascii_mbtowc+0x18>
  40511c:	b15a      	cbz	r2, 405136 <__ascii_mbtowc+0x1e>
  40511e:	b16b      	cbz	r3, 40513c <__ascii_mbtowc+0x24>
  405120:	7813      	ldrb	r3, [r2, #0]
  405122:	600b      	str	r3, [r1, #0]
  405124:	7812      	ldrb	r2, [r2, #0]
  405126:	1c10      	adds	r0, r2, #0
  405128:	bf18      	it	ne
  40512a:	2001      	movne	r0, #1
  40512c:	b002      	add	sp, #8
  40512e:	4770      	bx	lr
  405130:	a901      	add	r1, sp, #4
  405132:	2a00      	cmp	r2, #0
  405134:	d1f3      	bne.n	40511e <__ascii_mbtowc+0x6>
  405136:	4610      	mov	r0, r2
  405138:	b002      	add	sp, #8
  40513a:	4770      	bx	lr
  40513c:	f06f 0001 	mvn.w	r0, #1
  405140:	e7f4      	b.n	40512c <__ascii_mbtowc+0x14>
  405142:	bf00      	nop
	...

00405150 <memchr>:
  405150:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  405154:	2a10      	cmp	r2, #16
  405156:	db2b      	blt.n	4051b0 <memchr+0x60>
  405158:	f010 0f07 	tst.w	r0, #7
  40515c:	d008      	beq.n	405170 <memchr+0x20>
  40515e:	f810 3b01 	ldrb.w	r3, [r0], #1
  405162:	3a01      	subs	r2, #1
  405164:	428b      	cmp	r3, r1
  405166:	d02d      	beq.n	4051c4 <memchr+0x74>
  405168:	f010 0f07 	tst.w	r0, #7
  40516c:	b342      	cbz	r2, 4051c0 <memchr+0x70>
  40516e:	d1f6      	bne.n	40515e <memchr+0xe>
  405170:	b4f0      	push	{r4, r5, r6, r7}
  405172:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  405176:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40517a:	f022 0407 	bic.w	r4, r2, #7
  40517e:	f07f 0700 	mvns.w	r7, #0
  405182:	2300      	movs	r3, #0
  405184:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  405188:	3c08      	subs	r4, #8
  40518a:	ea85 0501 	eor.w	r5, r5, r1
  40518e:	ea86 0601 	eor.w	r6, r6, r1
  405192:	fa85 f547 	uadd8	r5, r5, r7
  405196:	faa3 f587 	sel	r5, r3, r7
  40519a:	fa86 f647 	uadd8	r6, r6, r7
  40519e:	faa5 f687 	sel	r6, r5, r7
  4051a2:	b98e      	cbnz	r6, 4051c8 <memchr+0x78>
  4051a4:	d1ee      	bne.n	405184 <memchr+0x34>
  4051a6:	bcf0      	pop	{r4, r5, r6, r7}
  4051a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4051ac:	f002 0207 	and.w	r2, r2, #7
  4051b0:	b132      	cbz	r2, 4051c0 <memchr+0x70>
  4051b2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4051b6:	3a01      	subs	r2, #1
  4051b8:	ea83 0301 	eor.w	r3, r3, r1
  4051bc:	b113      	cbz	r3, 4051c4 <memchr+0x74>
  4051be:	d1f8      	bne.n	4051b2 <memchr+0x62>
  4051c0:	2000      	movs	r0, #0
  4051c2:	4770      	bx	lr
  4051c4:	3801      	subs	r0, #1
  4051c6:	4770      	bx	lr
  4051c8:	2d00      	cmp	r5, #0
  4051ca:	bf06      	itte	eq
  4051cc:	4635      	moveq	r5, r6
  4051ce:	3803      	subeq	r0, #3
  4051d0:	3807      	subne	r0, #7
  4051d2:	f015 0f01 	tst.w	r5, #1
  4051d6:	d107      	bne.n	4051e8 <memchr+0x98>
  4051d8:	3001      	adds	r0, #1
  4051da:	f415 7f80 	tst.w	r5, #256	; 0x100
  4051de:	bf02      	ittt	eq
  4051e0:	3001      	addeq	r0, #1
  4051e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4051e6:	3001      	addeq	r0, #1
  4051e8:	bcf0      	pop	{r4, r5, r6, r7}
  4051ea:	3801      	subs	r0, #1
  4051ec:	4770      	bx	lr
  4051ee:	bf00      	nop

004051f0 <memcpy>:
  4051f0:	4684      	mov	ip, r0
  4051f2:	ea41 0300 	orr.w	r3, r1, r0
  4051f6:	f013 0303 	ands.w	r3, r3, #3
  4051fa:	d16d      	bne.n	4052d8 <memcpy+0xe8>
  4051fc:	3a40      	subs	r2, #64	; 0x40
  4051fe:	d341      	bcc.n	405284 <memcpy+0x94>
  405200:	f851 3b04 	ldr.w	r3, [r1], #4
  405204:	f840 3b04 	str.w	r3, [r0], #4
  405208:	f851 3b04 	ldr.w	r3, [r1], #4
  40520c:	f840 3b04 	str.w	r3, [r0], #4
  405210:	f851 3b04 	ldr.w	r3, [r1], #4
  405214:	f840 3b04 	str.w	r3, [r0], #4
  405218:	f851 3b04 	ldr.w	r3, [r1], #4
  40521c:	f840 3b04 	str.w	r3, [r0], #4
  405220:	f851 3b04 	ldr.w	r3, [r1], #4
  405224:	f840 3b04 	str.w	r3, [r0], #4
  405228:	f851 3b04 	ldr.w	r3, [r1], #4
  40522c:	f840 3b04 	str.w	r3, [r0], #4
  405230:	f851 3b04 	ldr.w	r3, [r1], #4
  405234:	f840 3b04 	str.w	r3, [r0], #4
  405238:	f851 3b04 	ldr.w	r3, [r1], #4
  40523c:	f840 3b04 	str.w	r3, [r0], #4
  405240:	f851 3b04 	ldr.w	r3, [r1], #4
  405244:	f840 3b04 	str.w	r3, [r0], #4
  405248:	f851 3b04 	ldr.w	r3, [r1], #4
  40524c:	f840 3b04 	str.w	r3, [r0], #4
  405250:	f851 3b04 	ldr.w	r3, [r1], #4
  405254:	f840 3b04 	str.w	r3, [r0], #4
  405258:	f851 3b04 	ldr.w	r3, [r1], #4
  40525c:	f840 3b04 	str.w	r3, [r0], #4
  405260:	f851 3b04 	ldr.w	r3, [r1], #4
  405264:	f840 3b04 	str.w	r3, [r0], #4
  405268:	f851 3b04 	ldr.w	r3, [r1], #4
  40526c:	f840 3b04 	str.w	r3, [r0], #4
  405270:	f851 3b04 	ldr.w	r3, [r1], #4
  405274:	f840 3b04 	str.w	r3, [r0], #4
  405278:	f851 3b04 	ldr.w	r3, [r1], #4
  40527c:	f840 3b04 	str.w	r3, [r0], #4
  405280:	3a40      	subs	r2, #64	; 0x40
  405282:	d2bd      	bcs.n	405200 <memcpy+0x10>
  405284:	3230      	adds	r2, #48	; 0x30
  405286:	d311      	bcc.n	4052ac <memcpy+0xbc>
  405288:	f851 3b04 	ldr.w	r3, [r1], #4
  40528c:	f840 3b04 	str.w	r3, [r0], #4
  405290:	f851 3b04 	ldr.w	r3, [r1], #4
  405294:	f840 3b04 	str.w	r3, [r0], #4
  405298:	f851 3b04 	ldr.w	r3, [r1], #4
  40529c:	f840 3b04 	str.w	r3, [r0], #4
  4052a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4052a4:	f840 3b04 	str.w	r3, [r0], #4
  4052a8:	3a10      	subs	r2, #16
  4052aa:	d2ed      	bcs.n	405288 <memcpy+0x98>
  4052ac:	320c      	adds	r2, #12
  4052ae:	d305      	bcc.n	4052bc <memcpy+0xcc>
  4052b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4052b4:	f840 3b04 	str.w	r3, [r0], #4
  4052b8:	3a04      	subs	r2, #4
  4052ba:	d2f9      	bcs.n	4052b0 <memcpy+0xc0>
  4052bc:	3204      	adds	r2, #4
  4052be:	d008      	beq.n	4052d2 <memcpy+0xe2>
  4052c0:	07d2      	lsls	r2, r2, #31
  4052c2:	bf1c      	itt	ne
  4052c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4052c8:	f800 3b01 	strbne.w	r3, [r0], #1
  4052cc:	d301      	bcc.n	4052d2 <memcpy+0xe2>
  4052ce:	880b      	ldrh	r3, [r1, #0]
  4052d0:	8003      	strh	r3, [r0, #0]
  4052d2:	4660      	mov	r0, ip
  4052d4:	4770      	bx	lr
  4052d6:	bf00      	nop
  4052d8:	2a08      	cmp	r2, #8
  4052da:	d313      	bcc.n	405304 <memcpy+0x114>
  4052dc:	078b      	lsls	r3, r1, #30
  4052de:	d08d      	beq.n	4051fc <memcpy+0xc>
  4052e0:	f010 0303 	ands.w	r3, r0, #3
  4052e4:	d08a      	beq.n	4051fc <memcpy+0xc>
  4052e6:	f1c3 0304 	rsb	r3, r3, #4
  4052ea:	1ad2      	subs	r2, r2, r3
  4052ec:	07db      	lsls	r3, r3, #31
  4052ee:	bf1c      	itt	ne
  4052f0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4052f4:	f800 3b01 	strbne.w	r3, [r0], #1
  4052f8:	d380      	bcc.n	4051fc <memcpy+0xc>
  4052fa:	f831 3b02 	ldrh.w	r3, [r1], #2
  4052fe:	f820 3b02 	strh.w	r3, [r0], #2
  405302:	e77b      	b.n	4051fc <memcpy+0xc>
  405304:	3a04      	subs	r2, #4
  405306:	d3d9      	bcc.n	4052bc <memcpy+0xcc>
  405308:	3a01      	subs	r2, #1
  40530a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40530e:	f800 3b01 	strb.w	r3, [r0], #1
  405312:	d2f9      	bcs.n	405308 <memcpy+0x118>
  405314:	780b      	ldrb	r3, [r1, #0]
  405316:	7003      	strb	r3, [r0, #0]
  405318:	784b      	ldrb	r3, [r1, #1]
  40531a:	7043      	strb	r3, [r0, #1]
  40531c:	788b      	ldrb	r3, [r1, #2]
  40531e:	7083      	strb	r3, [r0, #2]
  405320:	4660      	mov	r0, ip
  405322:	4770      	bx	lr

00405324 <memmove>:
  405324:	4288      	cmp	r0, r1
  405326:	b5f0      	push	{r4, r5, r6, r7, lr}
  405328:	d90d      	bls.n	405346 <memmove+0x22>
  40532a:	188b      	adds	r3, r1, r2
  40532c:	4298      	cmp	r0, r3
  40532e:	d20a      	bcs.n	405346 <memmove+0x22>
  405330:	1884      	adds	r4, r0, r2
  405332:	2a00      	cmp	r2, #0
  405334:	d051      	beq.n	4053da <memmove+0xb6>
  405336:	4622      	mov	r2, r4
  405338:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40533c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405340:	4299      	cmp	r1, r3
  405342:	d1f9      	bne.n	405338 <memmove+0x14>
  405344:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405346:	2a0f      	cmp	r2, #15
  405348:	d948      	bls.n	4053dc <memmove+0xb8>
  40534a:	ea41 0300 	orr.w	r3, r1, r0
  40534e:	079b      	lsls	r3, r3, #30
  405350:	d146      	bne.n	4053e0 <memmove+0xbc>
  405352:	f100 0410 	add.w	r4, r0, #16
  405356:	f101 0310 	add.w	r3, r1, #16
  40535a:	4615      	mov	r5, r2
  40535c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405360:	f844 6c10 	str.w	r6, [r4, #-16]
  405364:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405368:	f844 6c0c 	str.w	r6, [r4, #-12]
  40536c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405370:	f844 6c08 	str.w	r6, [r4, #-8]
  405374:	3d10      	subs	r5, #16
  405376:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40537a:	f844 6c04 	str.w	r6, [r4, #-4]
  40537e:	2d0f      	cmp	r5, #15
  405380:	f103 0310 	add.w	r3, r3, #16
  405384:	f104 0410 	add.w	r4, r4, #16
  405388:	d8e8      	bhi.n	40535c <memmove+0x38>
  40538a:	f1a2 0310 	sub.w	r3, r2, #16
  40538e:	f023 030f 	bic.w	r3, r3, #15
  405392:	f002 0e0f 	and.w	lr, r2, #15
  405396:	3310      	adds	r3, #16
  405398:	f1be 0f03 	cmp.w	lr, #3
  40539c:	4419      	add	r1, r3
  40539e:	4403      	add	r3, r0
  4053a0:	d921      	bls.n	4053e6 <memmove+0xc2>
  4053a2:	1f1e      	subs	r6, r3, #4
  4053a4:	460d      	mov	r5, r1
  4053a6:	4674      	mov	r4, lr
  4053a8:	3c04      	subs	r4, #4
  4053aa:	f855 7b04 	ldr.w	r7, [r5], #4
  4053ae:	f846 7f04 	str.w	r7, [r6, #4]!
  4053b2:	2c03      	cmp	r4, #3
  4053b4:	d8f8      	bhi.n	4053a8 <memmove+0x84>
  4053b6:	f1ae 0404 	sub.w	r4, lr, #4
  4053ba:	f024 0403 	bic.w	r4, r4, #3
  4053be:	3404      	adds	r4, #4
  4053c0:	4421      	add	r1, r4
  4053c2:	4423      	add	r3, r4
  4053c4:	f002 0203 	and.w	r2, r2, #3
  4053c8:	b162      	cbz	r2, 4053e4 <memmove+0xc0>
  4053ca:	3b01      	subs	r3, #1
  4053cc:	440a      	add	r2, r1
  4053ce:	f811 4b01 	ldrb.w	r4, [r1], #1
  4053d2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4053d6:	428a      	cmp	r2, r1
  4053d8:	d1f9      	bne.n	4053ce <memmove+0xaa>
  4053da:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4053dc:	4603      	mov	r3, r0
  4053de:	e7f3      	b.n	4053c8 <memmove+0xa4>
  4053e0:	4603      	mov	r3, r0
  4053e2:	e7f2      	b.n	4053ca <memmove+0xa6>
  4053e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4053e6:	4672      	mov	r2, lr
  4053e8:	e7ee      	b.n	4053c8 <memmove+0xa4>
  4053ea:	bf00      	nop

004053ec <__malloc_lock>:
  4053ec:	4801      	ldr	r0, [pc, #4]	; (4053f4 <__malloc_lock+0x8>)
  4053ee:	f7ff bb5f 	b.w	404ab0 <__retarget_lock_acquire_recursive>
  4053f2:	bf00      	nop
  4053f4:	20008de4 	.word	0x20008de4

004053f8 <__malloc_unlock>:
  4053f8:	4801      	ldr	r0, [pc, #4]	; (405400 <__malloc_unlock+0x8>)
  4053fa:	f7ff bb5b 	b.w	404ab4 <__retarget_lock_release_recursive>
  4053fe:	bf00      	nop
  405400:	20008de4 	.word	0x20008de4

00405404 <_realloc_r>:
  405404:	2900      	cmp	r1, #0
  405406:	f000 8095 	beq.w	405534 <_realloc_r+0x130>
  40540a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40540e:	460d      	mov	r5, r1
  405410:	4616      	mov	r6, r2
  405412:	b083      	sub	sp, #12
  405414:	4680      	mov	r8, r0
  405416:	f106 070b 	add.w	r7, r6, #11
  40541a:	f7ff ffe7 	bl	4053ec <__malloc_lock>
  40541e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405422:	2f16      	cmp	r7, #22
  405424:	f02e 0403 	bic.w	r4, lr, #3
  405428:	f1a5 0908 	sub.w	r9, r5, #8
  40542c:	d83c      	bhi.n	4054a8 <_realloc_r+0xa4>
  40542e:	2210      	movs	r2, #16
  405430:	4617      	mov	r7, r2
  405432:	42be      	cmp	r6, r7
  405434:	d83d      	bhi.n	4054b2 <_realloc_r+0xae>
  405436:	4294      	cmp	r4, r2
  405438:	da43      	bge.n	4054c2 <_realloc_r+0xbe>
  40543a:	4bc4      	ldr	r3, [pc, #784]	; (40574c <_realloc_r+0x348>)
  40543c:	6899      	ldr	r1, [r3, #8]
  40543e:	eb09 0004 	add.w	r0, r9, r4
  405442:	4288      	cmp	r0, r1
  405444:	f000 80b4 	beq.w	4055b0 <_realloc_r+0x1ac>
  405448:	6843      	ldr	r3, [r0, #4]
  40544a:	f023 0101 	bic.w	r1, r3, #1
  40544e:	4401      	add	r1, r0
  405450:	6849      	ldr	r1, [r1, #4]
  405452:	07c9      	lsls	r1, r1, #31
  405454:	d54c      	bpl.n	4054f0 <_realloc_r+0xec>
  405456:	f01e 0f01 	tst.w	lr, #1
  40545a:	f000 809b 	beq.w	405594 <_realloc_r+0x190>
  40545e:	4631      	mov	r1, r6
  405460:	4640      	mov	r0, r8
  405462:	f7ff fba9 	bl	404bb8 <_malloc_r>
  405466:	4606      	mov	r6, r0
  405468:	2800      	cmp	r0, #0
  40546a:	d03a      	beq.n	4054e2 <_realloc_r+0xde>
  40546c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405470:	f023 0301 	bic.w	r3, r3, #1
  405474:	444b      	add	r3, r9
  405476:	f1a0 0208 	sub.w	r2, r0, #8
  40547a:	429a      	cmp	r2, r3
  40547c:	f000 8121 	beq.w	4056c2 <_realloc_r+0x2be>
  405480:	1f22      	subs	r2, r4, #4
  405482:	2a24      	cmp	r2, #36	; 0x24
  405484:	f200 8107 	bhi.w	405696 <_realloc_r+0x292>
  405488:	2a13      	cmp	r2, #19
  40548a:	f200 80db 	bhi.w	405644 <_realloc_r+0x240>
  40548e:	4603      	mov	r3, r0
  405490:	462a      	mov	r2, r5
  405492:	6811      	ldr	r1, [r2, #0]
  405494:	6019      	str	r1, [r3, #0]
  405496:	6851      	ldr	r1, [r2, #4]
  405498:	6059      	str	r1, [r3, #4]
  40549a:	6892      	ldr	r2, [r2, #8]
  40549c:	609a      	str	r2, [r3, #8]
  40549e:	4629      	mov	r1, r5
  4054a0:	4640      	mov	r0, r8
  4054a2:	f7ff f86b 	bl	40457c <_free_r>
  4054a6:	e01c      	b.n	4054e2 <_realloc_r+0xde>
  4054a8:	f027 0707 	bic.w	r7, r7, #7
  4054ac:	2f00      	cmp	r7, #0
  4054ae:	463a      	mov	r2, r7
  4054b0:	dabf      	bge.n	405432 <_realloc_r+0x2e>
  4054b2:	2600      	movs	r6, #0
  4054b4:	230c      	movs	r3, #12
  4054b6:	4630      	mov	r0, r6
  4054b8:	f8c8 3000 	str.w	r3, [r8]
  4054bc:	b003      	add	sp, #12
  4054be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054c2:	462e      	mov	r6, r5
  4054c4:	1be3      	subs	r3, r4, r7
  4054c6:	2b0f      	cmp	r3, #15
  4054c8:	d81e      	bhi.n	405508 <_realloc_r+0x104>
  4054ca:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4054ce:	f003 0301 	and.w	r3, r3, #1
  4054d2:	4323      	orrs	r3, r4
  4054d4:	444c      	add	r4, r9
  4054d6:	f8c9 3004 	str.w	r3, [r9, #4]
  4054da:	6863      	ldr	r3, [r4, #4]
  4054dc:	f043 0301 	orr.w	r3, r3, #1
  4054e0:	6063      	str	r3, [r4, #4]
  4054e2:	4640      	mov	r0, r8
  4054e4:	f7ff ff88 	bl	4053f8 <__malloc_unlock>
  4054e8:	4630      	mov	r0, r6
  4054ea:	b003      	add	sp, #12
  4054ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054f0:	f023 0303 	bic.w	r3, r3, #3
  4054f4:	18e1      	adds	r1, r4, r3
  4054f6:	4291      	cmp	r1, r2
  4054f8:	db1f      	blt.n	40553a <_realloc_r+0x136>
  4054fa:	68c3      	ldr	r3, [r0, #12]
  4054fc:	6882      	ldr	r2, [r0, #8]
  4054fe:	462e      	mov	r6, r5
  405500:	60d3      	str	r3, [r2, #12]
  405502:	460c      	mov	r4, r1
  405504:	609a      	str	r2, [r3, #8]
  405506:	e7dd      	b.n	4054c4 <_realloc_r+0xc0>
  405508:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40550c:	eb09 0107 	add.w	r1, r9, r7
  405510:	f002 0201 	and.w	r2, r2, #1
  405514:	444c      	add	r4, r9
  405516:	f043 0301 	orr.w	r3, r3, #1
  40551a:	4317      	orrs	r7, r2
  40551c:	f8c9 7004 	str.w	r7, [r9, #4]
  405520:	604b      	str	r3, [r1, #4]
  405522:	6863      	ldr	r3, [r4, #4]
  405524:	f043 0301 	orr.w	r3, r3, #1
  405528:	3108      	adds	r1, #8
  40552a:	6063      	str	r3, [r4, #4]
  40552c:	4640      	mov	r0, r8
  40552e:	f7ff f825 	bl	40457c <_free_r>
  405532:	e7d6      	b.n	4054e2 <_realloc_r+0xde>
  405534:	4611      	mov	r1, r2
  405536:	f7ff bb3f 	b.w	404bb8 <_malloc_r>
  40553a:	f01e 0f01 	tst.w	lr, #1
  40553e:	d18e      	bne.n	40545e <_realloc_r+0x5a>
  405540:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405544:	eba9 0a01 	sub.w	sl, r9, r1
  405548:	f8da 1004 	ldr.w	r1, [sl, #4]
  40554c:	f021 0103 	bic.w	r1, r1, #3
  405550:	440b      	add	r3, r1
  405552:	4423      	add	r3, r4
  405554:	4293      	cmp	r3, r2
  405556:	db25      	blt.n	4055a4 <_realloc_r+0x1a0>
  405558:	68c2      	ldr	r2, [r0, #12]
  40555a:	6881      	ldr	r1, [r0, #8]
  40555c:	4656      	mov	r6, sl
  40555e:	60ca      	str	r2, [r1, #12]
  405560:	6091      	str	r1, [r2, #8]
  405562:	f8da 100c 	ldr.w	r1, [sl, #12]
  405566:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40556a:	1f22      	subs	r2, r4, #4
  40556c:	2a24      	cmp	r2, #36	; 0x24
  40556e:	60c1      	str	r1, [r0, #12]
  405570:	6088      	str	r0, [r1, #8]
  405572:	f200 8094 	bhi.w	40569e <_realloc_r+0x29a>
  405576:	2a13      	cmp	r2, #19
  405578:	d96f      	bls.n	40565a <_realloc_r+0x256>
  40557a:	6829      	ldr	r1, [r5, #0]
  40557c:	f8ca 1008 	str.w	r1, [sl, #8]
  405580:	6869      	ldr	r1, [r5, #4]
  405582:	f8ca 100c 	str.w	r1, [sl, #12]
  405586:	2a1b      	cmp	r2, #27
  405588:	f200 80a2 	bhi.w	4056d0 <_realloc_r+0x2cc>
  40558c:	3508      	adds	r5, #8
  40558e:	f10a 0210 	add.w	r2, sl, #16
  405592:	e063      	b.n	40565c <_realloc_r+0x258>
  405594:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405598:	eba9 0a03 	sub.w	sl, r9, r3
  40559c:	f8da 1004 	ldr.w	r1, [sl, #4]
  4055a0:	f021 0103 	bic.w	r1, r1, #3
  4055a4:	1863      	adds	r3, r4, r1
  4055a6:	4293      	cmp	r3, r2
  4055a8:	f6ff af59 	blt.w	40545e <_realloc_r+0x5a>
  4055ac:	4656      	mov	r6, sl
  4055ae:	e7d8      	b.n	405562 <_realloc_r+0x15e>
  4055b0:	6841      	ldr	r1, [r0, #4]
  4055b2:	f021 0b03 	bic.w	fp, r1, #3
  4055b6:	44a3      	add	fp, r4
  4055b8:	f107 0010 	add.w	r0, r7, #16
  4055bc:	4583      	cmp	fp, r0
  4055be:	da56      	bge.n	40566e <_realloc_r+0x26a>
  4055c0:	f01e 0f01 	tst.w	lr, #1
  4055c4:	f47f af4b 	bne.w	40545e <_realloc_r+0x5a>
  4055c8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4055cc:	eba9 0a01 	sub.w	sl, r9, r1
  4055d0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4055d4:	f021 0103 	bic.w	r1, r1, #3
  4055d8:	448b      	add	fp, r1
  4055da:	4558      	cmp	r0, fp
  4055dc:	dce2      	bgt.n	4055a4 <_realloc_r+0x1a0>
  4055de:	4656      	mov	r6, sl
  4055e0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4055e4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4055e8:	1f22      	subs	r2, r4, #4
  4055ea:	2a24      	cmp	r2, #36	; 0x24
  4055ec:	60c1      	str	r1, [r0, #12]
  4055ee:	6088      	str	r0, [r1, #8]
  4055f0:	f200 808f 	bhi.w	405712 <_realloc_r+0x30e>
  4055f4:	2a13      	cmp	r2, #19
  4055f6:	f240 808a 	bls.w	40570e <_realloc_r+0x30a>
  4055fa:	6829      	ldr	r1, [r5, #0]
  4055fc:	f8ca 1008 	str.w	r1, [sl, #8]
  405600:	6869      	ldr	r1, [r5, #4]
  405602:	f8ca 100c 	str.w	r1, [sl, #12]
  405606:	2a1b      	cmp	r2, #27
  405608:	f200 808a 	bhi.w	405720 <_realloc_r+0x31c>
  40560c:	3508      	adds	r5, #8
  40560e:	f10a 0210 	add.w	r2, sl, #16
  405612:	6829      	ldr	r1, [r5, #0]
  405614:	6011      	str	r1, [r2, #0]
  405616:	6869      	ldr	r1, [r5, #4]
  405618:	6051      	str	r1, [r2, #4]
  40561a:	68a9      	ldr	r1, [r5, #8]
  40561c:	6091      	str	r1, [r2, #8]
  40561e:	eb0a 0107 	add.w	r1, sl, r7
  405622:	ebab 0207 	sub.w	r2, fp, r7
  405626:	f042 0201 	orr.w	r2, r2, #1
  40562a:	6099      	str	r1, [r3, #8]
  40562c:	604a      	str	r2, [r1, #4]
  40562e:	f8da 3004 	ldr.w	r3, [sl, #4]
  405632:	f003 0301 	and.w	r3, r3, #1
  405636:	431f      	orrs	r7, r3
  405638:	4640      	mov	r0, r8
  40563a:	f8ca 7004 	str.w	r7, [sl, #4]
  40563e:	f7ff fedb 	bl	4053f8 <__malloc_unlock>
  405642:	e751      	b.n	4054e8 <_realloc_r+0xe4>
  405644:	682b      	ldr	r3, [r5, #0]
  405646:	6003      	str	r3, [r0, #0]
  405648:	686b      	ldr	r3, [r5, #4]
  40564a:	6043      	str	r3, [r0, #4]
  40564c:	2a1b      	cmp	r2, #27
  40564e:	d82d      	bhi.n	4056ac <_realloc_r+0x2a8>
  405650:	f100 0308 	add.w	r3, r0, #8
  405654:	f105 0208 	add.w	r2, r5, #8
  405658:	e71b      	b.n	405492 <_realloc_r+0x8e>
  40565a:	4632      	mov	r2, r6
  40565c:	6829      	ldr	r1, [r5, #0]
  40565e:	6011      	str	r1, [r2, #0]
  405660:	6869      	ldr	r1, [r5, #4]
  405662:	6051      	str	r1, [r2, #4]
  405664:	68a9      	ldr	r1, [r5, #8]
  405666:	6091      	str	r1, [r2, #8]
  405668:	461c      	mov	r4, r3
  40566a:	46d1      	mov	r9, sl
  40566c:	e72a      	b.n	4054c4 <_realloc_r+0xc0>
  40566e:	eb09 0107 	add.w	r1, r9, r7
  405672:	ebab 0b07 	sub.w	fp, fp, r7
  405676:	f04b 0201 	orr.w	r2, fp, #1
  40567a:	6099      	str	r1, [r3, #8]
  40567c:	604a      	str	r2, [r1, #4]
  40567e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405682:	f003 0301 	and.w	r3, r3, #1
  405686:	431f      	orrs	r7, r3
  405688:	4640      	mov	r0, r8
  40568a:	f845 7c04 	str.w	r7, [r5, #-4]
  40568e:	f7ff feb3 	bl	4053f8 <__malloc_unlock>
  405692:	462e      	mov	r6, r5
  405694:	e728      	b.n	4054e8 <_realloc_r+0xe4>
  405696:	4629      	mov	r1, r5
  405698:	f7ff fe44 	bl	405324 <memmove>
  40569c:	e6ff      	b.n	40549e <_realloc_r+0x9a>
  40569e:	4629      	mov	r1, r5
  4056a0:	4630      	mov	r0, r6
  4056a2:	461c      	mov	r4, r3
  4056a4:	46d1      	mov	r9, sl
  4056a6:	f7ff fe3d 	bl	405324 <memmove>
  4056aa:	e70b      	b.n	4054c4 <_realloc_r+0xc0>
  4056ac:	68ab      	ldr	r3, [r5, #8]
  4056ae:	6083      	str	r3, [r0, #8]
  4056b0:	68eb      	ldr	r3, [r5, #12]
  4056b2:	60c3      	str	r3, [r0, #12]
  4056b4:	2a24      	cmp	r2, #36	; 0x24
  4056b6:	d017      	beq.n	4056e8 <_realloc_r+0x2e4>
  4056b8:	f100 0310 	add.w	r3, r0, #16
  4056bc:	f105 0210 	add.w	r2, r5, #16
  4056c0:	e6e7      	b.n	405492 <_realloc_r+0x8e>
  4056c2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4056c6:	f023 0303 	bic.w	r3, r3, #3
  4056ca:	441c      	add	r4, r3
  4056cc:	462e      	mov	r6, r5
  4056ce:	e6f9      	b.n	4054c4 <_realloc_r+0xc0>
  4056d0:	68a9      	ldr	r1, [r5, #8]
  4056d2:	f8ca 1010 	str.w	r1, [sl, #16]
  4056d6:	68e9      	ldr	r1, [r5, #12]
  4056d8:	f8ca 1014 	str.w	r1, [sl, #20]
  4056dc:	2a24      	cmp	r2, #36	; 0x24
  4056de:	d00c      	beq.n	4056fa <_realloc_r+0x2f6>
  4056e0:	3510      	adds	r5, #16
  4056e2:	f10a 0218 	add.w	r2, sl, #24
  4056e6:	e7b9      	b.n	40565c <_realloc_r+0x258>
  4056e8:	692b      	ldr	r3, [r5, #16]
  4056ea:	6103      	str	r3, [r0, #16]
  4056ec:	696b      	ldr	r3, [r5, #20]
  4056ee:	6143      	str	r3, [r0, #20]
  4056f0:	f105 0218 	add.w	r2, r5, #24
  4056f4:	f100 0318 	add.w	r3, r0, #24
  4056f8:	e6cb      	b.n	405492 <_realloc_r+0x8e>
  4056fa:	692a      	ldr	r2, [r5, #16]
  4056fc:	f8ca 2018 	str.w	r2, [sl, #24]
  405700:	696a      	ldr	r2, [r5, #20]
  405702:	f8ca 201c 	str.w	r2, [sl, #28]
  405706:	3518      	adds	r5, #24
  405708:	f10a 0220 	add.w	r2, sl, #32
  40570c:	e7a6      	b.n	40565c <_realloc_r+0x258>
  40570e:	4632      	mov	r2, r6
  405710:	e77f      	b.n	405612 <_realloc_r+0x20e>
  405712:	4629      	mov	r1, r5
  405714:	4630      	mov	r0, r6
  405716:	9301      	str	r3, [sp, #4]
  405718:	f7ff fe04 	bl	405324 <memmove>
  40571c:	9b01      	ldr	r3, [sp, #4]
  40571e:	e77e      	b.n	40561e <_realloc_r+0x21a>
  405720:	68a9      	ldr	r1, [r5, #8]
  405722:	f8ca 1010 	str.w	r1, [sl, #16]
  405726:	68e9      	ldr	r1, [r5, #12]
  405728:	f8ca 1014 	str.w	r1, [sl, #20]
  40572c:	2a24      	cmp	r2, #36	; 0x24
  40572e:	d003      	beq.n	405738 <_realloc_r+0x334>
  405730:	3510      	adds	r5, #16
  405732:	f10a 0218 	add.w	r2, sl, #24
  405736:	e76c      	b.n	405612 <_realloc_r+0x20e>
  405738:	692a      	ldr	r2, [r5, #16]
  40573a:	f8ca 2018 	str.w	r2, [sl, #24]
  40573e:	696a      	ldr	r2, [r5, #20]
  405740:	f8ca 201c 	str.w	r2, [sl, #28]
  405744:	3518      	adds	r5, #24
  405746:	f10a 0220 	add.w	r2, sl, #32
  40574a:	e762      	b.n	405612 <_realloc_r+0x20e>
  40574c:	200005a8 	.word	0x200005a8

00405750 <_sbrk_r>:
  405750:	b538      	push	{r3, r4, r5, lr}
  405752:	4c07      	ldr	r4, [pc, #28]	; (405770 <_sbrk_r+0x20>)
  405754:	2300      	movs	r3, #0
  405756:	4605      	mov	r5, r0
  405758:	4608      	mov	r0, r1
  40575a:	6023      	str	r3, [r4, #0]
  40575c:	f7fb fa4c 	bl	400bf8 <_sbrk>
  405760:	1c43      	adds	r3, r0, #1
  405762:	d000      	beq.n	405766 <_sbrk_r+0x16>
  405764:	bd38      	pop	{r3, r4, r5, pc}
  405766:	6823      	ldr	r3, [r4, #0]
  405768:	2b00      	cmp	r3, #0
  40576a:	d0fb      	beq.n	405764 <_sbrk_r+0x14>
  40576c:	602b      	str	r3, [r5, #0]
  40576e:	bd38      	pop	{r3, r4, r5, pc}
  405770:	20008df8 	.word	0x20008df8

00405774 <__sread>:
  405774:	b510      	push	{r4, lr}
  405776:	460c      	mov	r4, r1
  405778:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40577c:	f000 fa66 	bl	405c4c <_read_r>
  405780:	2800      	cmp	r0, #0
  405782:	db03      	blt.n	40578c <__sread+0x18>
  405784:	6d23      	ldr	r3, [r4, #80]	; 0x50
  405786:	4403      	add	r3, r0
  405788:	6523      	str	r3, [r4, #80]	; 0x50
  40578a:	bd10      	pop	{r4, pc}
  40578c:	89a3      	ldrh	r3, [r4, #12]
  40578e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  405792:	81a3      	strh	r3, [r4, #12]
  405794:	bd10      	pop	{r4, pc}
  405796:	bf00      	nop

00405798 <__swrite>:
  405798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40579c:	4616      	mov	r6, r2
  40579e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4057a2:	461f      	mov	r7, r3
  4057a4:	05d3      	lsls	r3, r2, #23
  4057a6:	460c      	mov	r4, r1
  4057a8:	4605      	mov	r5, r0
  4057aa:	d507      	bpl.n	4057bc <__swrite+0x24>
  4057ac:	2200      	movs	r2, #0
  4057ae:	2302      	movs	r3, #2
  4057b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4057b4:	f000 fa34 	bl	405c20 <_lseek_r>
  4057b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4057bc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4057c0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  4057c4:	81a2      	strh	r2, [r4, #12]
  4057c6:	463b      	mov	r3, r7
  4057c8:	4632      	mov	r2, r6
  4057ca:	4628      	mov	r0, r5
  4057cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4057d0:	f000 b914 	b.w	4059fc <_write_r>

004057d4 <__sseek>:
  4057d4:	b510      	push	{r4, lr}
  4057d6:	460c      	mov	r4, r1
  4057d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4057dc:	f000 fa20 	bl	405c20 <_lseek_r>
  4057e0:	89a3      	ldrh	r3, [r4, #12]
  4057e2:	1c42      	adds	r2, r0, #1
  4057e4:	bf0e      	itee	eq
  4057e6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  4057ea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  4057ee:	6520      	strne	r0, [r4, #80]	; 0x50
  4057f0:	81a3      	strh	r3, [r4, #12]
  4057f2:	bd10      	pop	{r4, pc}

004057f4 <__sclose>:
  4057f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4057f8:	f000 b978 	b.w	405aec <_close_r>
  4057fc:	0000      	movs	r0, r0
	...

00405800 <strlen>:
  405800:	f890 f000 	pld	[r0]
  405804:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405808:	f020 0107 	bic.w	r1, r0, #7
  40580c:	f06f 0c00 	mvn.w	ip, #0
  405810:	f010 0407 	ands.w	r4, r0, #7
  405814:	f891 f020 	pld	[r1, #32]
  405818:	f040 8049 	bne.w	4058ae <strlen+0xae>
  40581c:	f04f 0400 	mov.w	r4, #0
  405820:	f06f 0007 	mvn.w	r0, #7
  405824:	e9d1 2300 	ldrd	r2, r3, [r1]
  405828:	f891 f040 	pld	[r1, #64]	; 0x40
  40582c:	f100 0008 	add.w	r0, r0, #8
  405830:	fa82 f24c 	uadd8	r2, r2, ip
  405834:	faa4 f28c 	sel	r2, r4, ip
  405838:	fa83 f34c 	uadd8	r3, r3, ip
  40583c:	faa2 f38c 	sel	r3, r2, ip
  405840:	bb4b      	cbnz	r3, 405896 <strlen+0x96>
  405842:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405846:	fa82 f24c 	uadd8	r2, r2, ip
  40584a:	f100 0008 	add.w	r0, r0, #8
  40584e:	faa4 f28c 	sel	r2, r4, ip
  405852:	fa83 f34c 	uadd8	r3, r3, ip
  405856:	faa2 f38c 	sel	r3, r2, ip
  40585a:	b9e3      	cbnz	r3, 405896 <strlen+0x96>
  40585c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405860:	fa82 f24c 	uadd8	r2, r2, ip
  405864:	f100 0008 	add.w	r0, r0, #8
  405868:	faa4 f28c 	sel	r2, r4, ip
  40586c:	fa83 f34c 	uadd8	r3, r3, ip
  405870:	faa2 f38c 	sel	r3, r2, ip
  405874:	b97b      	cbnz	r3, 405896 <strlen+0x96>
  405876:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40587a:	f101 0120 	add.w	r1, r1, #32
  40587e:	fa82 f24c 	uadd8	r2, r2, ip
  405882:	f100 0008 	add.w	r0, r0, #8
  405886:	faa4 f28c 	sel	r2, r4, ip
  40588a:	fa83 f34c 	uadd8	r3, r3, ip
  40588e:	faa2 f38c 	sel	r3, r2, ip
  405892:	2b00      	cmp	r3, #0
  405894:	d0c6      	beq.n	405824 <strlen+0x24>
  405896:	2a00      	cmp	r2, #0
  405898:	bf04      	itt	eq
  40589a:	3004      	addeq	r0, #4
  40589c:	461a      	moveq	r2, r3
  40589e:	ba12      	rev	r2, r2
  4058a0:	fab2 f282 	clz	r2, r2
  4058a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4058a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4058ac:	4770      	bx	lr
  4058ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4058b2:	f004 0503 	and.w	r5, r4, #3
  4058b6:	f1c4 0000 	rsb	r0, r4, #0
  4058ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4058be:	f014 0f04 	tst.w	r4, #4
  4058c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4058c6:	fa0c f505 	lsl.w	r5, ip, r5
  4058ca:	ea62 0205 	orn	r2, r2, r5
  4058ce:	bf1c      	itt	ne
  4058d0:	ea63 0305 	ornne	r3, r3, r5
  4058d4:	4662      	movne	r2, ip
  4058d6:	f04f 0400 	mov.w	r4, #0
  4058da:	e7a9      	b.n	405830 <strlen+0x30>

004058dc <__swbuf_r>:
  4058dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4058de:	460d      	mov	r5, r1
  4058e0:	4614      	mov	r4, r2
  4058e2:	4606      	mov	r6, r0
  4058e4:	b110      	cbz	r0, 4058ec <__swbuf_r+0x10>
  4058e6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4058e8:	2b00      	cmp	r3, #0
  4058ea:	d04b      	beq.n	405984 <__swbuf_r+0xa8>
  4058ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4058f0:	69a3      	ldr	r3, [r4, #24]
  4058f2:	60a3      	str	r3, [r4, #8]
  4058f4:	b291      	uxth	r1, r2
  4058f6:	0708      	lsls	r0, r1, #28
  4058f8:	d539      	bpl.n	40596e <__swbuf_r+0x92>
  4058fa:	6923      	ldr	r3, [r4, #16]
  4058fc:	2b00      	cmp	r3, #0
  4058fe:	d036      	beq.n	40596e <__swbuf_r+0x92>
  405900:	b2ed      	uxtb	r5, r5
  405902:	0489      	lsls	r1, r1, #18
  405904:	462f      	mov	r7, r5
  405906:	d515      	bpl.n	405934 <__swbuf_r+0x58>
  405908:	6822      	ldr	r2, [r4, #0]
  40590a:	6961      	ldr	r1, [r4, #20]
  40590c:	1ad3      	subs	r3, r2, r3
  40590e:	428b      	cmp	r3, r1
  405910:	da1c      	bge.n	40594c <__swbuf_r+0x70>
  405912:	3301      	adds	r3, #1
  405914:	68a1      	ldr	r1, [r4, #8]
  405916:	1c50      	adds	r0, r2, #1
  405918:	3901      	subs	r1, #1
  40591a:	60a1      	str	r1, [r4, #8]
  40591c:	6020      	str	r0, [r4, #0]
  40591e:	7015      	strb	r5, [r2, #0]
  405920:	6962      	ldr	r2, [r4, #20]
  405922:	429a      	cmp	r2, r3
  405924:	d01a      	beq.n	40595c <__swbuf_r+0x80>
  405926:	89a3      	ldrh	r3, [r4, #12]
  405928:	07db      	lsls	r3, r3, #31
  40592a:	d501      	bpl.n	405930 <__swbuf_r+0x54>
  40592c:	2d0a      	cmp	r5, #10
  40592e:	d015      	beq.n	40595c <__swbuf_r+0x80>
  405930:	4638      	mov	r0, r7
  405932:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405934:	6e61      	ldr	r1, [r4, #100]	; 0x64
  405936:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40593a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40593e:	81a2      	strh	r2, [r4, #12]
  405940:	6822      	ldr	r2, [r4, #0]
  405942:	6661      	str	r1, [r4, #100]	; 0x64
  405944:	6961      	ldr	r1, [r4, #20]
  405946:	1ad3      	subs	r3, r2, r3
  405948:	428b      	cmp	r3, r1
  40594a:	dbe2      	blt.n	405912 <__swbuf_r+0x36>
  40594c:	4621      	mov	r1, r4
  40594e:	4630      	mov	r0, r6
  405950:	f7fe fc96 	bl	404280 <_fflush_r>
  405954:	b940      	cbnz	r0, 405968 <__swbuf_r+0x8c>
  405956:	6822      	ldr	r2, [r4, #0]
  405958:	2301      	movs	r3, #1
  40595a:	e7db      	b.n	405914 <__swbuf_r+0x38>
  40595c:	4621      	mov	r1, r4
  40595e:	4630      	mov	r0, r6
  405960:	f7fe fc8e 	bl	404280 <_fflush_r>
  405964:	2800      	cmp	r0, #0
  405966:	d0e3      	beq.n	405930 <__swbuf_r+0x54>
  405968:	f04f 37ff 	mov.w	r7, #4294967295
  40596c:	e7e0      	b.n	405930 <__swbuf_r+0x54>
  40596e:	4621      	mov	r1, r4
  405970:	4630      	mov	r0, r6
  405972:	f7fe fb71 	bl	404058 <__swsetup_r>
  405976:	2800      	cmp	r0, #0
  405978:	d1f6      	bne.n	405968 <__swbuf_r+0x8c>
  40597a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40597e:	6923      	ldr	r3, [r4, #16]
  405980:	b291      	uxth	r1, r2
  405982:	e7bd      	b.n	405900 <__swbuf_r+0x24>
  405984:	f7fe fcd4 	bl	404330 <__sinit>
  405988:	e7b0      	b.n	4058ec <__swbuf_r+0x10>
  40598a:	bf00      	nop

0040598c <_wcrtomb_r>:
  40598c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40598e:	4606      	mov	r6, r0
  405990:	b085      	sub	sp, #20
  405992:	461f      	mov	r7, r3
  405994:	b189      	cbz	r1, 4059ba <_wcrtomb_r+0x2e>
  405996:	4c10      	ldr	r4, [pc, #64]	; (4059d8 <_wcrtomb_r+0x4c>)
  405998:	4d10      	ldr	r5, [pc, #64]	; (4059dc <_wcrtomb_r+0x50>)
  40599a:	6824      	ldr	r4, [r4, #0]
  40599c:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40599e:	2c00      	cmp	r4, #0
  4059a0:	bf08      	it	eq
  4059a2:	462c      	moveq	r4, r5
  4059a4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  4059a8:	47a0      	blx	r4
  4059aa:	1c43      	adds	r3, r0, #1
  4059ac:	d103      	bne.n	4059b6 <_wcrtomb_r+0x2a>
  4059ae:	2200      	movs	r2, #0
  4059b0:	238a      	movs	r3, #138	; 0x8a
  4059b2:	603a      	str	r2, [r7, #0]
  4059b4:	6033      	str	r3, [r6, #0]
  4059b6:	b005      	add	sp, #20
  4059b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4059ba:	460c      	mov	r4, r1
  4059bc:	4906      	ldr	r1, [pc, #24]	; (4059d8 <_wcrtomb_r+0x4c>)
  4059be:	4a07      	ldr	r2, [pc, #28]	; (4059dc <_wcrtomb_r+0x50>)
  4059c0:	6809      	ldr	r1, [r1, #0]
  4059c2:	6b49      	ldr	r1, [r1, #52]	; 0x34
  4059c4:	2900      	cmp	r1, #0
  4059c6:	bf08      	it	eq
  4059c8:	4611      	moveq	r1, r2
  4059ca:	4622      	mov	r2, r4
  4059cc:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  4059d0:	a901      	add	r1, sp, #4
  4059d2:	47a0      	blx	r4
  4059d4:	e7e9      	b.n	4059aa <_wcrtomb_r+0x1e>
  4059d6:	bf00      	nop
  4059d8:	2000000c 	.word	0x2000000c
  4059dc:	2000043c 	.word	0x2000043c

004059e0 <__ascii_wctomb>:
  4059e0:	b121      	cbz	r1, 4059ec <__ascii_wctomb+0xc>
  4059e2:	2aff      	cmp	r2, #255	; 0xff
  4059e4:	d804      	bhi.n	4059f0 <__ascii_wctomb+0x10>
  4059e6:	700a      	strb	r2, [r1, #0]
  4059e8:	2001      	movs	r0, #1
  4059ea:	4770      	bx	lr
  4059ec:	4608      	mov	r0, r1
  4059ee:	4770      	bx	lr
  4059f0:	238a      	movs	r3, #138	; 0x8a
  4059f2:	6003      	str	r3, [r0, #0]
  4059f4:	f04f 30ff 	mov.w	r0, #4294967295
  4059f8:	4770      	bx	lr
  4059fa:	bf00      	nop

004059fc <_write_r>:
  4059fc:	b570      	push	{r4, r5, r6, lr}
  4059fe:	460d      	mov	r5, r1
  405a00:	4c08      	ldr	r4, [pc, #32]	; (405a24 <_write_r+0x28>)
  405a02:	4611      	mov	r1, r2
  405a04:	4606      	mov	r6, r0
  405a06:	461a      	mov	r2, r3
  405a08:	4628      	mov	r0, r5
  405a0a:	2300      	movs	r3, #0
  405a0c:	6023      	str	r3, [r4, #0]
  405a0e:	f7fa fc93 	bl	400338 <_write>
  405a12:	1c43      	adds	r3, r0, #1
  405a14:	d000      	beq.n	405a18 <_write_r+0x1c>
  405a16:	bd70      	pop	{r4, r5, r6, pc}
  405a18:	6823      	ldr	r3, [r4, #0]
  405a1a:	2b00      	cmp	r3, #0
  405a1c:	d0fb      	beq.n	405a16 <_write_r+0x1a>
  405a1e:	6033      	str	r3, [r6, #0]
  405a20:	bd70      	pop	{r4, r5, r6, pc}
  405a22:	bf00      	nop
  405a24:	20008df8 	.word	0x20008df8

00405a28 <__register_exitproc>:
  405a28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405a2c:	4d2c      	ldr	r5, [pc, #176]	; (405ae0 <__register_exitproc+0xb8>)
  405a2e:	4606      	mov	r6, r0
  405a30:	6828      	ldr	r0, [r5, #0]
  405a32:	4698      	mov	r8, r3
  405a34:	460f      	mov	r7, r1
  405a36:	4691      	mov	r9, r2
  405a38:	f7ff f83a 	bl	404ab0 <__retarget_lock_acquire_recursive>
  405a3c:	4b29      	ldr	r3, [pc, #164]	; (405ae4 <__register_exitproc+0xbc>)
  405a3e:	681c      	ldr	r4, [r3, #0]
  405a40:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405a44:	2b00      	cmp	r3, #0
  405a46:	d03e      	beq.n	405ac6 <__register_exitproc+0x9e>
  405a48:	685a      	ldr	r2, [r3, #4]
  405a4a:	2a1f      	cmp	r2, #31
  405a4c:	dc1c      	bgt.n	405a88 <__register_exitproc+0x60>
  405a4e:	f102 0e01 	add.w	lr, r2, #1
  405a52:	b176      	cbz	r6, 405a72 <__register_exitproc+0x4a>
  405a54:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405a58:	2401      	movs	r4, #1
  405a5a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  405a5e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405a62:	4094      	lsls	r4, r2
  405a64:	4320      	orrs	r0, r4
  405a66:	2e02      	cmp	r6, #2
  405a68:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  405a6c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405a70:	d023      	beq.n	405aba <__register_exitproc+0x92>
  405a72:	3202      	adds	r2, #2
  405a74:	f8c3 e004 	str.w	lr, [r3, #4]
  405a78:	6828      	ldr	r0, [r5, #0]
  405a7a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  405a7e:	f7ff f819 	bl	404ab4 <__retarget_lock_release_recursive>
  405a82:	2000      	movs	r0, #0
  405a84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405a88:	4b17      	ldr	r3, [pc, #92]	; (405ae8 <__register_exitproc+0xc0>)
  405a8a:	b30b      	cbz	r3, 405ad0 <__register_exitproc+0xa8>
  405a8c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405a90:	f7ff f88a 	bl	404ba8 <malloc>
  405a94:	4603      	mov	r3, r0
  405a96:	b1d8      	cbz	r0, 405ad0 <__register_exitproc+0xa8>
  405a98:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405a9c:	6002      	str	r2, [r0, #0]
  405a9e:	2100      	movs	r1, #0
  405aa0:	6041      	str	r1, [r0, #4]
  405aa2:	460a      	mov	r2, r1
  405aa4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405aa8:	f04f 0e01 	mov.w	lr, #1
  405aac:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405ab0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405ab4:	2e00      	cmp	r6, #0
  405ab6:	d0dc      	beq.n	405a72 <__register_exitproc+0x4a>
  405ab8:	e7cc      	b.n	405a54 <__register_exitproc+0x2c>
  405aba:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  405abe:	430c      	orrs	r4, r1
  405ac0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405ac4:	e7d5      	b.n	405a72 <__register_exitproc+0x4a>
  405ac6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  405aca:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  405ace:	e7bb      	b.n	405a48 <__register_exitproc+0x20>
  405ad0:	6828      	ldr	r0, [r5, #0]
  405ad2:	f7fe ffef 	bl	404ab4 <__retarget_lock_release_recursive>
  405ad6:	f04f 30ff 	mov.w	r0, #4294967295
  405ada:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405ade:	bf00      	nop
  405ae0:	20000438 	.word	0x20000438
  405ae4:	00406170 	.word	0x00406170
  405ae8:	00404ba9 	.word	0x00404ba9

00405aec <_close_r>:
  405aec:	b538      	push	{r3, r4, r5, lr}
  405aee:	4c07      	ldr	r4, [pc, #28]	; (405b0c <_close_r+0x20>)
  405af0:	2300      	movs	r3, #0
  405af2:	4605      	mov	r5, r0
  405af4:	4608      	mov	r0, r1
  405af6:	6023      	str	r3, [r4, #0]
  405af8:	f7fb f89a 	bl	400c30 <_close>
  405afc:	1c43      	adds	r3, r0, #1
  405afe:	d000      	beq.n	405b02 <_close_r+0x16>
  405b00:	bd38      	pop	{r3, r4, r5, pc}
  405b02:	6823      	ldr	r3, [r4, #0]
  405b04:	2b00      	cmp	r3, #0
  405b06:	d0fb      	beq.n	405b00 <_close_r+0x14>
  405b08:	602b      	str	r3, [r5, #0]
  405b0a:	bd38      	pop	{r3, r4, r5, pc}
  405b0c:	20008df8 	.word	0x20008df8

00405b10 <_fclose_r>:
  405b10:	b570      	push	{r4, r5, r6, lr}
  405b12:	b159      	cbz	r1, 405b2c <_fclose_r+0x1c>
  405b14:	4605      	mov	r5, r0
  405b16:	460c      	mov	r4, r1
  405b18:	b110      	cbz	r0, 405b20 <_fclose_r+0x10>
  405b1a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405b1c:	2b00      	cmp	r3, #0
  405b1e:	d03c      	beq.n	405b9a <_fclose_r+0x8a>
  405b20:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405b22:	07d8      	lsls	r0, r3, #31
  405b24:	d505      	bpl.n	405b32 <_fclose_r+0x22>
  405b26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405b2a:	b92b      	cbnz	r3, 405b38 <_fclose_r+0x28>
  405b2c:	2600      	movs	r6, #0
  405b2e:	4630      	mov	r0, r6
  405b30:	bd70      	pop	{r4, r5, r6, pc}
  405b32:	89a3      	ldrh	r3, [r4, #12]
  405b34:	0599      	lsls	r1, r3, #22
  405b36:	d53c      	bpl.n	405bb2 <_fclose_r+0xa2>
  405b38:	4621      	mov	r1, r4
  405b3a:	4628      	mov	r0, r5
  405b3c:	f7fe fb00 	bl	404140 <__sflush_r>
  405b40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  405b42:	4606      	mov	r6, r0
  405b44:	b133      	cbz	r3, 405b54 <_fclose_r+0x44>
  405b46:	69e1      	ldr	r1, [r4, #28]
  405b48:	4628      	mov	r0, r5
  405b4a:	4798      	blx	r3
  405b4c:	2800      	cmp	r0, #0
  405b4e:	bfb8      	it	lt
  405b50:	f04f 36ff 	movlt.w	r6, #4294967295
  405b54:	89a3      	ldrh	r3, [r4, #12]
  405b56:	061a      	lsls	r2, r3, #24
  405b58:	d422      	bmi.n	405ba0 <_fclose_r+0x90>
  405b5a:	6b21      	ldr	r1, [r4, #48]	; 0x30
  405b5c:	b141      	cbz	r1, 405b70 <_fclose_r+0x60>
  405b5e:	f104 0340 	add.w	r3, r4, #64	; 0x40
  405b62:	4299      	cmp	r1, r3
  405b64:	d002      	beq.n	405b6c <_fclose_r+0x5c>
  405b66:	4628      	mov	r0, r5
  405b68:	f7fe fd08 	bl	40457c <_free_r>
  405b6c:	2300      	movs	r3, #0
  405b6e:	6323      	str	r3, [r4, #48]	; 0x30
  405b70:	6c61      	ldr	r1, [r4, #68]	; 0x44
  405b72:	b121      	cbz	r1, 405b7e <_fclose_r+0x6e>
  405b74:	4628      	mov	r0, r5
  405b76:	f7fe fd01 	bl	40457c <_free_r>
  405b7a:	2300      	movs	r3, #0
  405b7c:	6463      	str	r3, [r4, #68]	; 0x44
  405b7e:	f7fe fc03 	bl	404388 <__sfp_lock_acquire>
  405b82:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405b84:	2200      	movs	r2, #0
  405b86:	07db      	lsls	r3, r3, #31
  405b88:	81a2      	strh	r2, [r4, #12]
  405b8a:	d50e      	bpl.n	405baa <_fclose_r+0x9a>
  405b8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405b8e:	f7fe ff8d 	bl	404aac <__retarget_lock_close_recursive>
  405b92:	f7fe fbff 	bl	404394 <__sfp_lock_release>
  405b96:	4630      	mov	r0, r6
  405b98:	bd70      	pop	{r4, r5, r6, pc}
  405b9a:	f7fe fbc9 	bl	404330 <__sinit>
  405b9e:	e7bf      	b.n	405b20 <_fclose_r+0x10>
  405ba0:	6921      	ldr	r1, [r4, #16]
  405ba2:	4628      	mov	r0, r5
  405ba4:	f7fe fcea 	bl	40457c <_free_r>
  405ba8:	e7d7      	b.n	405b5a <_fclose_r+0x4a>
  405baa:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405bac:	f7fe ff82 	bl	404ab4 <__retarget_lock_release_recursive>
  405bb0:	e7ec      	b.n	405b8c <_fclose_r+0x7c>
  405bb2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405bb4:	f7fe ff7c 	bl	404ab0 <__retarget_lock_acquire_recursive>
  405bb8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405bbc:	2b00      	cmp	r3, #0
  405bbe:	d1bb      	bne.n	405b38 <_fclose_r+0x28>
  405bc0:	6e66      	ldr	r6, [r4, #100]	; 0x64
  405bc2:	f016 0601 	ands.w	r6, r6, #1
  405bc6:	d1b1      	bne.n	405b2c <_fclose_r+0x1c>
  405bc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405bca:	f7fe ff73 	bl	404ab4 <__retarget_lock_release_recursive>
  405bce:	4630      	mov	r0, r6
  405bd0:	bd70      	pop	{r4, r5, r6, pc}
  405bd2:	bf00      	nop

00405bd4 <_fstat_r>:
  405bd4:	b538      	push	{r3, r4, r5, lr}
  405bd6:	460b      	mov	r3, r1
  405bd8:	4c07      	ldr	r4, [pc, #28]	; (405bf8 <_fstat_r+0x24>)
  405bda:	4605      	mov	r5, r0
  405bdc:	4611      	mov	r1, r2
  405bde:	4618      	mov	r0, r3
  405be0:	2300      	movs	r3, #0
  405be2:	6023      	str	r3, [r4, #0]
  405be4:	f7fb f827 	bl	400c36 <_fstat>
  405be8:	1c43      	adds	r3, r0, #1
  405bea:	d000      	beq.n	405bee <_fstat_r+0x1a>
  405bec:	bd38      	pop	{r3, r4, r5, pc}
  405bee:	6823      	ldr	r3, [r4, #0]
  405bf0:	2b00      	cmp	r3, #0
  405bf2:	d0fb      	beq.n	405bec <_fstat_r+0x18>
  405bf4:	602b      	str	r3, [r5, #0]
  405bf6:	bd38      	pop	{r3, r4, r5, pc}
  405bf8:	20008df8 	.word	0x20008df8

00405bfc <_isatty_r>:
  405bfc:	b538      	push	{r3, r4, r5, lr}
  405bfe:	4c07      	ldr	r4, [pc, #28]	; (405c1c <_isatty_r+0x20>)
  405c00:	2300      	movs	r3, #0
  405c02:	4605      	mov	r5, r0
  405c04:	4608      	mov	r0, r1
  405c06:	6023      	str	r3, [r4, #0]
  405c08:	f7fb f81a 	bl	400c40 <_isatty>
  405c0c:	1c43      	adds	r3, r0, #1
  405c0e:	d000      	beq.n	405c12 <_isatty_r+0x16>
  405c10:	bd38      	pop	{r3, r4, r5, pc}
  405c12:	6823      	ldr	r3, [r4, #0]
  405c14:	2b00      	cmp	r3, #0
  405c16:	d0fb      	beq.n	405c10 <_isatty_r+0x14>
  405c18:	602b      	str	r3, [r5, #0]
  405c1a:	bd38      	pop	{r3, r4, r5, pc}
  405c1c:	20008df8 	.word	0x20008df8

00405c20 <_lseek_r>:
  405c20:	b570      	push	{r4, r5, r6, lr}
  405c22:	460d      	mov	r5, r1
  405c24:	4c08      	ldr	r4, [pc, #32]	; (405c48 <_lseek_r+0x28>)
  405c26:	4611      	mov	r1, r2
  405c28:	4606      	mov	r6, r0
  405c2a:	461a      	mov	r2, r3
  405c2c:	4628      	mov	r0, r5
  405c2e:	2300      	movs	r3, #0
  405c30:	6023      	str	r3, [r4, #0]
  405c32:	f7fb f807 	bl	400c44 <_lseek>
  405c36:	1c43      	adds	r3, r0, #1
  405c38:	d000      	beq.n	405c3c <_lseek_r+0x1c>
  405c3a:	bd70      	pop	{r4, r5, r6, pc}
  405c3c:	6823      	ldr	r3, [r4, #0]
  405c3e:	2b00      	cmp	r3, #0
  405c40:	d0fb      	beq.n	405c3a <_lseek_r+0x1a>
  405c42:	6033      	str	r3, [r6, #0]
  405c44:	bd70      	pop	{r4, r5, r6, pc}
  405c46:	bf00      	nop
  405c48:	20008df8 	.word	0x20008df8

00405c4c <_read_r>:
  405c4c:	b570      	push	{r4, r5, r6, lr}
  405c4e:	460d      	mov	r5, r1
  405c50:	4c08      	ldr	r4, [pc, #32]	; (405c74 <_read_r+0x28>)
  405c52:	4611      	mov	r1, r2
  405c54:	4606      	mov	r6, r0
  405c56:	461a      	mov	r2, r3
  405c58:	4628      	mov	r0, r5
  405c5a:	2300      	movs	r3, #0
  405c5c:	6023      	str	r3, [r4, #0]
  405c5e:	f7fa fb4d 	bl	4002fc <_read>
  405c62:	1c43      	adds	r3, r0, #1
  405c64:	d000      	beq.n	405c68 <_read_r+0x1c>
  405c66:	bd70      	pop	{r4, r5, r6, pc}
  405c68:	6823      	ldr	r3, [r4, #0]
  405c6a:	2b00      	cmp	r3, #0
  405c6c:	d0fb      	beq.n	405c66 <_read_r+0x1a>
  405c6e:	6033      	str	r3, [r6, #0]
  405c70:	bd70      	pop	{r4, r5, r6, pc}
  405c72:	bf00      	nop
  405c74:	20008df8 	.word	0x20008df8

00405c78 <__aeabi_uldivmod>:
  405c78:	b953      	cbnz	r3, 405c90 <__aeabi_uldivmod+0x18>
  405c7a:	b94a      	cbnz	r2, 405c90 <__aeabi_uldivmod+0x18>
  405c7c:	2900      	cmp	r1, #0
  405c7e:	bf08      	it	eq
  405c80:	2800      	cmpeq	r0, #0
  405c82:	bf1c      	itt	ne
  405c84:	f04f 31ff 	movne.w	r1, #4294967295
  405c88:	f04f 30ff 	movne.w	r0, #4294967295
  405c8c:	f000 b97a 	b.w	405f84 <__aeabi_idiv0>
  405c90:	f1ad 0c08 	sub.w	ip, sp, #8
  405c94:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405c98:	f000 f806 	bl	405ca8 <__udivmoddi4>
  405c9c:	f8dd e004 	ldr.w	lr, [sp, #4]
  405ca0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405ca4:	b004      	add	sp, #16
  405ca6:	4770      	bx	lr

00405ca8 <__udivmoddi4>:
  405ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405cac:	468c      	mov	ip, r1
  405cae:	460d      	mov	r5, r1
  405cb0:	4604      	mov	r4, r0
  405cb2:	9e08      	ldr	r6, [sp, #32]
  405cb4:	2b00      	cmp	r3, #0
  405cb6:	d151      	bne.n	405d5c <__udivmoddi4+0xb4>
  405cb8:	428a      	cmp	r2, r1
  405cba:	4617      	mov	r7, r2
  405cbc:	d96d      	bls.n	405d9a <__udivmoddi4+0xf2>
  405cbe:	fab2 fe82 	clz	lr, r2
  405cc2:	f1be 0f00 	cmp.w	lr, #0
  405cc6:	d00b      	beq.n	405ce0 <__udivmoddi4+0x38>
  405cc8:	f1ce 0c20 	rsb	ip, lr, #32
  405ccc:	fa01 f50e 	lsl.w	r5, r1, lr
  405cd0:	fa20 fc0c 	lsr.w	ip, r0, ip
  405cd4:	fa02 f70e 	lsl.w	r7, r2, lr
  405cd8:	ea4c 0c05 	orr.w	ip, ip, r5
  405cdc:	fa00 f40e 	lsl.w	r4, r0, lr
  405ce0:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405ce4:	0c25      	lsrs	r5, r4, #16
  405ce6:	fbbc f8fa 	udiv	r8, ip, sl
  405cea:	fa1f f987 	uxth.w	r9, r7
  405cee:	fb0a cc18 	mls	ip, sl, r8, ip
  405cf2:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  405cf6:	fb08 f309 	mul.w	r3, r8, r9
  405cfa:	42ab      	cmp	r3, r5
  405cfc:	d90a      	bls.n	405d14 <__udivmoddi4+0x6c>
  405cfe:	19ed      	adds	r5, r5, r7
  405d00:	f108 32ff 	add.w	r2, r8, #4294967295
  405d04:	f080 8123 	bcs.w	405f4e <__udivmoddi4+0x2a6>
  405d08:	42ab      	cmp	r3, r5
  405d0a:	f240 8120 	bls.w	405f4e <__udivmoddi4+0x2a6>
  405d0e:	f1a8 0802 	sub.w	r8, r8, #2
  405d12:	443d      	add	r5, r7
  405d14:	1aed      	subs	r5, r5, r3
  405d16:	b2a4      	uxth	r4, r4
  405d18:	fbb5 f0fa 	udiv	r0, r5, sl
  405d1c:	fb0a 5510 	mls	r5, sl, r0, r5
  405d20:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  405d24:	fb00 f909 	mul.w	r9, r0, r9
  405d28:	45a1      	cmp	r9, r4
  405d2a:	d909      	bls.n	405d40 <__udivmoddi4+0x98>
  405d2c:	19e4      	adds	r4, r4, r7
  405d2e:	f100 33ff 	add.w	r3, r0, #4294967295
  405d32:	f080 810a 	bcs.w	405f4a <__udivmoddi4+0x2a2>
  405d36:	45a1      	cmp	r9, r4
  405d38:	f240 8107 	bls.w	405f4a <__udivmoddi4+0x2a2>
  405d3c:	3802      	subs	r0, #2
  405d3e:	443c      	add	r4, r7
  405d40:	eba4 0409 	sub.w	r4, r4, r9
  405d44:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405d48:	2100      	movs	r1, #0
  405d4a:	2e00      	cmp	r6, #0
  405d4c:	d061      	beq.n	405e12 <__udivmoddi4+0x16a>
  405d4e:	fa24 f40e 	lsr.w	r4, r4, lr
  405d52:	2300      	movs	r3, #0
  405d54:	6034      	str	r4, [r6, #0]
  405d56:	6073      	str	r3, [r6, #4]
  405d58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405d5c:	428b      	cmp	r3, r1
  405d5e:	d907      	bls.n	405d70 <__udivmoddi4+0xc8>
  405d60:	2e00      	cmp	r6, #0
  405d62:	d054      	beq.n	405e0e <__udivmoddi4+0x166>
  405d64:	2100      	movs	r1, #0
  405d66:	e886 0021 	stmia.w	r6, {r0, r5}
  405d6a:	4608      	mov	r0, r1
  405d6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405d70:	fab3 f183 	clz	r1, r3
  405d74:	2900      	cmp	r1, #0
  405d76:	f040 808e 	bne.w	405e96 <__udivmoddi4+0x1ee>
  405d7a:	42ab      	cmp	r3, r5
  405d7c:	d302      	bcc.n	405d84 <__udivmoddi4+0xdc>
  405d7e:	4282      	cmp	r2, r0
  405d80:	f200 80fa 	bhi.w	405f78 <__udivmoddi4+0x2d0>
  405d84:	1a84      	subs	r4, r0, r2
  405d86:	eb65 0503 	sbc.w	r5, r5, r3
  405d8a:	2001      	movs	r0, #1
  405d8c:	46ac      	mov	ip, r5
  405d8e:	2e00      	cmp	r6, #0
  405d90:	d03f      	beq.n	405e12 <__udivmoddi4+0x16a>
  405d92:	e886 1010 	stmia.w	r6, {r4, ip}
  405d96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405d9a:	b912      	cbnz	r2, 405da2 <__udivmoddi4+0xfa>
  405d9c:	2701      	movs	r7, #1
  405d9e:	fbb7 f7f2 	udiv	r7, r7, r2
  405da2:	fab7 fe87 	clz	lr, r7
  405da6:	f1be 0f00 	cmp.w	lr, #0
  405daa:	d134      	bne.n	405e16 <__udivmoddi4+0x16e>
  405dac:	1beb      	subs	r3, r5, r7
  405dae:	0c3a      	lsrs	r2, r7, #16
  405db0:	fa1f fc87 	uxth.w	ip, r7
  405db4:	2101      	movs	r1, #1
  405db6:	fbb3 f8f2 	udiv	r8, r3, r2
  405dba:	0c25      	lsrs	r5, r4, #16
  405dbc:	fb02 3318 	mls	r3, r2, r8, r3
  405dc0:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405dc4:	fb0c f308 	mul.w	r3, ip, r8
  405dc8:	42ab      	cmp	r3, r5
  405dca:	d907      	bls.n	405ddc <__udivmoddi4+0x134>
  405dcc:	19ed      	adds	r5, r5, r7
  405dce:	f108 30ff 	add.w	r0, r8, #4294967295
  405dd2:	d202      	bcs.n	405dda <__udivmoddi4+0x132>
  405dd4:	42ab      	cmp	r3, r5
  405dd6:	f200 80d1 	bhi.w	405f7c <__udivmoddi4+0x2d4>
  405dda:	4680      	mov	r8, r0
  405ddc:	1aed      	subs	r5, r5, r3
  405dde:	b2a3      	uxth	r3, r4
  405de0:	fbb5 f0f2 	udiv	r0, r5, r2
  405de4:	fb02 5510 	mls	r5, r2, r0, r5
  405de8:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  405dec:	fb0c fc00 	mul.w	ip, ip, r0
  405df0:	45a4      	cmp	ip, r4
  405df2:	d907      	bls.n	405e04 <__udivmoddi4+0x15c>
  405df4:	19e4      	adds	r4, r4, r7
  405df6:	f100 33ff 	add.w	r3, r0, #4294967295
  405dfa:	d202      	bcs.n	405e02 <__udivmoddi4+0x15a>
  405dfc:	45a4      	cmp	ip, r4
  405dfe:	f200 80b8 	bhi.w	405f72 <__udivmoddi4+0x2ca>
  405e02:	4618      	mov	r0, r3
  405e04:	eba4 040c 	sub.w	r4, r4, ip
  405e08:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405e0c:	e79d      	b.n	405d4a <__udivmoddi4+0xa2>
  405e0e:	4631      	mov	r1, r6
  405e10:	4630      	mov	r0, r6
  405e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405e16:	f1ce 0420 	rsb	r4, lr, #32
  405e1a:	fa05 f30e 	lsl.w	r3, r5, lr
  405e1e:	fa07 f70e 	lsl.w	r7, r7, lr
  405e22:	fa20 f804 	lsr.w	r8, r0, r4
  405e26:	0c3a      	lsrs	r2, r7, #16
  405e28:	fa25 f404 	lsr.w	r4, r5, r4
  405e2c:	ea48 0803 	orr.w	r8, r8, r3
  405e30:	fbb4 f1f2 	udiv	r1, r4, r2
  405e34:	ea4f 4518 	mov.w	r5, r8, lsr #16
  405e38:	fb02 4411 	mls	r4, r2, r1, r4
  405e3c:	fa1f fc87 	uxth.w	ip, r7
  405e40:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  405e44:	fb01 f30c 	mul.w	r3, r1, ip
  405e48:	42ab      	cmp	r3, r5
  405e4a:	fa00 f40e 	lsl.w	r4, r0, lr
  405e4e:	d909      	bls.n	405e64 <__udivmoddi4+0x1bc>
  405e50:	19ed      	adds	r5, r5, r7
  405e52:	f101 30ff 	add.w	r0, r1, #4294967295
  405e56:	f080 808a 	bcs.w	405f6e <__udivmoddi4+0x2c6>
  405e5a:	42ab      	cmp	r3, r5
  405e5c:	f240 8087 	bls.w	405f6e <__udivmoddi4+0x2c6>
  405e60:	3902      	subs	r1, #2
  405e62:	443d      	add	r5, r7
  405e64:	1aeb      	subs	r3, r5, r3
  405e66:	fa1f f588 	uxth.w	r5, r8
  405e6a:	fbb3 f0f2 	udiv	r0, r3, r2
  405e6e:	fb02 3310 	mls	r3, r2, r0, r3
  405e72:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405e76:	fb00 f30c 	mul.w	r3, r0, ip
  405e7a:	42ab      	cmp	r3, r5
  405e7c:	d907      	bls.n	405e8e <__udivmoddi4+0x1e6>
  405e7e:	19ed      	adds	r5, r5, r7
  405e80:	f100 38ff 	add.w	r8, r0, #4294967295
  405e84:	d26f      	bcs.n	405f66 <__udivmoddi4+0x2be>
  405e86:	42ab      	cmp	r3, r5
  405e88:	d96d      	bls.n	405f66 <__udivmoddi4+0x2be>
  405e8a:	3802      	subs	r0, #2
  405e8c:	443d      	add	r5, r7
  405e8e:	1aeb      	subs	r3, r5, r3
  405e90:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  405e94:	e78f      	b.n	405db6 <__udivmoddi4+0x10e>
  405e96:	f1c1 0720 	rsb	r7, r1, #32
  405e9a:	fa22 f807 	lsr.w	r8, r2, r7
  405e9e:	408b      	lsls	r3, r1
  405ea0:	fa05 f401 	lsl.w	r4, r5, r1
  405ea4:	ea48 0303 	orr.w	r3, r8, r3
  405ea8:	fa20 fe07 	lsr.w	lr, r0, r7
  405eac:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  405eb0:	40fd      	lsrs	r5, r7
  405eb2:	ea4e 0e04 	orr.w	lr, lr, r4
  405eb6:	fbb5 f9fc 	udiv	r9, r5, ip
  405eba:	ea4f 441e 	mov.w	r4, lr, lsr #16
  405ebe:	fb0c 5519 	mls	r5, ip, r9, r5
  405ec2:	fa1f f883 	uxth.w	r8, r3
  405ec6:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  405eca:	fb09 f408 	mul.w	r4, r9, r8
  405ece:	42ac      	cmp	r4, r5
  405ed0:	fa02 f201 	lsl.w	r2, r2, r1
  405ed4:	fa00 fa01 	lsl.w	sl, r0, r1
  405ed8:	d908      	bls.n	405eec <__udivmoddi4+0x244>
  405eda:	18ed      	adds	r5, r5, r3
  405edc:	f109 30ff 	add.w	r0, r9, #4294967295
  405ee0:	d243      	bcs.n	405f6a <__udivmoddi4+0x2c2>
  405ee2:	42ac      	cmp	r4, r5
  405ee4:	d941      	bls.n	405f6a <__udivmoddi4+0x2c2>
  405ee6:	f1a9 0902 	sub.w	r9, r9, #2
  405eea:	441d      	add	r5, r3
  405eec:	1b2d      	subs	r5, r5, r4
  405eee:	fa1f fe8e 	uxth.w	lr, lr
  405ef2:	fbb5 f0fc 	udiv	r0, r5, ip
  405ef6:	fb0c 5510 	mls	r5, ip, r0, r5
  405efa:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  405efe:	fb00 f808 	mul.w	r8, r0, r8
  405f02:	45a0      	cmp	r8, r4
  405f04:	d907      	bls.n	405f16 <__udivmoddi4+0x26e>
  405f06:	18e4      	adds	r4, r4, r3
  405f08:	f100 35ff 	add.w	r5, r0, #4294967295
  405f0c:	d229      	bcs.n	405f62 <__udivmoddi4+0x2ba>
  405f0e:	45a0      	cmp	r8, r4
  405f10:	d927      	bls.n	405f62 <__udivmoddi4+0x2ba>
  405f12:	3802      	subs	r0, #2
  405f14:	441c      	add	r4, r3
  405f16:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  405f1a:	eba4 0408 	sub.w	r4, r4, r8
  405f1e:	fba0 8902 	umull	r8, r9, r0, r2
  405f22:	454c      	cmp	r4, r9
  405f24:	46c6      	mov	lr, r8
  405f26:	464d      	mov	r5, r9
  405f28:	d315      	bcc.n	405f56 <__udivmoddi4+0x2ae>
  405f2a:	d012      	beq.n	405f52 <__udivmoddi4+0x2aa>
  405f2c:	b156      	cbz	r6, 405f44 <__udivmoddi4+0x29c>
  405f2e:	ebba 030e 	subs.w	r3, sl, lr
  405f32:	eb64 0405 	sbc.w	r4, r4, r5
  405f36:	fa04 f707 	lsl.w	r7, r4, r7
  405f3a:	40cb      	lsrs	r3, r1
  405f3c:	431f      	orrs	r7, r3
  405f3e:	40cc      	lsrs	r4, r1
  405f40:	6037      	str	r7, [r6, #0]
  405f42:	6074      	str	r4, [r6, #4]
  405f44:	2100      	movs	r1, #0
  405f46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f4a:	4618      	mov	r0, r3
  405f4c:	e6f8      	b.n	405d40 <__udivmoddi4+0x98>
  405f4e:	4690      	mov	r8, r2
  405f50:	e6e0      	b.n	405d14 <__udivmoddi4+0x6c>
  405f52:	45c2      	cmp	sl, r8
  405f54:	d2ea      	bcs.n	405f2c <__udivmoddi4+0x284>
  405f56:	ebb8 0e02 	subs.w	lr, r8, r2
  405f5a:	eb69 0503 	sbc.w	r5, r9, r3
  405f5e:	3801      	subs	r0, #1
  405f60:	e7e4      	b.n	405f2c <__udivmoddi4+0x284>
  405f62:	4628      	mov	r0, r5
  405f64:	e7d7      	b.n	405f16 <__udivmoddi4+0x26e>
  405f66:	4640      	mov	r0, r8
  405f68:	e791      	b.n	405e8e <__udivmoddi4+0x1e6>
  405f6a:	4681      	mov	r9, r0
  405f6c:	e7be      	b.n	405eec <__udivmoddi4+0x244>
  405f6e:	4601      	mov	r1, r0
  405f70:	e778      	b.n	405e64 <__udivmoddi4+0x1bc>
  405f72:	3802      	subs	r0, #2
  405f74:	443c      	add	r4, r7
  405f76:	e745      	b.n	405e04 <__udivmoddi4+0x15c>
  405f78:	4608      	mov	r0, r1
  405f7a:	e708      	b.n	405d8e <__udivmoddi4+0xe6>
  405f7c:	f1a8 0802 	sub.w	r8, r8, #2
  405f80:	443d      	add	r5, r7
  405f82:	e72b      	b.n	405ddc <__udivmoddi4+0x134>

00405f84 <__aeabi_idiv0>:
  405f84:	4770      	bx	lr
  405f86:	bf00      	nop
  405f88:	0000002e 	.word	0x0000002e
  405f8c:	252e6425 	.word	0x252e6425
  405f90:	000d0a64 	.word	0x000d0a64
  405f94:	4d504220 	.word	0x4d504220
  405f98:	2030382d 	.word	0x2030382d
  405f9c:	6d616562 	.word	0x6d616562
  405fa0:	61686320 	.word	0x61686320
  405fa4:	74636172 	.word	0x74636172
  405fa8:	73697265 	.word	0x73697265
  405fac:	73636974 	.word	0x73636974
  405fb0:	000d0a20 	.word	0x000d0a20
  405fb4:	2a2a2a2a 	.word	0x2a2a2a2a
  405fb8:	2a2a2a2a 	.word	0x2a2a2a2a
  405fbc:	2a2a2a2a 	.word	0x2a2a2a2a
  405fc0:	2a2a2a2a 	.word	0x2a2a2a2a
  405fc4:	2a2a2a2a 	.word	0x2a2a2a2a
  405fc8:	2a2a2a2a 	.word	0x2a2a2a2a
  405fcc:	2a2a2a2a 	.word	0x2a2a2a2a
  405fd0:	2a2a2a2a 	.word	0x2a2a2a2a
  405fd4:	2a2a2a2a 	.word	0x2a2a2a2a
  405fd8:	2a2a2a2a 	.word	0x2a2a2a2a
  405fdc:	2a2a2a2a 	.word	0x2a2a2a2a
  405fe0:	2a2a2a2a 	.word	0x2a2a2a2a
  405fe4:	000d0d0a 	.word	0x000d0d0a
  405fe8:	6b616550 	.word	0x6b616550
  405fec:	636f6c20 	.word	0x636f6c20
  405ff0:	7a696c61 	.word	0x7a696c61
  405ff4:	6f697461 	.word	0x6f697461
  405ff8:	203a206e 	.word	0x203a206e
  405ffc:	000d0a0a 	.word	0x000d0a0a
  406000:	2d2d2d2d 	.word	0x2d2d2d2d
  406004:	2d2d2d2d 	.word	0x2d2d2d2d
  406008:	2d2d2d2d 	.word	0x2d2d2d2d
  40600c:	2d2d2d2d 	.word	0x2d2d2d2d
  406010:	2d2d2d2d 	.word	0x2d2d2d2d
  406014:	2d2d2d2d 	.word	0x2d2d2d2d
  406018:	2d2d2d2d 	.word	0x2d2d2d2d
  40601c:	2d2d2d2d 	.word	0x2d2d2d2d
  406020:	2d2d2d2d 	.word	0x2d2d2d2d
  406024:	0a2d2d2d 	.word	0x0a2d2d2d
  406028:	00000d0a 	.word	0x00000d0a
  40602c:	6b616550 	.word	0x6b616550
  406030:	70205820 	.word	0x70205820
  406034:	616e6e69 	.word	0x616e6e69
  406038:	20656c63 	.word	0x20656c63
  40603c:	7525203a 	.word	0x7525203a
  406040:	000d0a20 	.word	0x000d0a20
  406044:	6b616550 	.word	0x6b616550
  406048:	73205820 	.word	0x73205820
  40604c:	74726174 	.word	0x74726174
  406050:	20202020 	.word	0x20202020
  406054:	7525203a 	.word	0x7525203a
  406058:	000d0a20 	.word	0x000d0a20
  40605c:	6b616550 	.word	0x6b616550
  406060:	65205820 	.word	0x65205820
  406064:	2020646e 	.word	0x2020646e
  406068:	20202020 	.word	0x20202020
  40606c:	7525203a 	.word	0x7525203a
  406070:	0d0a0a20 	.word	0x0d0a0a20
  406074:	0000000d 	.word	0x0000000d
  406078:	6b616550 	.word	0x6b616550
  40607c:	70205920 	.word	0x70205920
  406080:	616e6e69 	.word	0x616e6e69
  406084:	20656c63 	.word	0x20656c63
  406088:	7525203a 	.word	0x7525203a
  40608c:	000d0a20 	.word	0x000d0a20
  406090:	6b616550 	.word	0x6b616550
  406094:	73205920 	.word	0x73205920
  406098:	74726174 	.word	0x74726174
  40609c:	20202020 	.word	0x20202020
  4060a0:	7525203a 	.word	0x7525203a
  4060a4:	000d0a20 	.word	0x000d0a20
  4060a8:	6b616550 	.word	0x6b616550
  4060ac:	65205920 	.word	0x65205920
  4060b0:	2020646e 	.word	0x2020646e
  4060b4:	20202020 	.word	0x20202020
  4060b8:	7525203a 	.word	0x7525203a
  4060bc:	0d0a0a20 	.word	0x0d0a0a20
  4060c0:	0000000d 	.word	0x0000000d
  4060c4:	6d616542 	.word	0x6d616542
  4060c8:	746e6920 	.word	0x746e6920
  4060cc:	69736e65 	.word	0x69736e65
  4060d0:	70207974 	.word	0x70207974
  4060d4:	69666f72 	.word	0x69666f72
  4060d8:	3a20656c 	.word	0x3a20656c
  4060dc:	0d0a0a20 	.word	0x0d0a0a20
  4060e0:	00000000 	.word	0x00000000
  4060e4:	6e692058 	.word	0x6e692058
  4060e8:	736e6574 	.word	0x736e6574
  4060ec:	20797469 	.word	0x20797469
  4060f0:	7525203a 	.word	0x7525203a
  4060f4:	000d0a20 	.word	0x000d0a20
  4060f8:	6e692059 	.word	0x6e692059
  4060fc:	736e6574 	.word	0x736e6574
  406100:	20797469 	.word	0x20797469
  406104:	7525203a 	.word	0x7525203a
  406108:	000d0a20 	.word	0x000d0a20
  40610c:	61746f54 	.word	0x61746f54
  406110:	6e69206c 	.word	0x6e69206c
  406114:	736e6574 	.word	0x736e6574
  406118:	20797469 	.word	0x20797469
  40611c:	7525203a 	.word	0x7525203a
  406120:	0d0a0a20 	.word	0x0d0a0a20
  406124:	0000000d 	.word	0x0000000d
  406128:	6d616542 	.word	0x6d616542
  40612c:	656b7320 	.word	0x656b7320
  406130:	73656e77 	.word	0x73656e77
  406134:	0a203a73 	.word	0x0a203a73
  406138:	00000d0a 	.word	0x00000d0a
  40613c:	6b732058 	.word	0x6b732058
  406140:	656e7765 	.word	0x656e7765
  406144:	3a207373 	.word	0x3a207373
  406148:	00000020 	.word	0x00000020
  40614c:	6b732059 	.word	0x6b732059
  406150:	656e7765 	.word	0x656e7765
  406154:	3a207373 	.word	0x3a207373
  406158:	00000020 	.word	0x00000020
  40615c:	00776f70 	.word	0x00776f70

00406160 <TWO52>:
  406160:	00000000 43300000 00000000 c3300000     ......0C......0.

00406170 <_global_impure_ptr>:
  406170:	20000010 33323130 37363534 42413938     ... 0123456789AB
  406180:	46454443 00000000 33323130 37363534     CDEF....01234567
  406190:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  4061a0:	0000296c                                l)..

004061a4 <blanks.7217>:
  4061a4:	20202020 20202020 20202020 20202020                     

004061b4 <zeroes.7218>:
  4061b4:	30303030 30303030 30303030 30303030     0000000000000000
  4061c4:	00000043 49534f50 00000058              C...POSIX...

004061d0 <_ctype_>:
  4061d0:	20202000 20202020 28282020 20282828     .         ((((( 
  4061e0:	20202020 20202020 20202020 20202020                     
  4061f0:	10108820 10101010 10101010 10101010      ...............
  406200:	04040410 04040404 10040404 10101010     ................
  406210:	41411010 41414141 01010101 01010101     ..AAAAAA........
  406220:	01010101 01010101 01010101 10101010     ................
  406230:	42421010 42424242 02020202 02020202     ..BBBBBB........
  406240:	02020202 02020202 02020202 10101010     ................
  406250:	00000020 00000000 00000000 00000000      ...............
	...

004062d4 <_init>:
  4062d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4062d6:	bf00      	nop
  4062d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4062da:	bc08      	pop	{r3}
  4062dc:	469e      	mov	lr, r3
  4062de:	4770      	bx	lr

004062e0 <__init_array_start>:
  4062e0:	00404121 	.word	0x00404121

004062e4 <__frame_dummy_init_array_entry>:
  4062e4:	0040011d                                ..@.

004062e8 <_fini>:
  4062e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4062ea:	bf00      	nop
  4062ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4062ee:	bc08      	pop	{r3}
  4062f0:	469e      	mov	lr, r3
  4062f2:	4770      	bx	lr

004062f4 <__fini_array_start>:
  4062f4:	004000f9 	.word	0x004000f9
